{
  "version": 3,
  "sources": ["wrangler-modules-watch:wrangler:modules-watch", "../../../node_modules/wrangler/templates/modules-watch-stub.js", "../../../node_modules/helpers/compile/plugins/fill-plugin/fillers/process.ts", "../../../node_modules/helpers/compile/plugins/fill-plugin/fillers/perf_hooks.ts", "../../../node_modules/helpers/compile/plugins/fill-plugin/fillers/function.ts", "../../../node_modules/helpers/compile/plugins/fill-plugin/fillers/weakref.ts", "../../../../../../../tmp/esbuild/buffer5f006e10.js", "../../../node_modules/helpers/compile/plugins/fill-plugin/fillers/buffer.ts", "../../../node_modules/helpers/compile/plugins/fill-plugin/fillers/fs.ts", "../../../node_modules/helpers/compile/plugins/fill-plugin/fillers/path.ts", "../../../node_modules/@prisma/internals/package.json", "../../../node_modules/node_modules/.pnpm/@prisma+engines-version@6.12.0-15.8047c96bbd92db98a2abc7c9323ce77c02c89dbc/node_modules/@prisma/engines-version/package.json", "../../../node_modules/node_modules/.pnpm/@prisma+engines-version@6.12.0-15.8047c96bbd92db98a2abc7c9323ce77c02c89dbc/node_modules/@prisma/engines-version/index.js", "../../../node_modules/node_modules/.pnpm/indent-string@4.0.0/node_modules/indent-string/index.js", "../../../node_modules/node_modules/.pnpm/ansi-regex@5.0.1/node_modules/ansi-regex/index.js", "../../../node_modules/node_modules/.pnpm/strip-ansi@6.0.1/node_modules/strip-ansi/index.js", "../../../node_modules/node_modules/.pnpm/js-levenshtein@1.1.6/node_modules/js-levenshtein/index.js", "../../../node_modules/@prisma/ts-builders/src/TypeBuilder.ts", "../../../node_modules/@prisma/ts-builders/src/KeyType.ts", "../../../node_modules/helpers/compile/plugins/fill-plugin/fillers/events.ts", "../../../node_modules/@prisma/client/src/runtime/index.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/index.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/defineExtension.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/getExtensionContext.ts", "../../../node_modules/@prisma/client/src/runtime/core/public/index.ts", "../../../node_modules/@prisma/client/src/runtime/core/public/validator.ts", "../../../node_modules/@prisma/client/src/runtime/core/errors/PrismaClientInitializationError.ts", "../../../node_modules/@prisma/internals/src/index.ts", "../../../node_modules/node_modules/.pnpm/kleur@4.1.5/node_modules/kleur/colors.mjs", "../../../node_modules/@prisma/debug/src/index.ts", "../../../node_modules/@prisma/get-platform/src/index.ts", "../../../node_modules/@prisma/internals/src/utils/getVersionFromPackageJson.ts", "../../../node_modules/@prisma/internals/src/client/getClientEngineType.ts", "../../../node_modules/@prisma/internals/src/utils/prismaPostgres.ts", "../../../node_modules/@prisma/internals/src/logger.ts", "../../../node_modules/@prisma/internals/src/utils/assertNever.ts", "../../../node_modules/@prisma/internals/src/utils/hasOwnProperty.ts", "../../../node_modules/@prisma/internals/src/utils/mapObjectValues.ts", "../../../node_modules/@prisma/internals/src/utils/max.ts", "../../../node_modules/@prisma/internals/src/utils/setClassName.ts", "../../../node_modules/@prisma/internals/src/warnOnce.ts", "../../../node_modules/@prisma/client/src/runtime/core/errors/PrismaClientKnownRequestError.ts", "../../../node_modules/@prisma/client/src/runtime/core/errors/PrismaClientRustPanicError.ts", "../../../node_modules/@prisma/client/src/runtime/core/errors/PrismaClientUnknownRequestError.ts", "../../../node_modules/@prisma/client/src/runtime/core/errors/PrismaClientValidationError.ts", "../../../node_modules/@prisma/client/src/runtime/core/jsonProtocol/deserializeJsonResponse.ts", "../../../node_modules/node_modules/.pnpm/decimal.js@10.5.0/node_modules/decimal.js/decimal.mjs", "../../../node_modules/@prisma/client/src/runtime/core/jsonProtocol/serializeJsonQuery.ts", "../../../node_modules/@prisma/client-common/src/index.ts", "../../../node_modules/@prisma/client-common/src/Cache.ts", "../../../node_modules/@prisma/client-common/src/casing.ts", "../../../node_modules/@prisma/client-common/src/Dictionary.ts", "../../../node_modules/@prisma/client-common/src/lazyProperty.ts", "../../../node_modules/@prisma/client-common/src/runtimeDataModel.ts", "../../../node_modules/@prisma/client/src/runtime/utils/date.ts", "../../../node_modules/@prisma/client/src/runtime/utils/decimalJsLike.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/throwValidationException.ts", "../../../node_modules/@prisma/client/src/runtime/utils/createErrorMessageWithContext.ts", "../../../node_modules/@prisma/dmmf/src/index.ts", "../../../node_modules/@prisma/dmmf/src/convert.ts", "../../../node_modules/@prisma/dmmf/src/dmmf.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/applyValidationError.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/applyUnionError.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/ObjectFieldSuggestion.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/ObjectValue.ts", "../../../node_modules/@prisma/ts-builders/src/index.ts", "../../../node_modules/@prisma/ts-builders/src/Writer.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/ArrayValue.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/ArrayField.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/base.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/FormattedString.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/Value.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/ScalarValue.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/SuggestionObjectValue.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/ArgumentsRenderingTree.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/FieldRef.ts", "../../../node_modules/@prisma/client/src/runtime/core/types/exported/ObjectEnums.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/ObjectField.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/MergedExtensionsList.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/utils/dmmfToJSModelName.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/resultUtils.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/Param.ts", "../../../node_modules/@prisma/client/src/runtime/core/types/index.ts", "../../../node_modules/@prisma/client/src/runtime/core/types/exported/Skip.ts", "../../../node_modules/@prisma/client/src/runtime/core/metrics/MetricsClient.ts", "../../../node_modules/@prisma/client/src/runtime/core/runtimeDataModel.ts", "../../../node_modules/@prisma/client/src/runtime/core/types/exported/TypedSql.ts", "../../../node_modules/@prisma/client/src/runtime/getPrismaClient.ts", "fill-plugin-uy0uo:async_hooks", "../../../node_modules/node_modules/.pnpm/sql-template-tag@5.2.1/node_modules/sql-template-tag/src/index.ts", "../../../node_modules/@prisma/client/src/runtime/core/compositeProxy/index.ts", "../../../node_modules/@prisma/client/src/runtime/core/compositeProxy/addObjectProperties.ts", "../../../node_modules/@prisma/client/src/runtime/core/compositeProxy/addProperty.ts", "../../../node_modules/@prisma/client/src/runtime/core/compositeProxy/cacheProperties.ts", "../../../node_modules/@prisma/client/src/runtime/core/compositeProxy/createCompositeProxy.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/utils/defaultProxyHandlers.ts", "../../../node_modules/@prisma/client/src/runtime/core/compositeProxy/removeProperties.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/common/utils/getBatchRequestPayload.ts", "../../../node_modules/@prisma/client/src/runtime/core/errorRendering/prettyPrintArguments.ts", "../../../node_modules/@prisma/client/src/runtime/core/errors/utils/prismaGraphQLToJSError.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/$extends.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/applyModelsAndClientExtensions.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/applyModel.ts", "../../../node_modules/@prisma/client/src/runtime/utils/CallSite.ts", "../../../node_modules/node_modules/.pnpm/stacktrace-parser@0.1.11/node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js", "../../../node_modules/@prisma/client/src/runtime/core/model/applyAggregates.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/aggregates/aggregate.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/aggregates/utils/aggregateMap.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/aggregates/count.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/aggregates/groupBy.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/applyFieldsProxy.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/applyFluent.ts", "../../../node_modules/@prisma/client/src/runtime/utils/deep-set.ts", "../../../node_modules/@prisma/client/src/runtime/core/model/utils/jsToDMMFModelName.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/applyAllResultExtensions.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/applyResultExtensions.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/visitQueryResult.ts", "../../../node_modules/@prisma/client/src/runtime/core/extensions/applyQueryExtensions.ts", "../../../node_modules/@prisma/client/src/runtime/utils/deepCloneArgs.ts", "../../../node_modules/@prisma/client/src/runtime/core/types/exported/itxClientDenyList.ts", "../../../node_modules/@prisma/client/src/runtime/core/init/checkPlatformCaching.ts", "../../../node_modules/@prisma/client/src/runtime/core/init/getDatasourceOverrides.ts", "../../../node_modules/@prisma/client/src/runtime/core/init/getEngineInstance.ts", "../../../node_modules/@prisma/client/src/runtime/utils/getRuntime.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/index.ts", "../../../node_modules/@prisma/client/package.json", "../../../node_modules/@prisma/client/src/runtime/core/engines/common/accelerate/getUrlAndApiKey.ts", "../../../node_modules/@prisma/client/src/runtime/core/init/resolveDatasourceUrl.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/InvalidDatasourceError.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/DataProxyError.ts", "../../../node_modules/@prisma/client/src/runtime/core/errors/PrismaClientError.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/utils/setRetryable.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/common/accelerate/HeaderBuilder.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/utils/EngineTimestamp.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/DataProxyEngine.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/ForcedRetryError.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/NotImplementedYetError.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/SchemaMissingError.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/DataProxyAPIError.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/utils/responseToError.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/BadRequestError.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/EngineHealthcheckTimeoutError.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/EngineStartupError.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/EngineVersionNotSupportedError.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/GatewayTimeoutError.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/InteractiveTransactionError.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/InvalidRequestError.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/NotFoundError.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/ServerError.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/UnauthorizedError.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/UsageExceededError.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/utils/backOff.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/utils/base64.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/utils/checkForbiddenMetrics.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/utils/getClientVersion.ts", "../../../node_modules/@prisma/engines/package.json", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/utils/request.ts", "../../../node_modules/@prisma/client/src/runtime/core/engines/data-proxy/errors/NetworkError.ts", "../../../node_modules/@prisma/client/src/runtime/core/init/validateEngineInstanceConfig.ts", "../../../node_modules/@prisma/client/src/runtime/core/init/getPreviewFeatures.ts", "../../../node_modules/@prisma/client/src/runtime/core/raw-query/rawCommandArgsMapper.ts", "../../../node_modules/@prisma/client/src/runtime/core/raw-query/rawQueryArgsMapper.ts", "../../../node_modules/@prisma/client/src/runtime/utils/mssqlPreparedStatement.ts", "../../../node_modules/@prisma/client/src/runtime/utils/serializeRawParameters.ts", "../../../node_modules/@prisma/client/src/runtime/core/request/createPrismaPromise.ts", "../../../node_modules/@prisma/client/src/runtime/core/tracing/TracingHelper.ts", "../../../node_modules/@prisma/client/src/runtime/core/transaction/utils/createLockCountPromise.ts", "../../../node_modules/@prisma/client/src/runtime/getLogLevel.ts", "../../../node_modules/@prisma/client/src/runtime/MiddlewareHandler.ts", "../../../node_modules/@prisma/client/src/runtime/RequestHandler.ts", "../../../node_modules/@prisma/client/src/runtime/core/errors/ErrorWithBatchIndex.ts", "../../../node_modules/@prisma/client/src/runtime/core/jsonProtocol/getBatchId.ts", "../../../node_modules/@prisma/client/src/runtime/core/jsonProtocol/isWrite.ts", "../../../node_modules/@prisma/client/src/runtime/DataLoader.ts", "../../../node_modules/@prisma/client/src/runtime/utils/deserializeRawResults.ts", "../../../node_modules/@prisma/client/src/runtime/utils/clientVersion.ts", "../../../node_modules/@prisma/client/src/runtime/utils/validatePrismaClientOptions.ts", "../../../node_modules/@prisma/client/src/runtime/core/errors/PrismaClientConstructorValidationError.ts", "../../../node_modules/@prisma/client/src/runtime/utils/waitForBatch.ts", "../../../node_modules/@prisma/client/src/runtime/strictEnum.ts", "fill-plugin-uy0uo:./warnEnvConflicts", "../../../node_modules/.prisma/client/edge.js", "../../../node_modules/@prisma/client/edge.js", "../../../node_modules/@prisma/client/scripts/default-index.js", "../bundle-qqQTcI/middleware-loader.entry.ts", "../bundle-qqQTcI/middleware-insertion-facade.js", "../../../src/index.ts", "../../../node_modules/hono/dist/index.js", "../../../node_modules/hono/dist/hono.js", "../../../node_modules/hono/dist/hono-base.js", "../../../node_modules/hono/dist/compose.js", "../../../node_modules/hono/dist/context.js", "../../../node_modules/hono/dist/request.js", "../../../node_modules/hono/dist/request/constants.js", "../../../node_modules/hono/dist/utils/body.js", "../../../node_modules/hono/dist/utils/url.js", "../../../node_modules/hono/dist/utils/html.js", "../../../node_modules/hono/dist/router.js", "../../../node_modules/hono/dist/utils/constants.js", "../../../node_modules/hono/dist/router/reg-exp-router/index.js", "../../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../node_modules/hono/dist/router/smart-router/index.js", "../../../node_modules/hono/dist/router/smart-router/router.js", "../../../node_modules/hono/dist/router/trie-router/index.js", "../../../node_modules/hono/dist/router/trie-router/router.js", "../../../node_modules/hono/dist/router/trie-router/node.js", "../../../src/routes/user.routes.ts", "../../../node_modules/hono/dist/middleware/jwt/index.js", "../../../node_modules/hono/dist/middleware/jwt/jwt.js", "../../../node_modules/hono/dist/helper/cookie/index.js", "../../../node_modules/hono/dist/utils/cookie.js", "../../../node_modules/hono/dist/http-exception.js", "../../../node_modules/hono/dist/utils/jwt/index.js", "../../../node_modules/hono/dist/utils/jwt/jwt.js", "../../../node_modules/hono/dist/utils/encode.js", "../../../node_modules/hono/dist/utils/jwt/jwa.js", "../../../node_modules/hono/dist/utils/jwt/jws.js", "../../../node_modules/hono/dist/helper/adapter/index.js", "../../../node_modules/hono/dist/utils/jwt/types.js", "../../../node_modules/hono/dist/utils/jwt/utf8.js", "../../../node_modules/@prisma/extension-accelerate/dist/index.js", "../../../src/routes/blog.routes.ts", "../../../node_modules/hono/dist/middleware/cors/index.js", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "D:\\coding code\\Harkirat\\part5\\backend\\.wrangler\\tmp\\dev-DyDjhP",
  "sourcesContent": ["", "// `esbuild` doesn't support returning `watch*` options from `onStart()`\r\n// plugin callbacks. Instead, we define an empty virtual module that is\r\n// imported by this injected file. Importing the module registers watchers.\r\nimport \"wrangler:modules-watch\";\r\n", "export const process: Partial<NodeJS.Process> = {\n  nextTick: (fn: Function, ...args: unknown[]) => {\n    setTimeout(() => {\n      fn(...args)\n    }, 0)\n  },\n  env: {},\n  version: '',\n  cwd: () => '/',\n  stderr: {} as any,\n  argv: ['/bin/node'],\n  pid: 10000,\n}\n", "const performance =\n  globalThis['performance'] ??\n  (() => {\n    const origin = Date.now()\n    return {\n      now: () => Date.now() - origin,\n    }\n  })()\n\nexport { performance }\nexport default { performance }\n", "export const fn = () => {}\n\nfn.prototype = fn\n", "export class WeakRef<T> {\n  value: T\n\n  constructor(value: T) {\n    this.value = value\n  }\n\n  deref() {\n    return this.value\n  }\n}\n", "\"use strict\";var q=(i,r)=>()=>(r||i((r={exports:{}}).exports,r),r.exports);var H=q(C=>{\"use strict\";C.byteLength=sr;C.toByteArray=ar;C.fromByteArray=xr;var B=[],w=[],pr=typeof Uint8Array<\"u\"?Uint8Array:Array,N=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(m=0,W=N.length;m<W;++m)B[m]=N[m],w[N.charCodeAt(m)]=m;var m,W;w[45]=62;w[95]=63;function j(i){var r=i.length;if(r%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");var t=i.indexOf(\"=\");t===-1&&(t=r);var n=t===r?0:4-t%4;return[t,n]}function sr(i){var r=j(i),t=r[0],n=r[1];return(t+n)*3/4-n}function lr(i,r,t){return(r+t)*3/4-t}function ar(i){var r,t=j(i),n=t[0],e=t[1],o=new pr(lr(i,n,e)),u=0,f=e>0?n-4:n,c;for(c=0;c<f;c+=4)r=w[i.charCodeAt(c)]<<18|w[i.charCodeAt(c+1)]<<12|w[i.charCodeAt(c+2)]<<6|w[i.charCodeAt(c+3)],o[u++]=r>>16&255,o[u++]=r>>8&255,o[u++]=r&255;return e===2&&(r=w[i.charCodeAt(c)]<<2|w[i.charCodeAt(c+1)]>>4,o[u++]=r&255),e===1&&(r=w[i.charCodeAt(c)]<<10|w[i.charCodeAt(c+1)]<<4|w[i.charCodeAt(c+2)]>>2,o[u++]=r>>8&255,o[u++]=r&255),o}function yr(i){return B[i>>18&63]+B[i>>12&63]+B[i>>6&63]+B[i&63]}function wr(i,r,t){for(var n,e=[],o=r;o<t;o+=3)n=(i[o]<<16&16711680)+(i[o+1]<<8&65280)+(i[o+2]&255),e.push(yr(n));return e.join(\"\")}function xr(i){for(var r,t=i.length,n=t%3,e=[],o=16383,u=0,f=t-n;u<f;u+=o)e.push(wr(i,u,u+o>f?f:u+o));return n===1?(r=i[t-1],e.push(B[r>>2]+B[r<<4&63]+\"==\")):n===2&&(r=(i[t-2]<<8)+i[t-1],e.push(B[r>>10]+B[r>>4&63]+B[r<<2&63]+\"=\")),e.join(\"\")}});var V=q(M=>{M.read=function(i,r,t,n,e){var o,u,f=e*8-n-1,c=(1<<f)-1,l=c>>1,s=-7,p=t?e-1:0,F=t?-1:1,x=i[r+p];for(p+=F,o=x&(1<<-s)-1,x>>=-s,s+=f;s>0;o=o*256+i[r+p],p+=F,s-=8);for(u=o&(1<<-s)-1,o>>=-s,s+=n;s>0;u=u*256+i[r+p],p+=F,s-=8);if(o===0)o=1-l;else{if(o===c)return u?NaN:(x?-1:1)*(1/0);u=u+Math.pow(2,n),o=o-l}return(x?-1:1)*u*Math.pow(2,o-n)};M.write=function(i,r,t,n,e,o){var u,f,c,l=o*8-e-1,s=(1<<l)-1,p=s>>1,F=e===23?Math.pow(2,-24)-Math.pow(2,-77):0,x=n?0:o-1,L=n?1:-1,cr=r<0||r===0&&1/r<0?1:0;for(r=Math.abs(r),isNaN(r)||r===1/0?(f=isNaN(r)?1:0,u=s):(u=Math.floor(Math.log(r)/Math.LN2),r*(c=Math.pow(2,-u))<1&&(u--,c*=2),u+p>=1?r+=F/c:r+=F*Math.pow(2,1-p),r*c>=2&&(u++,c/=2),u+p>=s?(f=0,u=s):u+p>=1?(f=(r*c-1)*Math.pow(2,e),u=u+p):(f=r*Math.pow(2,p-1)*Math.pow(2,e),u=0));e>=8;i[t+x]=f&255,x+=L,f/=256,e-=8);for(u=u<<e|f,l+=e;l>0;i[t+x]=u&255,x+=L,u/=256,l-=8);i[t+x-L]|=cr*128}});var k=H(),U=V(),X=typeof Symbol==\"function\"&&typeof Symbol.for==\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;exports.Buffer=h;exports.SlowBuffer=Ir;exports.INSPECT_MAX_BYTES=50;var S=2147483647;exports.kMaxLength=S;h.TYPED_ARRAY_SUPPORT=Br();!h.TYPED_ARRAY_SUPPORT&&typeof console<\"u\"&&typeof console.error==\"function\"&&console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\");function Br(){try{let i=new Uint8Array(1),r={foo:function(){return 42}};return Object.setPrototypeOf(r,Uint8Array.prototype),Object.setPrototypeOf(i,r),i.foo()===42}catch{return!1}}Object.defineProperty(h.prototype,\"parent\",{enumerable:!0,get:function(){if(h.isBuffer(this))return this.buffer}});Object.defineProperty(h.prototype,\"offset\",{enumerable:!0,get:function(){if(h.isBuffer(this))return this.byteOffset}});function d(i){if(i>S)throw new RangeError('The value \"'+i+'\" is invalid for option \"size\"');let r=new Uint8Array(i);return Object.setPrototypeOf(r,h.prototype),r}function h(i,r,t){if(typeof i==\"number\"){if(typeof r==\"string\")throw new TypeError('The \"string\" argument must be of type string. Received type number');return P(i)}return Z(i,r,t)}h.poolSize=8192;function Z(i,r,t){if(typeof i==\"string\")return dr(i,r);if(ArrayBuffer.isView(i))return gr(i);if(i==null)throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof i);if(E(i,ArrayBuffer)||i&&E(i.buffer,ArrayBuffer)||typeof SharedArrayBuffer<\"u\"&&(E(i,SharedArrayBuffer)||i&&E(i.buffer,SharedArrayBuffer)))return $(i,r,t);if(typeof i==\"number\")throw new TypeError('The \"value\" argument must not be of type number. Received type number');let n=i.valueOf&&i.valueOf();if(n!=null&&n!==i)return h.from(n,r,t);let e=mr(i);if(e)return e;if(typeof Symbol<\"u\"&&Symbol.toPrimitive!=null&&typeof i[Symbol.toPrimitive]==\"function\")return h.from(i[Symbol.toPrimitive](\"string\"),r,t);throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof i)}h.from=function(i,r,t){return Z(i,r,t)};Object.setPrototypeOf(h.prototype,Uint8Array.prototype);Object.setPrototypeOf(h,Uint8Array);function Q(i){if(typeof i!=\"number\")throw new TypeError('\"size\" argument must be of type number');if(i<0)throw new RangeError('The value \"'+i+'\" is invalid for option \"size\"')}function Er(i,r,t){return Q(i),i<=0?d(i):r!==void 0?typeof t==\"string\"?d(i).fill(r,t):d(i).fill(r):d(i)}h.alloc=function(i,r,t){return Er(i,r,t)};function P(i){return Q(i),d(i<0?0:O(i)|0)}h.allocUnsafe=function(i){return P(i)};h.allocUnsafeSlow=function(i){return P(i)};function dr(i,r){if((typeof r!=\"string\"||r===\"\")&&(r=\"utf8\"),!h.isEncoding(r))throw new TypeError(\"Unknown encoding: \"+r);let t=v(i,r)|0,n=d(t),e=n.write(i,r);return e!==t&&(n=n.slice(0,e)),n}function D(i){let r=i.length<0?0:O(i.length)|0,t=d(r);for(let n=0;n<r;n+=1)t[n]=i[n]&255;return t}function gr(i){if(E(i,Uint8Array)){let r=new Uint8Array(i);return $(r.buffer,r.byteOffset,r.byteLength)}return D(i)}function $(i,r,t){if(r<0||i.byteLength<r)throw new RangeError('\"offset\" is outside of buffer bounds');if(i.byteLength<r+(t||0))throw new RangeError('\"length\" is outside of buffer bounds');let n;return r===void 0&&t===void 0?n=new Uint8Array(i):t===void 0?n=new Uint8Array(i,r):n=new Uint8Array(i,r,t),Object.setPrototypeOf(n,h.prototype),n}function mr(i){if(h.isBuffer(i)){let r=O(i.length)|0,t=d(r);return t.length===0||i.copy(t,0,0,r),t}if(i.length!==void 0)return typeof i.length!=\"number\"||Y(i.length)?d(0):D(i);if(i.type===\"Buffer\"&&Array.isArray(i.data))return D(i.data)}function O(i){if(i>=S)throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+S.toString(16)+\" bytes\");return i|0}function Ir(i){return+i!=i&&(i=0),h.alloc(+i)}h.isBuffer=function(r){return r!=null&&r._isBuffer===!0&&r!==h.prototype};h.compare=function(r,t){if(E(r,Uint8Array)&&(r=h.from(r,r.offset,r.byteLength)),E(t,Uint8Array)&&(t=h.from(t,t.offset,t.byteLength)),!h.isBuffer(r)||!h.isBuffer(t))throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');if(r===t)return 0;let n=r.length,e=t.length;for(let o=0,u=Math.min(n,e);o<u;++o)if(r[o]!==t[o]){n=r[o],e=t[o];break}return n<e?-1:e<n?1:0};h.isEncoding=function(r){switch(String(r).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}};h.concat=function(r,t){if(!Array.isArray(r))throw new TypeError('\"list\" argument must be an Array of Buffers');if(r.length===0)return h.alloc(0);let n;if(t===void 0)for(t=0,n=0;n<r.length;++n)t+=r[n].length;let e=h.allocUnsafe(t),o=0;for(n=0;n<r.length;++n){let u=r[n];if(E(u,Uint8Array))o+u.length>e.length?(h.isBuffer(u)||(u=h.from(u)),u.copy(e,o)):Uint8Array.prototype.set.call(e,u,o);else if(h.isBuffer(u))u.copy(e,o);else throw new TypeError('\"list\" argument must be an Array of Buffers');o+=u.length}return e};function v(i,r){if(h.isBuffer(i))return i.length;if(ArrayBuffer.isView(i)||E(i,ArrayBuffer))return i.byteLength;if(typeof i!=\"string\")throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof i);let t=i.length,n=arguments.length>2&&arguments[2]===!0;if(!n&&t===0)return 0;let e=!1;for(;;)switch(r){case\"ascii\":case\"latin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return b(i).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"base64\":return fr(i).length;default:if(e)return n?-1:b(i).length;r=(\"\"+r).toLowerCase(),e=!0}}h.byteLength=v;function Fr(i,r,t){let n=!1;if((r===void 0||r<0)&&(r=0),r>this.length||((t===void 0||t>this.length)&&(t=this.length),t<=0)||(t>>>=0,r>>>=0,t<=r))return\"\";for(i||(i=\"utf8\");;)switch(i){case\"hex\":return Mr(this,r,t);case\"utf8\":case\"utf-8\":return tr(this,r,t);case\"ascii\":return Lr(this,r,t);case\"latin1\":case\"binary\":return Nr(this,r,t);case\"base64\":return Sr(this,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return kr(this,r,t);default:if(n)throw new TypeError(\"Unknown encoding: \"+i);i=(i+\"\").toLowerCase(),n=!0}}h.prototype._isBuffer=!0;function I(i,r,t){let n=i[r];i[r]=i[t],i[t]=n}h.prototype.swap16=function(){let r=this.length;if(r%2!==0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(let t=0;t<r;t+=2)I(this,t,t+1);return this};h.prototype.swap32=function(){let r=this.length;if(r%4!==0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(let t=0;t<r;t+=4)I(this,t,t+3),I(this,t+1,t+2);return this};h.prototype.swap64=function(){let r=this.length;if(r%8!==0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(let t=0;t<r;t+=8)I(this,t,t+7),I(this,t+1,t+6),I(this,t+2,t+5),I(this,t+3,t+4);return this};h.prototype.toString=function(){let r=this.length;return r===0?\"\":arguments.length===0?tr(this,0,r):Fr.apply(this,arguments)};h.prototype.toLocaleString=h.prototype.toString;h.prototype.equals=function(r){if(!h.isBuffer(r))throw new TypeError(\"Argument must be a Buffer\");return this===r?!0:h.compare(this,r)===0};h.prototype.inspect=function(){let r=\"\",t=exports.INSPECT_MAX_BYTES;return r=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim(),this.length>t&&(r+=\" ... \"),\"<Buffer \"+r+\">\"};X&&(h.prototype[X]=h.prototype.inspect);h.prototype.compare=function(r,t,n,e,o){if(E(r,Uint8Array)&&(r=h.from(r,r.offset,r.byteLength)),!h.isBuffer(r))throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. Received type '+typeof r);if(t===void 0&&(t=0),n===void 0&&(n=r?r.length:0),e===void 0&&(e=0),o===void 0&&(o=this.length),t<0||n>r.length||e<0||o>this.length)throw new RangeError(\"out of range index\");if(e>=o&&t>=n)return 0;if(e>=o)return-1;if(t>=n)return 1;if(t>>>=0,n>>>=0,e>>>=0,o>>>=0,this===r)return 0;let u=o-e,f=n-t,c=Math.min(u,f),l=this.slice(e,o),s=r.slice(t,n);for(let p=0;p<c;++p)if(l[p]!==s[p]){u=l[p],f=s[p];break}return u<f?-1:f<u?1:0};function rr(i,r,t,n,e){if(i.length===0)return-1;if(typeof t==\"string\"?(n=t,t=0):t>2147483647?t=2147483647:t<-2147483648&&(t=-2147483648),t=+t,Y(t)&&(t=e?0:i.length-1),t<0&&(t=i.length+t),t>=i.length){if(e)return-1;t=i.length-1}else if(t<0)if(e)t=0;else return-1;if(typeof r==\"string\"&&(r=h.from(r,n)),h.isBuffer(r))return r.length===0?-1:z(i,r,t,n,e);if(typeof r==\"number\")return r=r&255,typeof Uint8Array.prototype.indexOf==\"function\"?e?Uint8Array.prototype.indexOf.call(i,r,t):Uint8Array.prototype.lastIndexOf.call(i,r,t):z(i,[r],t,n,e);throw new TypeError(\"val must be string, number or Buffer\")}function z(i,r,t,n,e){let o=1,u=i.length,f=r.length;if(n!==void 0&&(n=String(n).toLowerCase(),n===\"ucs2\"||n===\"ucs-2\"||n===\"utf16le\"||n===\"utf-16le\")){if(i.length<2||r.length<2)return-1;o=2,u/=2,f/=2,t/=2}function c(s,p){return o===1?s[p]:s.readUInt16BE(p*o)}let l;if(e){let s=-1;for(l=t;l<u;l++)if(c(i,l)===c(r,s===-1?0:l-s)){if(s===-1&&(s=l),l-s+1===f)return s*o}else s!==-1&&(l-=l-s),s=-1}else for(t+f>u&&(t=u-f),l=t;l>=0;l--){let s=!0;for(let p=0;p<f;p++)if(c(i,l+p)!==c(r,p)){s=!1;break}if(s)return l}return-1}h.prototype.includes=function(r,t,n){return this.indexOf(r,t,n)!==-1};h.prototype.indexOf=function(r,t,n){return rr(this,r,t,n,!0)};h.prototype.lastIndexOf=function(r,t,n){return rr(this,r,t,n,!1)};function Ar(i,r,t,n){t=Number(t)||0;let e=i.length-t;n?(n=Number(n),n>e&&(n=e)):n=e;let o=r.length;n>o/2&&(n=o/2);let u;for(u=0;u<n;++u){let f=parseInt(r.substr(u*2,2),16);if(Y(f))return u;i[t+u]=f}return u}function Ur(i,r,t,n){return _(b(r,i.length-t),i,t,n)}function Rr(i,r,t,n){return _(Pr(r),i,t,n)}function Tr(i,r,t,n){return _(fr(r),i,t,n)}function Cr(i,r,t,n){return _(Or(r,i.length-t),i,t,n)}h.prototype.write=function(r,t,n,e){if(t===void 0)e=\"utf8\",n=this.length,t=0;else if(n===void 0&&typeof t==\"string\")e=t,n=this.length,t=0;else if(isFinite(t))t=t>>>0,isFinite(n)?(n=n>>>0,e===void 0&&(e=\"utf8\")):(e=n,n=void 0);else throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");let o=this.length-t;if((n===void 0||n>o)&&(n=o),r.length>0&&(n<0||t<0)||t>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");e||(e=\"utf8\");let u=!1;for(;;)switch(e){case\"hex\":return Ar(this,r,t,n);case\"utf8\":case\"utf-8\":return Ur(this,r,t,n);case\"ascii\":case\"latin1\":case\"binary\":return Rr(this,r,t,n);case\"base64\":return Tr(this,r,t,n);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return Cr(this,r,t,n);default:if(u)throw new TypeError(\"Unknown encoding: \"+e);e=(\"\"+e).toLowerCase(),u=!0}};h.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};function Sr(i,r,t){return r===0&&t===i.length?k.fromByteArray(i):k.fromByteArray(i.slice(r,t))}function tr(i,r,t){t=Math.min(i.length,t);let n=[],e=r;for(;e<t;){let o=i[e],u=null,f=o>239?4:o>223?3:o>191?2:1;if(e+f<=t){let c,l,s,p;switch(f){case 1:o<128&&(u=o);break;case 2:c=i[e+1],(c&192)===128&&(p=(o&31)<<6|c&63,p>127&&(u=p));break;case 3:c=i[e+1],l=i[e+2],(c&192)===128&&(l&192)===128&&(p=(o&15)<<12|(c&63)<<6|l&63,p>2047&&(p<55296||p>57343)&&(u=p));break;case 4:c=i[e+1],l=i[e+2],s=i[e+3],(c&192)===128&&(l&192)===128&&(s&192)===128&&(p=(o&15)<<18|(c&63)<<12|(l&63)<<6|s&63,p>65535&&p<1114112&&(u=p))}}u===null?(u=65533,f=1):u>65535&&(u-=65536,n.push(u>>>10&1023|55296),u=56320|u&1023),n.push(u),e+=f}return _r(n)}var J=4096;function _r(i){let r=i.length;if(r<=J)return String.fromCharCode.apply(String,i);let t=\"\",n=0;for(;n<r;)t+=String.fromCharCode.apply(String,i.slice(n,n+=J));return t}function Lr(i,r,t){let n=\"\";t=Math.min(i.length,t);for(let e=r;e<t;++e)n+=String.fromCharCode(i[e]&127);return n}function Nr(i,r,t){let n=\"\";t=Math.min(i.length,t);for(let e=r;e<t;++e)n+=String.fromCharCode(i[e]);return n}function Mr(i,r,t){let n=i.length;(!r||r<0)&&(r=0),(!t||t<0||t>n)&&(t=n);let e=\"\";for(let o=r;o<t;++o)e+=Gr[i[o]];return e}function kr(i,r,t){let n=i.slice(r,t),e=\"\";for(let o=0;o<n.length-1;o+=2)e+=String.fromCharCode(n[o]+n[o+1]*256);return e}h.prototype.slice=function(r,t){let n=this.length;r=~~r,t=t===void 0?n:~~t,r<0?(r+=n,r<0&&(r=0)):r>n&&(r=n),t<0?(t+=n,t<0&&(t=0)):t>n&&(t=n),t<r&&(t=r);let e=this.subarray(r,t);return Object.setPrototypeOf(e,h.prototype),e};function a(i,r,t){if(i%1!==0||i<0)throw new RangeError(\"offset is not uint\");if(i+r>t)throw new RangeError(\"Trying to access beyond buffer length\")}h.prototype.readUintLE=h.prototype.readUIntLE=function(r,t,n){r=r>>>0,t=t>>>0,n||a(r,t,this.length);let e=this[r],o=1,u=0;for(;++u<t&&(o*=256);)e+=this[r+u]*o;return e};h.prototype.readUintBE=h.prototype.readUIntBE=function(r,t,n){r=r>>>0,t=t>>>0,n||a(r,t,this.length);let e=this[r+--t],o=1;for(;t>0&&(o*=256);)e+=this[r+--t]*o;return e};h.prototype.readUint8=h.prototype.readUInt8=function(r,t){return r=r>>>0,t||a(r,1,this.length),this[r]};h.prototype.readUint16LE=h.prototype.readUInt16LE=function(r,t){return r=r>>>0,t||a(r,2,this.length),this[r]|this[r+1]<<8};h.prototype.readUint16BE=h.prototype.readUInt16BE=function(r,t){return r=r>>>0,t||a(r,2,this.length),this[r]<<8|this[r+1]};h.prototype.readUint32LE=h.prototype.readUInt32LE=function(r,t){return r=r>>>0,t||a(r,4,this.length),(this[r]|this[r+1]<<8|this[r+2]<<16)+this[r+3]*16777216};h.prototype.readUint32BE=h.prototype.readUInt32BE=function(r,t){return r=r>>>0,t||a(r,4,this.length),this[r]*16777216+(this[r+1]<<16|this[r+2]<<8|this[r+3])};h.prototype.readBigUInt64LE=g(function(r){r=r>>>0,R(r,\"offset\");let t=this[r],n=this[r+7];(t===void 0||n===void 0)&&T(r,this.length-8);let e=t+this[++r]*2**8+this[++r]*2**16+this[++r]*2**24,o=this[++r]+this[++r]*2**8+this[++r]*2**16+n*2**24;return BigInt(e)+(BigInt(o)<<BigInt(32))});h.prototype.readBigUInt64BE=g(function(r){r=r>>>0,R(r,\"offset\");let t=this[r],n=this[r+7];(t===void 0||n===void 0)&&T(r,this.length-8);let e=t*2**24+this[++r]*2**16+this[++r]*2**8+this[++r],o=this[++r]*2**24+this[++r]*2**16+this[++r]*2**8+n;return(BigInt(e)<<BigInt(32))+BigInt(o)});h.prototype.readIntLE=function(r,t,n){r=r>>>0,t=t>>>0,n||a(r,t,this.length);let e=this[r],o=1,u=0;for(;++u<t&&(o*=256);)e+=this[r+u]*o;return o*=128,e>=o&&(e-=Math.pow(2,8*t)),e};h.prototype.readIntBE=function(r,t,n){r=r>>>0,t=t>>>0,n||a(r,t,this.length);let e=t,o=1,u=this[r+--e];for(;e>0&&(o*=256);)u+=this[r+--e]*o;return o*=128,u>=o&&(u-=Math.pow(2,8*t)),u};h.prototype.readInt8=function(r,t){return r=r>>>0,t||a(r,1,this.length),this[r]&128?(255-this[r]+1)*-1:this[r]};h.prototype.readInt16LE=function(r,t){r=r>>>0,t||a(r,2,this.length);let n=this[r]|this[r+1]<<8;return n&32768?n|4294901760:n};h.prototype.readInt16BE=function(r,t){r=r>>>0,t||a(r,2,this.length);let n=this[r+1]|this[r]<<8;return n&32768?n|4294901760:n};h.prototype.readInt32LE=function(r,t){return r=r>>>0,t||a(r,4,this.length),this[r]|this[r+1]<<8|this[r+2]<<16|this[r+3]<<24};h.prototype.readInt32BE=function(r,t){return r=r>>>0,t||a(r,4,this.length),this[r]<<24|this[r+1]<<16|this[r+2]<<8|this[r+3]};h.prototype.readBigInt64LE=g(function(r){r=r>>>0,R(r,\"offset\");let t=this[r],n=this[r+7];(t===void 0||n===void 0)&&T(r,this.length-8);let e=this[r+4]+this[r+5]*2**8+this[r+6]*2**16+(n<<24);return(BigInt(e)<<BigInt(32))+BigInt(t+this[++r]*2**8+this[++r]*2**16+this[++r]*2**24)});h.prototype.readBigInt64BE=g(function(r){r=r>>>0,R(r,\"offset\");let t=this[r],n=this[r+7];(t===void 0||n===void 0)&&T(r,this.length-8);let e=(t<<24)+this[++r]*2**16+this[++r]*2**8+this[++r];return(BigInt(e)<<BigInt(32))+BigInt(this[++r]*2**24+this[++r]*2**16+this[++r]*2**8+n)});h.prototype.readFloatLE=function(r,t){return r=r>>>0,t||a(r,4,this.length),U.read(this,r,!0,23,4)};h.prototype.readFloatBE=function(r,t){return r=r>>>0,t||a(r,4,this.length),U.read(this,r,!1,23,4)};h.prototype.readDoubleLE=function(r,t){return r=r>>>0,t||a(r,8,this.length),U.read(this,r,!0,52,8)};h.prototype.readDoubleBE=function(r,t){return r=r>>>0,t||a(r,8,this.length),U.read(this,r,!1,52,8)};function y(i,r,t,n,e,o){if(!h.isBuffer(i))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>e||r<o)throw new RangeError('\"value\" argument is out of bounds');if(t+n>i.length)throw new RangeError(\"Index out of range\")}h.prototype.writeUintLE=h.prototype.writeUIntLE=function(r,t,n,e){if(r=+r,t=t>>>0,n=n>>>0,!e){let f=Math.pow(2,8*n)-1;y(this,r,t,n,f,0)}let o=1,u=0;for(this[t]=r&255;++u<n&&(o*=256);)this[t+u]=r/o&255;return t+n};h.prototype.writeUintBE=h.prototype.writeUIntBE=function(r,t,n,e){if(r=+r,t=t>>>0,n=n>>>0,!e){let f=Math.pow(2,8*n)-1;y(this,r,t,n,f,0)}let o=n-1,u=1;for(this[t+o]=r&255;--o>=0&&(u*=256);)this[t+o]=r/u&255;return t+n};h.prototype.writeUint8=h.prototype.writeUInt8=function(r,t,n){return r=+r,t=t>>>0,n||y(this,r,t,1,255,0),this[t]=r&255,t+1};h.prototype.writeUint16LE=h.prototype.writeUInt16LE=function(r,t,n){return r=+r,t=t>>>0,n||y(this,r,t,2,65535,0),this[t]=r&255,this[t+1]=r>>>8,t+2};h.prototype.writeUint16BE=h.prototype.writeUInt16BE=function(r,t,n){return r=+r,t=t>>>0,n||y(this,r,t,2,65535,0),this[t]=r>>>8,this[t+1]=r&255,t+2};h.prototype.writeUint32LE=h.prototype.writeUInt32LE=function(r,t,n){return r=+r,t=t>>>0,n||y(this,r,t,4,4294967295,0),this[t+3]=r>>>24,this[t+2]=r>>>16,this[t+1]=r>>>8,this[t]=r&255,t+4};h.prototype.writeUint32BE=h.prototype.writeUInt32BE=function(r,t,n){return r=+r,t=t>>>0,n||y(this,r,t,4,4294967295,0),this[t]=r>>>24,this[t+1]=r>>>16,this[t+2]=r>>>8,this[t+3]=r&255,t+4};function ir(i,r,t,n,e){hr(r,n,e,i,t,7);let o=Number(r&BigInt(4294967295));i[t++]=o,o=o>>8,i[t++]=o,o=o>>8,i[t++]=o,o=o>>8,i[t++]=o;let u=Number(r>>BigInt(32)&BigInt(4294967295));return i[t++]=u,u=u>>8,i[t++]=u,u=u>>8,i[t++]=u,u=u>>8,i[t++]=u,t}function nr(i,r,t,n,e){hr(r,n,e,i,t,7);let o=Number(r&BigInt(4294967295));i[t+7]=o,o=o>>8,i[t+6]=o,o=o>>8,i[t+5]=o,o=o>>8,i[t+4]=o;let u=Number(r>>BigInt(32)&BigInt(4294967295));return i[t+3]=u,u=u>>8,i[t+2]=u,u=u>>8,i[t+1]=u,u=u>>8,i[t]=u,t+8}h.prototype.writeBigUInt64LE=g(function(r,t=0){return ir(this,r,t,BigInt(0),BigInt(\"0xffffffffffffffff\"))});h.prototype.writeBigUInt64BE=g(function(r,t=0){return nr(this,r,t,BigInt(0),BigInt(\"0xffffffffffffffff\"))});h.prototype.writeIntLE=function(r,t,n,e){if(r=+r,t=t>>>0,!e){let c=Math.pow(2,8*n-1);y(this,r,t,n,c-1,-c)}let o=0,u=1,f=0;for(this[t]=r&255;++o<n&&(u*=256);)r<0&&f===0&&this[t+o-1]!==0&&(f=1),this[t+o]=(r/u>>0)-f&255;return t+n};h.prototype.writeIntBE=function(r,t,n,e){if(r=+r,t=t>>>0,!e){let c=Math.pow(2,8*n-1);y(this,r,t,n,c-1,-c)}let o=n-1,u=1,f=0;for(this[t+o]=r&255;--o>=0&&(u*=256);)r<0&&f===0&&this[t+o+1]!==0&&(f=1),this[t+o]=(r/u>>0)-f&255;return t+n};h.prototype.writeInt8=function(r,t,n){return r=+r,t=t>>>0,n||y(this,r,t,1,127,-128),r<0&&(r=255+r+1),this[t]=r&255,t+1};h.prototype.writeInt16LE=function(r,t,n){return r=+r,t=t>>>0,n||y(this,r,t,2,32767,-32768),this[t]=r&255,this[t+1]=r>>>8,t+2};h.prototype.writeInt16BE=function(r,t,n){return r=+r,t=t>>>0,n||y(this,r,t,2,32767,-32768),this[t]=r>>>8,this[t+1]=r&255,t+2};h.prototype.writeInt32LE=function(r,t,n){return r=+r,t=t>>>0,n||y(this,r,t,4,2147483647,-2147483648),this[t]=r&255,this[t+1]=r>>>8,this[t+2]=r>>>16,this[t+3]=r>>>24,t+4};h.prototype.writeInt32BE=function(r,t,n){return r=+r,t=t>>>0,n||y(this,r,t,4,2147483647,-2147483648),r<0&&(r=4294967295+r+1),this[t]=r>>>24,this[t+1]=r>>>16,this[t+2]=r>>>8,this[t+3]=r&255,t+4};h.prototype.writeBigInt64LE=g(function(r,t=0){return ir(this,r,t,-BigInt(\"0x8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))});h.prototype.writeBigInt64BE=g(function(r,t=0){return nr(this,r,t,-BigInt(\"0x8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))});function er(i,r,t,n,e,o){if(t+n>i.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\"Index out of range\")}function or(i,r,t,n,e){return r=+r,t=t>>>0,e||er(i,r,t,4,34028234663852886e22,-34028234663852886e22),U.write(i,r,t,n,23,4),t+4}h.prototype.writeFloatLE=function(r,t,n){return or(this,r,t,!0,n)};h.prototype.writeFloatBE=function(r,t,n){return or(this,r,t,!1,n)};function ur(i,r,t,n,e){return r=+r,t=t>>>0,e||er(i,r,t,8,17976931348623157e292,-17976931348623157e292),U.write(i,r,t,n,52,8),t+8}h.prototype.writeDoubleLE=function(r,t,n){return ur(this,r,t,!0,n)};h.prototype.writeDoubleBE=function(r,t,n){return ur(this,r,t,!1,n)};h.prototype.copy=function(r,t,n,e){if(!h.isBuffer(r))throw new TypeError(\"argument should be a Buffer\");if(n||(n=0),!e&&e!==0&&(e=this.length),t>=r.length&&(t=r.length),t||(t=0),e>0&&e<n&&(e=n),e===n||r.length===0||this.length===0)return 0;if(t<0)throw new RangeError(\"targetStart out of bounds\");if(n<0||n>=this.length)throw new RangeError(\"Index out of range\");if(e<0)throw new RangeError(\"sourceEnd out of bounds\");e>this.length&&(e=this.length),r.length-t<e-n&&(e=r.length-t+n);let o=e-n;return this===r&&typeof Uint8Array.prototype.copyWithin==\"function\"?this.copyWithin(t,n,e):Uint8Array.prototype.set.call(r,this.subarray(n,e),t),o};h.prototype.fill=function(r,t,n,e){if(typeof r==\"string\"){if(typeof t==\"string\"?(e=t,t=0,n=this.length):typeof n==\"string\"&&(e=n,n=this.length),e!==void 0&&typeof e!=\"string\")throw new TypeError(\"encoding must be a string\");if(typeof e==\"string\"&&!h.isEncoding(e))throw new TypeError(\"Unknown encoding: \"+e);if(r.length===1){let u=r.charCodeAt(0);(e===\"utf8\"&&u<128||e===\"latin1\")&&(r=u)}}else typeof r==\"number\"?r=r&255:typeof r==\"boolean\"&&(r=Number(r));if(t<0||this.length<t||this.length<n)throw new RangeError(\"Out of range index\");if(n<=t)return this;t=t>>>0,n=n===void 0?this.length:n>>>0,r||(r=0);let o;if(typeof r==\"number\")for(o=t;o<n;++o)this[o]=r;else{let u=h.isBuffer(r)?r:h.from(r,e),f=u.length;if(f===0)throw new TypeError('The value \"'+r+'\" is invalid for argument \"value\"');for(o=0;o<n-t;++o)this[o+t]=u[o%f]}return this};var A={};function G(i,r,t){A[i]=class extends t{constructor(){super(),Object.defineProperty(this,\"message\",{value:r.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${i}]`,this.stack,delete this.name}get code(){return i}set code(e){Object.defineProperty(this,\"code\",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${i}]: ${this.message}`}}}G(\"ERR_BUFFER_OUT_OF_BOUNDS\",function(i){return i?`${i} is outside of buffer bounds`:\"Attempt to access memory outside buffer bounds\"},RangeError);G(\"ERR_INVALID_ARG_TYPE\",function(i,r){return`The \"${i}\" argument must be of type number. Received type ${typeof r}`},TypeError);G(\"ERR_OUT_OF_RANGE\",function(i,r,t){let n=`The value of \"${i}\" is out of range.`,e=t;return Number.isInteger(t)&&Math.abs(t)>2**32?e=K(String(t)):typeof t==\"bigint\"&&(e=String(t),(t>BigInt(2)**BigInt(32)||t<-(BigInt(2)**BigInt(32)))&&(e=K(e)),e+=\"n\"),n+=` It must be ${r}. Received ${e}`,n},RangeError);function K(i){let r=\"\",t=i.length,n=i[0]===\"-\"?1:0;for(;t>=n+4;t-=3)r=`_${i.slice(t-3,t)}${r}`;return`${i.slice(0,t)}${r}`}function Dr(i,r,t){R(r,\"offset\"),(i[r]===void 0||i[r+t]===void 0)&&T(r,i.length-(t+1))}function hr(i,r,t,n,e,o){if(i>t||i<r){let u=typeof r==\"bigint\"?\"n\":\"\",f;throw o>3?r===0||r===BigInt(0)?f=`>= 0${u} and < 2${u} ** ${(o+1)*8}${u}`:f=`>= -(2${u} ** ${(o+1)*8-1}${u}) and < 2 ** ${(o+1)*8-1}${u}`:f=`>= ${r}${u} and <= ${t}${u}`,new A.ERR_OUT_OF_RANGE(\"value\",f,i)}Dr(n,e,o)}function R(i,r){if(typeof i!=\"number\")throw new A.ERR_INVALID_ARG_TYPE(r,\"number\",i)}function T(i,r,t){throw Math.floor(i)!==i?(R(i,t),new A.ERR_OUT_OF_RANGE(t||\"offset\",\"an integer\",i)):r<0?new A.ERR_BUFFER_OUT_OF_BOUNDS:new A.ERR_OUT_OF_RANGE(t||\"offset\",`>= ${t?1:0} and <= ${r}`,i)}var $r=/[^+/0-9A-Za-z-_]/g;function br(i){if(i=i.split(\"=\")[0],i=i.trim().replace($r,\"\"),i.length<2)return\"\";for(;i.length%4!==0;)i=i+\"=\";return i}function b(i,r){r=r||1/0;let t,n=i.length,e=null,o=[];for(let u=0;u<n;++u){if(t=i.charCodeAt(u),t>55295&&t<57344){if(!e){if(t>56319){(r-=3)>-1&&o.push(239,191,189);continue}else if(u+1===n){(r-=3)>-1&&o.push(239,191,189);continue}e=t;continue}if(t<56320){(r-=3)>-1&&o.push(239,191,189),e=t;continue}t=(e-55296<<10|t-56320)+65536}else e&&(r-=3)>-1&&o.push(239,191,189);if(e=null,t<128){if((r-=1)<0)break;o.push(t)}else if(t<2048){if((r-=2)<0)break;o.push(t>>6|192,t&63|128)}else if(t<65536){if((r-=3)<0)break;o.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((r-=4)<0)break;o.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else throw new Error(\"Invalid code point\")}return o}function Pr(i){let r=[];for(let t=0;t<i.length;++t)r.push(i.charCodeAt(t)&255);return r}function Or(i,r){let t,n,e,o=[];for(let u=0;u<i.length&&!((r-=2)<0);++u)t=i.charCodeAt(u),n=t>>8,e=t%256,o.push(e),o.push(n);return o}function fr(i){return k.toByteArray(br(i))}function _(i,r,t,n){let e;for(e=0;e<n&&!(e+t>=r.length||e>=i.length);++e)r[e+t]=i[e];return e}function E(i,r){return i instanceof r||i!=null&&i.constructor!=null&&i.constructor.name!=null&&i.constructor.name===r.name}function Y(i){return i!==i}var Gr=function(){let i=\"0123456789abcdef\",r=new Array(256);for(let t=0;t<16;++t){let n=t*16;for(let e=0;e<16;++e)r[n+e]=i[t]+i[e]}return r}();function g(i){return typeof BigInt>\"u\"?Yr:i}function Yr(){throw new Error(\"BigInt not supported\")}\n/*! Bundled license information:\n\nieee754/index.js:\n  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)\n\nbuffer/index.js:\n  (*!\n   * The buffer module from node.js, for the browser.\n   *\n   * @author   Feross Aboukhadijeh <https://feross.org>\n   * @license  MIT\n   *)\n*/\n", "export { Buffer } from 'buffer'\n", "export function existsSync() {\n  return false\n}\n\nexport function lstatSync() {\n  return {\n    dev: 0,\n    ino: 0,\n    mode: 0,\n    nlink: 0,\n    uid: 0,\n    gid: 0,\n    rdev: 0,\n    size: 0,\n    blksize: 0,\n    blocks: 0,\n    atimeMs: 0,\n    mtimeMs: 0,\n    ctimeMs: 0,\n    birthtimeMs: 0,\n    atime: new Date(),\n    mtime: new Date(),\n    ctime: new Date(),\n    birthtime: new Date(),\n  }\n}\n\nexport function statSync() {\n  return lstatSync()\n}\n\nexport function readdirSync() {\n  return []\n}\n\nexport function readdir(cb: (err: Error | null, files: string[]) => void) {\n  cb(null, [])\n}\n\nexport function readlinkSync() {\n  return ''\n}\n\nexport function realpathSync() {\n  return ''\n}\n\nexport function chmodSync() {}\n\nexport function renameSync() {}\n\nexport function mkdirSync() {}\n\nexport function rmdirSync() {}\n\nexport function rmSync() {}\n\nexport function unlinkSync() {}\n\nexport const promises = {}\n\n/**\n * A stub for fs for tryLoadEnv not to attempt loading .env\n */\nconst fs = {\n  existsSync,\n  lstatSync,\n  statSync,\n  readdirSync,\n  readdir,\n  readlinkSync,\n  realpathSync,\n  chmodSync,\n  renameSync,\n  mkdirSync,\n  rmdirSync,\n  rmSync,\n  unlinkSync,\n  promises,\n}\n\nexport default fs\n", "export function resolve(...args: any[]) {\n  return args.join('/')\n}\n\nexport function join(...args: any[]) {\n  return args.join('/')\n}\n\nexport function parse(path: string) {\n  const base = basename(path)\n  const dir = dirname(path)\n  const [name, ext] = base.split('.')\n  return { root: '/', dir, base, ext, name }\n}\n\nexport function basename(path: string) {\n  const parts = path.split('/')\n  return parts[parts.length - 1]\n}\n\nexport function dirname(path: string) {\n  const parts = path.split('/')\n  return parts.slice(0, -1).join('/')\n}\n\nexport const sep = '/'\n\nexport const posix = {\n  sep,\n}\n\n/**\n * A poor man's shim for the \"path\" module\n */\nconst path = {\n  basename,\n  dirname,\n  join,\n  parse,\n  posix,\n  resolve,\n  sep,\n}\n\nexport default path\n", "{\n  \"name\": \"@prisma/internals\",\n  \"version\": \"6.12.0\",\n  \"description\": \"This package is intended for Prisma's internal use\",\n  \"main\": \"dist/index.js\",\n  \"types\": \"dist/index.d.ts\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/prisma/prisma.git\",\n    \"directory\": \"packages/internals\"\n  },\n  \"homepage\": \"https://www.prisma.io\",\n  \"author\": \"Tim Suchanek <suchanek@prisma.io>\",\n  \"bugs\": \"https://github.com/prisma/prisma/issues\",\n  \"license\": \"Apache-2.0\",\n  \"scripts\": {\n    \"dev\": \"DEV=true tsx helpers/build.ts\",\n    \"build\": \"tsx helpers/build.ts\",\n    \"test\": \"dotenv -e ../../.db.env -- jest --silent\",\n    \"prepublishOnly\": \"pnpm run build\"\n  },\n  \"files\": [\n    \"README.md\",\n    \"dist\",\n    \"!**/libquery_engine*\",\n    \"!dist/get-generators/engines/*\",\n    \"scripts\"\n  ],\n  \"devDependencies\": {\n    \"@babel/helper-validator-identifier\": \"7.25.9\",\n    \"@opentelemetry/api\": \"1.9.0\",\n    \"@swc/core\": \"1.11.5\",\n    \"@swc/jest\": \"0.2.37\",\n    \"@types/babel__helper-validator-identifier\": \"7.15.2\",\n    \"@types/jest\": \"29.5.14\",\n    \"@types/node\": \"18.19.76\",\n    \"@types/resolve\": \"1.20.6\",\n    \"archiver\": \"6.0.2\",\n    \"checkpoint-client\": \"1.1.33\",\n    \"cli-truncate\": \"4.0.0\",\n    \"dotenv\": \"16.5.0\",\n    \"esbuild\": \"0.25.5\",\n    \"escape-string-regexp\": \"5.0.0\",\n    \"execa\": \"5.1.1\",\n    \"fast-glob\": \"3.3.3\",\n    \"find-up\": \"7.0.0\",\n    \"fp-ts\": \"2.16.9\",\n    \"fs-extra\": \"11.3.0\",\n    \"fs-jetpack\": \"5.1.0\",\n    \"global-dirs\": \"4.0.0\",\n    \"globby\": \"11.1.0\",\n    \"identifier-regex\": \"1.0.0\",\n    \"indent-string\": \"4.0.0\",\n    \"is-windows\": \"1.0.2\",\n    \"is-wsl\": \"3.1.0\",\n    \"jest\": \"29.7.0\",\n    \"jest-junit\": \"16.0.0\",\n    \"kleur\": \"4.1.5\",\n    \"mock-stdin\": \"1.0.0\",\n    \"new-github-issue-url\": \"0.2.1\",\n    \"node-fetch\": \"3.3.2\",\n    \"npm-packlist\": \"5.1.3\",\n    \"open\": \"7.4.2\",\n    \"p-map\": \"4.0.0\",\n    \"read-package-up\": \"11.0.0\",\n    \"resolve\": \"1.22.10\",\n    \"string-width\": \"7.2.0\",\n    \"strip-ansi\": \"6.0.1\",\n    \"strip-indent\": \"4.0.0\",\n    \"temp-dir\": \"2.0.0\",\n    \"tempy\": \"1.0.1\",\n    \"terminal-link\": \"4.0.0\",\n    \"tmp\": \"0.2.3\",\n    \"ts-node\": \"10.9.2\",\n    \"ts-pattern\": \"5.6.2\",\n    \"ts-toolbelt\": \"9.6.0\",\n    \"typescript\": \"5.4.5\",\n    \"yarn\": \"1.22.22\"\n  },\n  \"dependencies\": {\n    \"@prisma/config\": \"workspace:*\",\n    \"@prisma/debug\": \"workspace:*\",\n    \"@prisma/dmmf\": \"workspace:*\",\n    \"@prisma/driver-adapter-utils\": \"workspace:*\",\n    \"@prisma/engines\": \"workspace:*\",\n    \"@prisma/fetch-engine\": \"workspace:*\",\n    \"@prisma/generator\": \"workspace:*\",\n    \"@prisma/generator-helper\": \"workspace:*\",\n    \"@prisma/get-platform\": \"workspace:*\",\n    \"@prisma/prisma-schema-wasm\": \"6.12.0-15.8047c96bbd92db98a2abc7c9323ce77c02c89dbc\",\n    \"@prisma/schema-engine-wasm\": \"6.12.0-15.8047c96bbd92db98a2abc7c9323ce77c02c89dbc\",\n    \"@prisma/schema-files-loader\": \"workspace:*\",\n    \"arg\": \"5.0.2\",\n    \"prompts\": \"2.4.2\"\n  },\n  \"peerDependencies\": {\n    \"typescript\": \">=5.1.0\"\n  },\n  \"peerDependenciesMeta\": {\n    \"typescript\": {\n      \"optional\": true\n    }\n  },\n  \"sideEffects\": false\n}", "{\n  \"name\": \"@prisma/engines-version\",\n  \"version\": \"6.12.0-15.8047c96bbd92db98a2abc7c9323ce77c02c89dbc\",\n  \"main\": \"index.js\",\n  \"types\": \"index.d.ts\",\n  \"license\": \"Apache-2.0\",\n  \"author\": \"Tim Suchanek <suchanek@prisma.io>\",\n  \"prisma\": {\n    \"enginesVersion\": \"8047c96bbd92db98a2abc7c9323ce77c02c89dbc\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/prisma/engines-wrapper.git\",\n    \"directory\": \"packages/engines-version\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"18.19.76\",\n    \"typescript\": \"4.9.5\"\n  },\n  \"files\": [\n    \"index.js\",\n    \"index.d.ts\"\n  ],\n  \"scripts\": {\n    \"build\": \"tsc -d\"\n  }\n}", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.enginesVersion = void 0;\nexports.enginesVersion = require('./package.json').prisma.enginesVersion;\n//# sourceMappingURL=index.js.map", "'use strict';\n\nmodule.exports = (string, count = 1, options) => {\n\toptions = {\n\t\tindent: ' ',\n\t\tincludeEmptyLines: false,\n\t\t...options\n\t};\n\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`input\\` to be a \\`string\\`, got \\`${typeof string}\\``\n\t\t);\n\t}\n\n\tif (typeof count !== 'number') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`count\\` to be a \\`number\\`, got \\`${typeof count}\\``\n\t\t);\n\t}\n\n\tif (typeof options.indent !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`options.indent\\` to be a \\`string\\`, got \\`${typeof options.indent}\\``\n\t\t);\n\t}\n\n\tif (count === 0) {\n\t\treturn string;\n\t}\n\n\tconst regex = options.includeEmptyLines ? /^/gm : /^(?!\\s*$)/gm;\n\n\treturn string.replace(regex, options.indent.repeat(count));\n};\n", "'use strict';\n\nmodule.exports = ({onlyFirst = false} = {}) => {\n\tconst pattern = [\n\t\t'[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n};\n", "'use strict';\nconst ansiRegex = require('ansi-regex');\n\nmodule.exports = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;\n", "'use strict';\nmodule.exports = (function()\n{\n  function _min(d0, d1, d2, bx, ay)\n  {\n    return d0 < d1 || d2 < d1\n        ? d0 > d2\n            ? d2 + 1\n            : d0 + 1\n        : bx === ay\n            ? d1\n            : d1 + 1;\n  }\n\n  return function(a, b)\n  {\n    if (a === b) {\n      return 0;\n    }\n\n    if (a.length > b.length) {\n      var tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    var la = a.length;\n    var lb = b.length;\n\n    while (la > 0 && (a.charCodeAt(la - 1) === b.charCodeAt(lb - 1))) {\n      la--;\n      lb--;\n    }\n\n    var offset = 0;\n\n    while (offset < la && (a.charCodeAt(offset) === b.charCodeAt(offset))) {\n      offset++;\n    }\n\n    la -= offset;\n    lb -= offset;\n\n    if (la === 0 || lb < 3) {\n      return lb;\n    }\n\n    var x = 0;\n    var y;\n    var d0;\n    var d1;\n    var d2;\n    var d3;\n    var dd;\n    var dy;\n    var ay;\n    var bx0;\n    var bx1;\n    var bx2;\n    var bx3;\n\n    var vector = [];\n\n    for (y = 0; y < la; y++) {\n      vector.push(y + 1);\n      vector.push(a.charCodeAt(offset + y));\n    }\n\n    var len = vector.length - 1;\n\n    for (; x < lb - 3;) {\n      bx0 = b.charCodeAt(offset + (d0 = x));\n      bx1 = b.charCodeAt(offset + (d1 = x + 1));\n      bx2 = b.charCodeAt(offset + (d2 = x + 2));\n      bx3 = b.charCodeAt(offset + (d3 = x + 3));\n      dd = (x += 4);\n      for (y = 0; y < len; y += 2) {\n        dy = vector[y];\n        ay = vector[y + 1];\n        d0 = _min(dy, d0, d1, bx0, ay);\n        d1 = _min(d0, d1, d2, bx1, ay);\n        d2 = _min(d1, d2, d3, bx2, ay);\n        dd = _min(d2, d3, dd, bx3, ay);\n        vector[y] = dd;\n        d3 = d2;\n        d2 = d1;\n        d1 = d0;\n        d0 = dy;\n      }\n    }\n\n    for (; x < lb;) {\n      bx0 = b.charCodeAt(offset + (d0 = x));\n      dd = ++x;\n      for (y = 0; y < len; y += 2) {\n        dy = vector[y];\n        vector[y] = dd = _min(dy, d0, dd, bx0, vector[y + 1]);\n        d0 = dy;\n      }\n    }\n\n    return dd;\n  };\n})();\n\n", "import { BasicBuilder } from './BasicBuilder'\nimport type { KeyType } from './KeyType'\nimport { Writer } from './Writer'\n\nexport abstract class TypeBuilder implements BasicBuilder {\n  // TODO(@SevInf): this should be replaced with precedence system that would\n  // automatically add parenthesis where they are needed\n  needsParenthesisWhenIndexed = false\n  needsParenthesisInKeyof = false\n  needsParenthesisInUnion = false\n\n  abstract write(writer: Writer): void\n\n  subKey(key: string): KeyType {\n    // TODO: since we translating ESM to CommonJS during bundling, we\n    // can't handle circular dependencies the same way ESM does. We have to delay KeyType import\n    // to resolve it. Once we stop doing this, we can move this import to top of the file.\n    const { KeyType } = require('./KeyType')\n    return new KeyType(this, key)\n  }\n\n  writeIndexed(writer: Writer) {\n    if (this.needsParenthesisWhenIndexed) {\n      writer.write('(')\n    }\n\n    writer.write(this)\n\n    if (this.needsParenthesisWhenIndexed) {\n      writer.write(')')\n    }\n  }\n}\n", "import { TypeBuilder } from './TypeBuilder'\nimport { Writer } from './Writer'\n\nexport class KeyType extends TypeBuilder {\n  constructor(public baseType: TypeBuilder, public key: string) {\n    super()\n  }\n  write(writer: Writer): void {\n    this.baseType.writeIndexed(writer)\n\n    writer.write('[').write(`\"${this.key}\"`).write(']')\n  }\n}\n\nexport function keyType(baseType: TypeBuilder, key: string) {\n  return new KeyType(baseType, key)\n}\n", "type Listener = (...args: any[]) => void\n\nexport class EventEmitter {\n  private events: Record<string, Listener[]> = {}\n\n  on(event: string, listener: Listener) {\n    if (!this.events[event]) {\n      this.events[event] = []\n    }\n\n    this.events[event].push(listener)\n\n    return this\n  }\n\n  emit(event: string, ...args: any[]) {\n    if (!this.events[event]) {\n      return false\n    }\n\n    this.events[event].forEach((listener) => {\n      listener(...args)\n    })\n\n    return true\n  }\n}\n\n/**\n * A poor man's shim for the \"events\" module\n */\nconst events = {\n  EventEmitter,\n}\n\nexport default events\n", "import * as Extensions from './core/extensions'\nimport * as Public from './core/public'\nimport * as Types from './core/types'\n\nexport { type Types }\nexport { Extensions }\nexport { Public }\n\nexport { type JsonBatchQuery, type JsonQuery } from './core/engines'\nexport { PrismaClientInitializationError } from './core/errors/PrismaClientInitializationError'\nexport { PrismaClientKnownRequestError } from './core/errors/PrismaClientKnownRequestError'\nexport { PrismaClientRustPanicError } from './core/errors/PrismaClientRustPanicError'\nexport { PrismaClientUnknownRequestError } from './core/errors/PrismaClientUnknownRequestError'\nexport { PrismaClientValidationError } from './core/errors/PrismaClientValidationError'\nexport { deserializeJsonResponse } from './core/jsonProtocol/deserializeJsonResponse'\nexport { serializeJsonQuery } from './core/jsonProtocol/serializeJsonQuery'\nexport {\n  type Metric,\n  type MetricHistogram,\n  type MetricHistogramBucket,\n  type Metrics,\n  MetricsClient,\n} from './core/metrics/MetricsClient'\nexport { createParam } from './core/model/Param'\nexport { defineDmmfProperty } from './core/runtimeDataModel'\nexport type * from './core/types/exported'\nexport type { ITXClientDenyList } from './core/types/exported/itxClientDenyList'\nexport { objectEnumValues } from './core/types/exported/ObjectEnums'\nexport { skip } from './core/types/exported/Skip'\nexport { makeTypedQueryFactory } from './core/types/exported/TypedSql'\nexport type { PrismaClientOptions } from './getPrismaClient'\nexport { getPrismaClient } from './getPrismaClient'\nexport { makeStrictEnum } from './strictEnum'\nexport { deserializeRawResult } from './utils/deserializeRawResults'\nexport { getRuntime } from './utils/getRuntime'\nexport { warnEnvConflicts } from './warnEnvConflicts'\nexport {\n  type BaseDMMF,\n  dmmfToRuntimeDataModel,\n  type GetPrismaClientConfig,\n  type Operation,\n  type RuntimeDataModel,\n} from '@prisma/client-common'\nexport { Debug } from '@prisma/debug'\nexport * as DMMF from '@prisma/dmmf'\nexport type { SqlDriverAdapterFactory } from '@prisma/driver-adapter-utils'\nexport { warnOnce } from '@prisma/internals'\nexport { default as Decimal } from 'decimal.js'\nexport type { RawValue, Value } from 'sql-template-tag'\nexport { empty, join, raw, Sql, default as sqltag } from 'sql-template-tag'\n", "import { defineExtension } from './defineExtension'\nimport { getExtensionContext } from './getExtensionContext'\n\nexport { defineExtension }\nexport { getExtensionContext }\n", "import { Client } from '../../getPrismaClient'\nimport { ExtensionArgs } from '../types/exported/ExtensionArgs'\n\nexport function defineExtension(ext: ExtensionArgs | ((client: Client) => Client)) {\n  if (typeof ext === 'function') {\n    return ext\n  }\n\n  return (client: Client) => client.$extends(ext)\n}\n", "/*\n * Because we use a symbol to store the context, we need to merge the context\n * with the original this type. We manage the context via `getExtensionContext`\n * to circumvent the limitations of `this` inference in TS, while also providing\n * a unified API for context management in generic and non-generic extensions.\n */\n\n/* eslint-disable prettier/prettier */\nexport type Context<T> = T extends { [K: symbol]: { ctx: infer C } }\n  ? C &\n      T & {\n        /**\n         * @deprecated Use `$name` instead.\n         */\n        name?: string\n        $name?: string\n        $parent?: unknown\n      }\n  : T & {\n      /**\n       * @deprecated Use `$name` instead.\n       */\n      name?: string\n      $name?: string\n      $parent?: unknown\n    }\n\nexport function getExtensionContext<T>(that: T) {\n  return that as any as Context<T>\n}\n", "import { validator } from './validator'\n\n/*\n * /!\\ These exports are exposed to the user. Proceed with caution.\n *\n * TODO: Move more hardcoded utils from generation into here\n */\n\nexport { validator }\n", "import { Args, Operation } from '../types/exported/Public'\nimport { Exact } from '../types/exported/Utils'\n\nexport function validator<V>(): <S>(select: Exact<S, V>) => S\nexport function validator<C, M extends Exclude<keyof C, `$${string}`>, O extends keyof C[M] & Operation>(\n  client: C,\n  model: M,\n  operation: O,\n): <S>(select: Exact<S, Args<C[M], O>>) => S\nexport function validator<\n  C,\n  M extends Exclude<keyof C, `$${string}`>,\n  O extends keyof C[M] & Operation,\n  P extends keyof Args<C[M], O>,\n>(client: C, model: M, operation: O, prop: P): <S>(select: Exact<S, Args<C[M], O>[P]>) => S\nexport function validator(..._args: any[]) {\n  return (args: any) => args\n}\n", "import { setClassName } from '@prisma/internals'\n\nexport class PrismaClientInitializationError extends Error {\n  clientVersion: string\n  errorCode?: string\n  retryable?: boolean\n\n  constructor(message: string, clientVersion: string, errorCode?: string) {\n    super(message)\n    this.name = 'PrismaClientInitializationError'\n\n    this.clientVersion = clientVersion\n    this.errorCode = errorCode\n    Error.captureStackTrace(PrismaClientInitializationError)\n  }\n  get [Symbol.toStringTag]() {\n    return 'PrismaClientInitializationError'\n  }\n}\n\nsetClassName(PrismaClientInitializationError, 'PrismaClientInitializationError')\n", "export { checkUnsupportedDataProxy } from './cli/checkUnsupportedDataProxy'\nexport { checkUnsupportedSchemaEngineWasm } from './cli/checkUnsupportedSchemaEngineWasm'\nexport { type DirectoryConfig, inferDirectoryConfig } from './cli/directoryConfig'\nexport { getGeneratorSuccessMessage } from './cli/getGeneratorSuccessMessage'\nexport {\n  getPrismaConfigFromPackageJson,\n  type GetSchemaOptions,\n  getSchemaWithPath,\n  getSchemaWithPathOptional,\n  printSchemaLoadedMessage,\n} from './cli/getSchema'\nexport { getTypescriptVersion } from './cli/getTypescriptVersion'\nexport { getCLIPathHash, getProjectHash } from './cli/hashes'\nexport { unknownCommand } from './cli/Help'\nexport { HelpError } from './cli/Help'\nexport { loadSchemaContext, processSchemaResult, type SchemaContext } from './cli/schemaContext'\nexport type {\n  Command,\n  Commands,\n  CompiledGeneratorDefinition,\n  Dictionary,\n  GeneratorConfig,\n  GeneratorDefinition,\n  GeneratorDefinitionWithPackage,\n  GeneratorFunction,\n  GeneratorOptions,\n} from './cli/types'\nexport { arg, format, isError } from './cli/utils'\nexport { ClientEngineType, getClientEngineType } from './client/getClientEngineType'\nexport { credentialsToUri, protocolToConnectorType, uriToCredentials } from './convertCredentials'\nexport * from './engine-commands'\nexport { resolveUrl } from './engine-commands/getConfig'\nexport { relativizePathInPSLError } from './engine-commands/relativizePathInPSLError'\nexport { Generator } from './Generator'\nexport {\n  type GeneratorRegistry,\n  type GeneratorRegistryEntry,\n  getGenerator,\n  getGenerators,\n} from './get-generators/getGenerators'\nexport { fixBinaryTargets } from './get-generators/utils/fixBinaryTargets'\nexport { printGeneratorConfig } from './get-generators/utils/printGeneratorConfig'\nexport { getPackedPackage } from './getPackedPackage'\nexport { highlightDatamodel, highlightSql, highlightTS } from './highlight/highlight'\nexport * as logger from './logger'\nexport type { MigrateTypes } from './migrateTypes'\nexport { ErrorArea, getWasmError, isRustPanic, isWasmPanic, RustPanic } from './panic'\nexport { BinaryType } from './resolveBinary'\nexport { engineEnvVarMap, resolveBinary } from './resolveBinary'\nexport { resolvePkg } from './resolvePkg'\nexport type { SchemaEngineLogLine } from './schemaEngineCommands'\nexport { canConnectToDatabase, createDatabase, dropDatabase } from './schemaEngineCommands'\nexport { SchemaEngineExitCode } from './schemaEngineCommands'\nexport { sendPanic } from './sendPanic'\nexport * from './tracing/types'\nexport type { DatabaseCredentials } from './types'\nexport { assertAlways } from './utils/assertAlways'\nexport { assertNever } from './utils/assertNever'\nexport { binaryTargetRegex } from './utils/binaryTargetRegex'\nexport { default as byline } from './utils/byline'\nexport { callOnceOnSuccess } from './utils/callOnce'\nexport { canPrompt } from './utils/canPrompt'\nexport { chmodPlusX } from './utils/chmodPlusX'\nexport { locateLocalCloudflareD1 } from './utils/cloudflareD1'\nexport { drawBox } from './utils/drawBox'\nexport { extractPreviewFeatures } from './utils/extractPreviewFeatures'\nexport { formatms } from './utils/formatms'\nexport { formatTable } from './utils/formatTable'\nexport * as fsFunctional from './utils/fs-functional'\nexport * as fsUtils from './utils/fs-utils'\nexport { getCommandWithExecutor } from './utils/getCommandWithExecutor'\nexport { getEnvPaths } from './utils/getEnvPaths'\nexport { getMigrateConfigDir } from './utils/getMigrateConfigDir'\nexport { version } from './utils/getVersionFromPackageJson'\nexport { handleLibraryLoadingErrors } from './utils/handleEngineLoadingErrors'\nexport { handlePanic } from './utils/handlePanic'\nexport { hasOwnProperty } from './utils/hasOwnProperty'\nexport { isCi } from './utils/isCi'\nexport { isCurrentBinInstalledGlobally } from './utils/isCurrentBinInstalledGlobally'\nexport { isInContainer } from './utils/isInContainer'\nexport { isInNpmLifecycleHook } from './utils/isInNpmLifecycleHook'\nexport { isInteractive } from './utils/isInteractive'\nexport { isPromiseLike } from './utils/isPromiseLike'\nexport { isValidJsIdentifier } from './utils/isValidJsIdentifier'\nexport { keyBy } from './utils/keyBy'\nexport { link } from './utils/link'\nexport { loadLibrary as load } from './utils/load'\nexport { loadEnvFile } from './utils/loadEnvFile'\nexport { mapObjectValues } from './utils/mapObjectValues'\nexport { maskSchema } from './utils/maskSchema'\nexport { maxBy, maxWithComparator } from './utils/max'\nexport { maybeInGitHook } from './utils/maybeInGitHook'\nexport { missingGeneratorMessage } from './utils/missingGeneratorMessage'\nexport { parseAWSNodejsRuntimeEnvVarVersion } from './utils/parseAWSNodejsRuntimeEnvVarVersion'\nexport { parseBinaryTargetsEnvValue, parseEnvValue } from './utils/parseEnvValue'\nexport { longestCommonPathPrefix, pathToPosix } from './utils/path'\nexport { pick } from './utils/pick'\nexport { printConfigWarnings } from './utils/printConfigWarnings'\nexport {\n  isPrismaPostgres,\n  isPrismaPostgresDev,\n  PRISMA_POSTGRES_PROTOCOL,\n  PRISMA_POSTGRES_PROVIDER,\n} from './utils/prismaPostgres'\nexport { extractSchemaContent, type SchemaFileInput } from './utils/schemaFileInput'\nexport { type MultipleSchemas } from './utils/schemaFileInput'\nexport { serializeQueryEngineName } from './utils/serializeQueryEngineName'\nexport { setClassName } from './utils/setClassName'\nexport { toSchemasContainer, toSchemasWithConfigDir } from './utils/toSchemasContainer'\nexport { type LoadedEnv, tryLoadEnvs } from './utils/tryLoadEnvs'\nexport { vercelPkgPathRegex } from './utils/vercelPkgPathRegex'\nexport { warnOnce } from './warnOnce'\nexport * as wasm from './wasm'\nexport { wasmSchemaEngineLoader } from './WasmSchemaEngineLoader'\nexport type { EnvPaths } from '@prisma/generator'\nexport type { BinaryTarget } from '@prisma/get-platform'\nexport { getBinaryTargetForCurrentPlatform, getNodeAPIName } from '@prisma/get-platform'\nexport type { GetSchemaResult } from '@prisma/schema-files-loader'\n", "let FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM, isTTY=true;\nif (typeof process !== 'undefined') {\n\t({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env || {});\n\tisTTY = process.stdout && process.stdout.isTTY;\n}\n\nexport const $ = {\n\tenabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== 'dumb' && (\n\t\tFORCE_COLOR != null && FORCE_COLOR !== '0' || isTTY\n\t)\n}\n\nfunction init(x, y) {\n\tlet rgx = new RegExp(`\\\\x1b\\\\[${y}m`, 'g');\n\tlet open = `\\x1b[${x}m`, close = `\\x1b[${y}m`;\n\n\treturn function (txt) {\n\t\tif (!$.enabled || txt == null) return txt;\n\t\treturn open + (!!~(''+txt).indexOf(close) ? txt.replace(rgx, close + open) : txt) + close;\n\t};\n}\n\n// modifiers\nexport const reset = init(0, 0);\nexport const bold = init(1, 22);\nexport const dim = init(2, 22);\nexport const italic = init(3, 23);\nexport const underline = init(4, 24);\nexport const inverse = init(7, 27);\nexport const hidden = init(8, 28);\nexport const strikethrough = init(9, 29);\n\n// colors\nexport const black = init(30, 39);\nexport const red = init(31, 39);\nexport const green = init(32, 39);\nexport const yellow = init(33, 39);\nexport const blue = init(34, 39);\nexport const magenta = init(35, 39);\nexport const cyan = init(36, 39);\nexport const white = init(37, 39);\nexport const gray = init(90, 39);\nexport const grey = init(90, 39);\n\n// background colors\nexport const bgBlack = init(40, 49);\nexport const bgRed = init(41, 49);\nexport const bgGreen = init(42, 49);\nexport const bgYellow = init(43, 49);\nexport const bgBlue = init(44, 49);\nexport const bgMagenta = init(45, 49);\nexport const bgCyan = init(46, 49);\nexport const bgWhite = init(47, 49);\n", "import * as kleur from 'kleur/colors'\nimport { bold } from 'kleur/colors'\n\nconst MAX_ARGS_HISTORY = 100\nconst COLORS = ['green', 'yellow', 'blue', 'magenta', 'cyan', 'red']\n\nconst argsHistory: [namespace: string, ...unknown[]][] = []\nlet lastTimestamp = Date.now()\nlet lastColor = 0\n\nconst processEnv = typeof process !== 'undefined' ? process.env : {}\n\nglobalThis.DEBUG ??= processEnv.DEBUG ?? ''\nglobalThis.DEBUG_COLORS ??= processEnv.DEBUG_COLORS ? processEnv.DEBUG_COLORS === 'true' : true\n\n/**\n * Top-level utilities to configure the debug module.\n *\n * @example\n * ```ts\n * import Debug from '@prisma/debug'\n * Debug.enable('prisma:client')\n * const debug = Debug('prisma:client')\n * debug('Hello World')\n * ```\n */\nconst topProps = {\n  enable(namespace: any) {\n    if (typeof namespace === 'string') {\n      globalThis.DEBUG = namespace\n    }\n  },\n  disable() {\n    const prev = globalThis.DEBUG\n    globalThis.DEBUG = ''\n    return prev\n  },\n  // this is the core logic to check if logging should happen or not\n  enabled(namespace: string) {\n    // these are the namespaces that we are listening to in DEBUG=...\n    const listenedNamespaces: string[] = globalThis.DEBUG.split(',').map((s: string) => {\n      return s.replace(/[.+?^${}()|[\\]\\\\]/g, '\\\\$&') // escape regex except \"*\"\n    })\n\n    // we take incoming namespaces and check then against listened\n    const isListened = listenedNamespaces.some((listenedNamespace) => {\n      if (listenedNamespace === '' || listenedNamespace[0] === '-') return false\n\n      return namespace.match(RegExp(listenedNamespace.split('*').join('.*') + '$'))\n    })\n\n    // we take incoming namespaces and check then against excluded\n    const isExcluded = listenedNamespaces.some((listenedNamespace) => {\n      if (listenedNamespace === '' || listenedNamespace[0] !== '-') return false\n\n      return namespace.match(RegExp(listenedNamespace.slice(1).split('*').join('.*') + '$'))\n    })\n\n    return isListened && !isExcluded\n  },\n  log: (...args: string[]) => {\n    const [namespace, format, ...rest] = args\n    // Note: `console.warn` / `console.log` use `util.format` internally, so they can handle\n    // `printf`-style string interpolation.\n    const logWithFormatting = console.warn ?? console.log\n\n    // console only formats first arg, concat ns+format\n    logWithFormatting(`${namespace} ${format}`, ...rest)\n  },\n  formatters: {}, // not implemented\n}\n\n/**\n * Create a new debug instance with the given namespace.\n *\n * @example\n * ```ts\n * import Debug from '@prisma/debug'\n * const debug = Debug('prisma:client')\n * debug('Hello World')\n * ```\n */\nfunction debugCreate(namespace: string) {\n  const instanceProps = {\n    color: COLORS[lastColor++ % COLORS.length],\n    enabled: topProps.enabled(namespace),\n    namespace: namespace,\n    log: topProps.log,\n    extend: () => {}, // not implemented\n  }\n\n  const debugCall = (...args: any[]) => {\n    const { enabled, namespace, color, log } = instanceProps\n\n    // we push the args to our history of args\n    if (args.length !== 0) {\n      argsHistory.push([namespace, ...args])\n    }\n\n    // if it is too big, then we remove some\n    if (argsHistory.length > MAX_ARGS_HISTORY) {\n      argsHistory.shift()\n    }\n\n    if (topProps.enabled(namespace) || enabled) {\n      const stringArgs = args.map((arg) => {\n        if (typeof arg === 'string') {\n          return arg\n        }\n\n        return safeStringify(arg)\n      })\n\n      const ms = `+${Date.now() - lastTimestamp}ms`\n      lastTimestamp = Date.now()\n\n      if (globalThis.DEBUG_COLORS) {\n        log(kleur[color](bold(namespace)), ...stringArgs, kleur[color](ms))\n      } else {\n        log(namespace, ...stringArgs, ms)\n      }\n    }\n  }\n\n  return new Proxy(debugCall, {\n    get: (_, prop) => instanceProps[prop],\n    set: (_, prop, value) => (instanceProps[prop] = value),\n  }) as typeof debugCall & typeof instanceProps\n}\n\nconst Debug = new Proxy(debugCreate, {\n  get: (_, prop) => topProps[prop],\n  set: (_, prop, value) => (topProps[prop] = value),\n}) as typeof debugCreate & typeof topProps\n\nfunction safeStringify(value: any, indent = 2) {\n  const cache = new Set<any>()\n\n  return JSON.stringify(\n    value,\n    (key, value) => {\n      if (typeof value === 'object' && value !== null) {\n        if (cache.has(value)) {\n          return `[Circular *]`\n        }\n\n        cache.add(value)\n      } else if (typeof value === 'bigint') {\n        return value.toString()\n      }\n\n      return value\n    },\n    indent,\n  )\n}\n\n/**\n * We can get the logs for all the last {@link MAX_ARGS_HISTORY} ${@link debugCall} that\n * have happened in the different packages. Useful to generate error report links.\n * @see https://stackoverflow.com/questions/417142/what-is-the-maximum-length-of-a-url-in-different-browsers\n * @param numChars\n * @returns\n */\nexport function getLogs(numChars = 7500): string {\n  const logs = argsHistory\n    .map(([namespace, ...args]) => {\n      return `${namespace} ${args\n        .map((arg) => {\n          if (typeof arg === 'string') {\n            return arg\n          } else {\n            return JSON.stringify(arg)\n          }\n        })\n        .join(' ')}`\n    })\n    .join('\\n')\n\n  if (logs.length < numChars) {\n    return logs\n  }\n\n  return logs.slice(-numChars)\n}\n\nexport function clearLogs() {\n  argsHistory.length = 0\n}\n\nexport { Debug }\nexport default Debug\n", "export { assertNodeAPISupported } from './assertNodeAPISupported'\nexport { type BinaryTarget, binaryTargets } from './binaryTargets'\nexport { getNodeAPIName } from './getNodeAPIName'\nexport type { PlatformInfo } from './getPlatform'\nexport { getBinaryTargetForCurrentPlatform, getos, getPlatformInfo } from './getPlatform'\nexport { link } from './link'\nexport * from './test-utils'\n", "// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst packageJson = require('../../package.json')\n\nexport const version: string = packageJson.version\n", "import type { GeneratorConfig } from '@prisma/generator'\n\nexport enum ClientEngineType {\n  Library = 'library',\n  Binary = 'binary',\n  Client = 'client',\n}\n\nexport function getClientEngineType(generatorConfig?: GeneratorConfig): ClientEngineType {\n  const engineTypeFromEnvVar = getEngineTypeFromEnvVar()\n  if (engineTypeFromEnvVar) return engineTypeFromEnvVar\n  if (generatorConfig?.config.engineType === ClientEngineType.Library) {\n    return ClientEngineType.Library\n  } else if (generatorConfig?.config.engineType === ClientEngineType.Binary) {\n    return ClientEngineType.Binary\n  } else if (generatorConfig?.config.engineType === ClientEngineType.Client) {\n    return ClientEngineType.Client\n  } else {\n    return getDefaultEngineType(generatorConfig)\n  }\n}\n\nfunction getEngineTypeFromEnvVar() {\n  const engineType = process.env.PRISMA_CLIENT_ENGINE_TYPE\n  if (engineType === ClientEngineType.Library) {\n    return ClientEngineType.Library\n  } else if (engineType === ClientEngineType.Binary) {\n    return ClientEngineType.Binary\n  } else if (engineType === ClientEngineType.Client) {\n    return ClientEngineType.Client\n  } else {\n    return undefined\n  }\n}\n\nfunction getDefaultEngineType(generatorConfig?: GeneratorConfig): ClientEngineType {\n  if (generatorConfig?.previewFeatures.includes('queryCompiler')) {\n    return ClientEngineType.Client\n  }\n  return ClientEngineType.Library\n}\n", "export const PRISMA_POSTGRES_PROVIDER = 'prisma+postgres'\n\nexport const PRISMA_POSTGRES_PROTOCOL = `${PRISMA_POSTGRES_PROVIDER}:`\n\ndeclare const prismaPostgresBrand: unique symbol\ndeclare const prismaPostgresDevBrand: unique symbol\n\nexport type PrismaPostgresUrl<T extends string | URL> = T & {\n  readonly [prismaPostgresBrand]: true\n}\n\nexport type PrismaPostgresDevUrl<T extends string | URL> = PrismaPostgresUrl<T> & {\n  readonly [prismaPostgresDevBrand]: true\n}\n\nexport function isPrismaPostgres<T extends string | URL>(\n  connectionString?: T,\n): connectionString is PrismaPostgresUrl<T> {\n  return connectionString?.toString().startsWith(`${PRISMA_POSTGRES_PROTOCOL}//`) ?? false\n}\n\nexport function isPrismaPostgresDev<T extends string | URL>(\n  connectionString?: T,\n): connectionString is PrismaPostgresDevUrl<T> {\n  if (!isPrismaPostgres(connectionString)) {\n    return false\n  }\n\n  const { host } = new URL(connectionString)\n\n  return host.includes('localhost') || host.includes('127.0.0.1') || host.includes('[::1]')\n}\n", "import { blue, cyan, red, yellow } from 'kleur/colors'\n\nexport const tags = {\n  error: red('prisma:error'),\n  warn: yellow('prisma:warn'),\n  info: cyan('prisma:info'),\n  query: blue('prisma:query'),\n}\nexport const should = {\n  warn: () => !process.env.PRISMA_DISABLE_WARNINGS,\n}\nexport function log(...data: any[]) {\n  console.log(...data)\n}\nexport function warn(message: any, ...optionalParams: any[]) {\n  if (should.warn()) {\n    console.warn(`${tags.warn} ${message}`, ...optionalParams)\n  }\n}\nexport function info(message: any, ...optionalParams: any[]) {\n  console.info(`${tags.info} ${message}`, ...optionalParams)\n}\nexport function error(message: any, ...optionalParams: any[]) {\n  console.error(`${tags.error} ${message}`, ...optionalParams)\n}\nexport function query(message: any, ...optionalParams: any[]) {\n  console.log(`${tags.query} ${message}`, ...optionalParams)\n}\n", "/**\n * Utility function to ensure exhaustive checks for union types.\n *\n * @example\n *   ```ts\n *   declare const fruit: 'Apple' | 'Orange'\n *\n *   switch (fruit) {\n *     case 'Apple:\n *       // do apple things\n *       break;\n *     case 'Orange:\n *       // do orange things\n *       break;\n *     default:\n *       // in case `fruit` type will expand in the future,\n *       // we'll get a compile-time error here, listing all unhandled\n *       // cases\n *       assertNever(fruit, 'Unknown fruit')\n *   }\n *   ```\n * @param arg variable of the any union type. By the time `assertNever` is called\n * all possible cases of this union must already be handled\n * @param errorMessage error message to throw in runtime. Normally, should never happen\n * unless compile-time check is skipped\n */\nexport function assertNever(arg: never, errorMessage: string): never {\n  throw new Error(errorMessage)\n}\n", "export function hasOwnProperty(object: object, key: PropertyKey): boolean {\n  return Object.prototype.hasOwnProperty.call(object, key)\n}\n", "export function mapObjectValues<K extends PropertyKey, T, U>(\n  object: Record<K, T>,\n  mapper: (value: T, key: K) => U,\n): Record<K, U> {\n  const result = {} as Record<K, U>\n\n  for (const key of Object.keys(object)) {\n    result[key] = mapper(object[key] as T, key as K)\n  }\n\n  return result\n}\n", "/**\n * Accepts an array and comparator function (similar to Array.prototype.sort)\n * and returns max element of that array, ordered with that comparator.\n * Functionally, equivalent of items.sort(comparator).at(-1), but performed non-destructively\n * in O(n)\n * @param items\n * @param comparator callback specifying the relative order of two items. See `Array.prototype.sort`\n * @returns\n */\nexport function maxWithComparator<T>(items: T[], comparator: (a: T, b: T) => number): T | undefined {\n  if (items.length === 0) {\n    return undefined\n  }\n  let result = items[0]\n\n  for (let i = 1; i < items.length; i++) {\n    const compareValue = comparator(result, items[i])\n    // comparator returning negative number means that b>a\n    if (compareValue < 0) {\n      result = items[i]\n    }\n  }\n  return result\n}\n\nexport function maxBy<T>(items: T[], callback: (item: T) => number): T | undefined {\n  return maxWithComparator(items, (a, b) => callback(a) - callback(b))\n}\n", "/**\n * Used for preserving class names for minified class instances\n * Useful for error objects and other classes where public name\n * actually matters\n *\n * @param classObject\n * @param name\n */\nexport function setClassName(classObject: Function, name: string) {\n  Object.defineProperty(classObject, 'name', {\n    value: name,\n    configurable: true,\n  })\n}\n", "import { warn } from './logger'\n\nconst alreadyWarned = new Set()\n\nexport const warnOnce = (key: string, message: string, ...args: unknown[]) => {\n  if (!alreadyWarned.has(key)) {\n    alreadyWarned.add(key)\n    warn(message, ...args)\n  }\n}\n", "import { setClassName } from '@prisma/internals'\n\nimport { ErrorWithBatchIndex } from './ErrorWithBatchIndex'\n\ntype KnownErrorParams = {\n  code: string\n  clientVersion: string\n  meta?: Record<string, unknown>\n  batchRequestIdx?: number\n}\n\nexport class PrismaClientKnownRequestError extends Error implements ErrorWithBatchIndex {\n  code: string\n  meta?: Record<string, unknown>\n  clientVersion: string\n  batchRequestIdx?: number\n\n  constructor(message: string, { code, clientVersion, meta, batchRequestIdx }: KnownErrorParams) {\n    super(message)\n    this.name = 'PrismaClientKnownRequestError'\n\n    this.code = code\n    this.clientVersion = clientVersion\n    this.meta = meta\n    Object.defineProperty(this, 'batchRequestIdx', {\n      value: batchRequestIdx,\n      enumerable: false,\n      writable: true,\n    })\n  }\n  get [Symbol.toStringTag]() {\n    return 'PrismaClientKnownRequestError'\n  }\n}\n\nsetClassName(PrismaClientKnownRequestError, 'PrismaClientKnownRequestError')\n", "import { setClassName } from '@prisma/internals'\n\nexport class PrismaClientRustPanicError extends Error {\n  clientVersion: string\n\n  constructor(message: string, clientVersion: string) {\n    super(message)\n    this.name = 'PrismaClientRustPanicError'\n\n    this.clientVersion = clientVersion\n  }\n  get [Symbol.toStringTag]() {\n    return 'PrismaClientRustPanicError'\n  }\n}\n\nsetClassName(PrismaClientRustPanicError, 'PrismaClientRustPanicError')\n", "import { setClassName } from '@prisma/internals'\n\nimport { ErrorWithBatchIndex } from './ErrorWithBatchIndex'\n\ntype UnknownErrorParams = {\n  clientVersion: string\n  batchRequestIdx?: number\n}\n\nexport class PrismaClientUnknownRequestError extends Error implements ErrorWithBatchIndex {\n  clientVersion: string\n  batchRequestIdx?: number\n\n  constructor(message: string, { clientVersion, batchRequestIdx }: UnknownErrorParams) {\n    super(message)\n    this.name = 'PrismaClientUnknownRequestError'\n\n    this.clientVersion = clientVersion\n    Object.defineProperty(this, 'batchRequestIdx', {\n      value: batchRequestIdx,\n      writable: true,\n      enumerable: false,\n    })\n  }\n  get [Symbol.toStringTag]() {\n    return 'PrismaClientUnknownRequestError'\n  }\n}\n\nsetClassName(PrismaClientUnknownRequestError, 'PrismaClientUnknownRequestError')\n", "import { setClassName } from '@prisma/internals'\n\ntype Options = {\n  clientVersion: string\n}\nexport class PrismaClientValidationError extends Error {\n  name = 'PrismaClientValidationError'\n  clientVersion: string\n\n  constructor(message: string, { clientVersion }: Options) {\n    super(message)\n    this.clientVersion = clientVersion\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'PrismaClientValidationError'\n  }\n}\nsetClassName(PrismaClientValidationError, 'PrismaClientValidationError')\n", "import { assertNever, mapObjectValues } from '@prisma/internals'\nimport Decimal from 'decimal.js'\n\nimport { JsonOutputTaggedValue } from '../engines'\nimport { JsOutputValue } from '../types/exported/JsApi'\n\nexport function deserializeJsonResponse(result: unknown): unknown {\n  if (result === null) {\n    return result\n  }\n\n  if (Array.isArray(result)) {\n    return result.map(deserializeJsonResponse)\n  }\n\n  if (typeof result === 'object') {\n    if (isTaggedValue(result)) {\n      return deserializeTaggedValue(result)\n    }\n\n    // avoid mapping class instances\n    if (result.constructor !== null && result.constructor.name !== 'Object') {\n      return result\n    }\n\n    return mapObjectValues(result, deserializeJsonResponse)\n  }\n\n  return result\n}\n\nfunction isTaggedValue(value: unknown): value is JsonOutputTaggedValue {\n  return value !== null && typeof value == 'object' && typeof value['$type'] === 'string'\n}\n\nfunction deserializeTaggedValue({ $type, value }: JsonOutputTaggedValue): JsOutputValue {\n  switch ($type) {\n    case 'BigInt':\n      return BigInt(value)\n    case 'Bytes': {\n      const { buffer, byteOffset, byteLength } = Buffer.from(value, 'base64')\n      return new Uint8Array(buffer, byteOffset, byteLength)\n    }\n    case 'DateTime':\n      return new Date(value)\n    case 'Decimal':\n      return new Decimal(value)\n    case 'Json':\n      return JSON.parse(value)\n    default:\n      assertNever(value, 'Unknown tagged value')\n  }\n}\n", "/*!\r\n *  decimal.js v10.5.0\r\n *  An arbitrary-precision Decimal type for JavaScript.\r\n *  https://github.com/MikeMcl/decimal.js\r\n *  Copyright (c) 2025 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *  MIT Licence\r\n */\r\n\r\n\r\n// -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n  // The maximum exponent magnitude.\r\n  // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\nvar EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n  // The limit on the value of `precision`, and on the value of the first argument to\r\n  // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n  MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n  // Base conversion alphabet.\r\n  NUMERALS = '0123456789abcdef',\r\n\r\n  // The natural logarithm of 10 (1025 digits).\r\n  LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n  // Pi (1025 digits).\r\n  PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n  // The initial configuration properties of the Decimal constructor.\r\n  DEFAULTS = {\r\n\r\n    // These values must be integers within the stated ranges (inclusive).\r\n    // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n    // The maximum number of significant digits of the result of a calculation or base conversion.\r\n    // E.g. `Decimal.config({ precision: 20 });`\r\n    precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n    // The rounding mode used when rounding to `precision`.\r\n    //\r\n    // ROUND_UP         0 Away from zero.\r\n    // ROUND_DOWN       1 Towards zero.\r\n    // ROUND_CEIL       2 Towards +Infinity.\r\n    // ROUND_FLOOR      3 Towards -Infinity.\r\n    // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    //\r\n    // E.g.\r\n    // `Decimal.rounding = 4;`\r\n    // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n    rounding: 4,                           // 0 to 8\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n    // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN  6 The IEEE 754 remainder function.\r\n    // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n    //\r\n    // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n    // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n    // be used, but they may not give useful results.\r\n    modulo: 1,                             // 0 to 9\r\n\r\n    // The exponent value at and beneath which `toString` returns exponential notation.\r\n    // JavaScript numbers: -7\r\n    toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n    // The exponent value at and above which `toString` returns exponential notation.\r\n    // JavaScript numbers: 21\r\n    toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // JavaScript numbers: -324  (5e-324)\r\n    minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n    maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    crypto: false                          // true/false\r\n  },\r\n\r\n\r\n// ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n  inexact, quadrant,\r\n  external = true,\r\n\r\n  decimalError = '[DecimalError] ',\r\n  invalidArgument = decimalError + 'Invalid argument: ',\r\n  precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n  cryptoUnavailable = decimalError + 'crypto unavailable',\r\n  tag = '[object Decimal]',\r\n\r\n  mathfloor = Math.floor,\r\n  mathpow = Math.pow,\r\n\r\n  isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n  isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n  isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n  isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n  BASE = 1e7,\r\n  LOG_BASE = 7,\r\n  MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n  LN10_PRECISION = LN10.length - 1,\r\n  PI_PRECISION = PI.length - 1,\r\n\r\n  // Decimal.prototype object\r\n  P = { toStringTag: tag };\r\n\r\n\r\n// Decimal prototype methods\r\n\r\n\r\n/*\r\n *  absoluteValue             abs\r\n *  ceil\r\n *  clampedTo                 clamp\r\n *  comparedTo                cmp\r\n *  cosine                    cos\r\n *  cubeRoot                  cbrt\r\n *  decimalPlaces             dp\r\n *  dividedBy                 div\r\n *  dividedToIntegerBy        divToInt\r\n *  equals                    eq\r\n *  floor\r\n *  greaterThan               gt\r\n *  greaterThanOrEqualTo      gte\r\n *  hyperbolicCosine          cosh\r\n *  hyperbolicSine            sinh\r\n *  hyperbolicTangent         tanh\r\n *  inverseCosine             acos\r\n *  inverseHyperbolicCosine   acosh\r\n *  inverseHyperbolicSine     asinh\r\n *  inverseHyperbolicTangent  atanh\r\n *  inverseSine               asin\r\n *  inverseTangent            atan\r\n *  isFinite\r\n *  isInteger                 isInt\r\n *  isNaN\r\n *  isNegative                isNeg\r\n *  isPositive                isPos\r\n *  isZero\r\n *  lessThan                  lt\r\n *  lessThanOrEqualTo         lte\r\n *  logarithm                 log\r\n *  [maximum]                 [max]\r\n *  [minimum]                 [min]\r\n *  minus                     sub\r\n *  modulo                    mod\r\n *  naturalExponential        exp\r\n *  naturalLogarithm          ln\r\n *  negated                   neg\r\n *  plus                      add\r\n *  precision                 sd\r\n *  round\r\n *  sine                      sin\r\n *  squareRoot                sqrt\r\n *  tangent                   tan\r\n *  times                     mul\r\n *  toBinary\r\n *  toDecimalPlaces           toDP\r\n *  toExponential\r\n *  toFixed\r\n *  toFraction\r\n *  toHexadecimal             toHex\r\n *  toNearest\r\n *  toNumber\r\n *  toOctal\r\n *  toPower                   pow\r\n *  toPrecision\r\n *  toSignificantDigits       toSD\r\n *  toString\r\n *  truncated                 trunc\r\n *  valueOf                   toJSON\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of this Decimal.\r\n *\r\n */\r\nP.absoluteValue = P.abs = function () {\r\n  var x = new this.constructor(this);\r\n  if (x.s < 0) x.s = 1;\r\n  return finalise(x);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n * direction of positive Infinity.\r\n *\r\n */\r\nP.ceil = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n * delineated by `min` and `max`.\r\n *\r\n * min {number|string|bigint|Decimal}\r\n * max {number|string|bigint|Decimal}\r\n *\r\n */\r\nP.clampedTo = P.clamp = function (min, max) {\r\n  var k,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n  min = new Ctor(min);\r\n  max = new Ctor(max);\r\n  if (!min.s || !max.s) return new Ctor(NaN);\r\n  if (min.gt(max)) throw Error(invalidArgument + max);\r\n  k = x.cmp(min);\r\n  return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n};\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if the value of this Decimal is greater than the value of `y`,\r\n *  -1    if the value of this Decimal is less than the value of `y`,\r\n *   0    if they have the same value,\r\n *   NaN  if the value of either Decimal is NaN.\r\n *\r\n */\r\nP.comparedTo = P.cmp = function (y) {\r\n  var i, j, xdL, ydL,\r\n    x = this,\r\n    xd = x.d,\r\n    yd = (y = new x.constructor(y)).d,\r\n    xs = x.s,\r\n    ys = y.s;\r\n\r\n  // Either NaN or \u00B1Infinity?\r\n  if (!xd || !yd) {\r\n    return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Either zero?\r\n  if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n  // Signs differ?\r\n  if (xs !== ys) return xs;\r\n\r\n  // Compare exponents.\r\n  if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n    if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Compare lengths.\r\n  return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * cos(0)         = 1\r\n * cos(-0)        = 1\r\n * cos(Infinity)  = NaN\r\n * cos(-Infinity) = NaN\r\n * cos(NaN)       = NaN\r\n *\r\n */\r\nP.cosine = P.cos = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.d) return new Ctor(NaN);\r\n\r\n  // cos(0) = cos(-0) = 1\r\n  if (!x.d[0]) return new Ctor(1);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n  Ctor.rounding = 1;\r\n\r\n  x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n *\r\n * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n *  cbrt(0)  =  0\r\n *  cbrt(-0) = -0\r\n *  cbrt(1)  =  1\r\n *  cbrt(-1) = -1\r\n *  cbrt(N)  =  N\r\n *  cbrt(-I) = -I\r\n *  cbrt(I)  =  I\r\n *\r\n * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n *\r\n */\r\nP.cubeRoot = P.cbrt = function () {\r\n  var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n   // Math.cbrt underflow/overflow?\r\n   // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n  if (!s || Math.abs(s) == 1 / 0) {\r\n    n = digitsToString(x.d);\r\n    e = x.e;\r\n\r\n    // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n    if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n    s = mathpow(n, 1 / 3);\r\n\r\n    // Rarely, e may be one less than the result exponent value.\r\n    e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n    r.s = x.s;\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  sd = (e = Ctor.precision) + 3;\r\n\r\n  // Halley's method.\r\n  // TODO? Compare Newton's method.\r\n  for (;;) {\r\n    t = r;\r\n    t3 = t.times(t).times(t);\r\n    t3plusx = t3.plus(x);\r\n    r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n    // TODO? Replace with for-loop and checkRoundingDigits.\r\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n      n = n.slice(sd - 3, sd + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n      // , i.e. approaching a rounding boundary, continue the iteration.\r\n      if (n == '9999' || !rep && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        if (!rep) {\r\n          finalise(t, e + 1, 0);\r\n\r\n          if (t.times(t).times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        }\r\n\r\n        sd += 4;\r\n        rep = 1;\r\n      } else {\r\n\r\n        // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n        // If not, then there are further digits and m will be truthy.\r\n        if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n          // Truncate to the first rounding digit.\r\n          finalise(r, e + 1, 1);\r\n          m = !r.times(r).times(r).eq(x);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, e, Ctor.rounding, m);\r\n};\r\n\r\n\r\n/*\r\n * Return the number of decimal places of the value of this Decimal.\r\n *\r\n */\r\nP.decimalPlaces = P.dp = function () {\r\n  var w,\r\n    d = this.d,\r\n    n = NaN;\r\n\r\n  if (d) {\r\n    w = d.length - 1;\r\n    n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    w = d[w];\r\n    if (w) for (; w % 10 == 0; w /= 10) n--;\r\n    if (n < 0) n = 0;\r\n  }\r\n\r\n  return n;\r\n};\r\n\r\n\r\n/*\r\n *  n / 0 = I\r\n *  n / N = N\r\n *  n / I = 0\r\n *  0 / n = 0\r\n *  0 / 0 = N\r\n *  0 / N = N\r\n *  0 / I = 0\r\n *  N / n = N\r\n *  N / 0 = N\r\n *  N / N = N\r\n *  N / I = N\r\n *  I / n = I\r\n *  I / 0 = I\r\n *  I / N = N\r\n *  I / I = N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.dividedBy = P.div = function (y) {\r\n  return divide(this, new this.constructor(y));\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.dividedToIntegerBy = P.divToInt = function (y) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n  return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n *\r\n */\r\nP.equals = P.eq = function (y) {\r\n  return this.cmp(y) === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n * direction of negative Infinity.\r\n *\r\n */\r\nP.floor = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 3);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n * false.\r\n *\r\n */\r\nP.greaterThan = P.gt = function (y) {\r\n  return this.cmp(y) > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n * otherwise return false.\r\n *\r\n */\r\nP.greaterThanOrEqualTo = P.gte = function (y) {\r\n  var k = this.cmp(y);\r\n  return k == 1 || k === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [1, Infinity]\r\n *\r\n * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n *\r\n * cosh(0)         = 1\r\n * cosh(-0)        = 1\r\n * cosh(Infinity)  = Infinity\r\n * cosh(-Infinity) = Infinity\r\n * cosh(NaN)       = NaN\r\n *\r\n *  x        time taken (ms)   result\r\n * 1000      9                 9.8503555700852349694e+433\r\n * 10000     25                4.4034091128314607936e+4342\r\n * 100000    171               1.4033316802130615897e+43429\r\n * 1000000   3817              1.5166076984010437725e+434294\r\n * 10000000  abandoned after 2 minute wait\r\n *\r\n * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n *\r\n */\r\nP.hyperbolicCosine = P.cosh = function () {\r\n  var k, n, pr, rm, len,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    one = new Ctor(1);\r\n\r\n  if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n  if (x.isZero()) return one;\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  len = x.d.length;\r\n\r\n  // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n  // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  // TODO? Estimation reused from cosine() and may not be optimal here.\r\n  if (len < 32) {\r\n    k = Math.ceil(len / 3);\r\n    n = (1 / tinyPow(4, k)).toString();\r\n  } else {\r\n    k = 16;\r\n    n = '2.3283064365386962890625e-10';\r\n  }\r\n\r\n  x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n  // Reverse argument reduction\r\n  var cosh2_x,\r\n    i = k,\r\n    d8 = new Ctor(8);\r\n  for (; i--;) {\r\n    cosh2_x = x.times(x);\r\n    x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n  }\r\n\r\n  return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n *\r\n * sinh(0)         = 0\r\n * sinh(-0)        = -0\r\n * sinh(Infinity)  = Infinity\r\n * sinh(-Infinity) = -Infinity\r\n * sinh(NaN)       = NaN\r\n *\r\n * x        time taken (ms)\r\n * 10       2 ms\r\n * 100      5 ms\r\n * 1000     14 ms\r\n * 10000    82 ms\r\n * 100000   886 ms            1.4033316802130615897e+43429\r\n * 200000   2613 ms\r\n * 300000   5407 ms\r\n * 400000   8824 ms\r\n * 500000   13026 ms          8.7080643612718084129e+217146\r\n * 1000000  48543 ms\r\n *\r\n * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n *\r\n */\r\nP.hyperbolicSine = P.sinh = function () {\r\n  var k, pr, rm, len,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  len = x.d.length;\r\n\r\n  if (len < 3) {\r\n    x = taylorSeries(Ctor, 2, x, x, true);\r\n  } else {\r\n\r\n    // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n    // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n    // 3 multiplications and 1 addition\r\n\r\n    // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n    // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n    // 4 multiplications and 2 additions\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n    // Reverse argument reduction\r\n    var sinh2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sinh2_x = x.times(x);\r\n      x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n    }\r\n  }\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * tanh(x) = sinh(x) / cosh(x)\r\n *\r\n * tanh(0)         = 0\r\n * tanh(-0)        = -0\r\n * tanh(Infinity)  = 1\r\n * tanh(-Infinity) = -1\r\n * tanh(NaN)       = NaN\r\n *\r\n */\r\nP.hyperbolicTangent = P.tanh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(x.s);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 7;\r\n  Ctor.rounding = 1;\r\n\r\n  return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n * this Decimal.\r\n *\r\n * Domain: [-1, 1]\r\n * Range: [0, pi]\r\n *\r\n * acos(x) = pi/2 - asin(x)\r\n *\r\n * acos(0)       = pi/2\r\n * acos(-0)      = pi/2\r\n * acos(1)       = 0\r\n * acos(-1)      = pi\r\n * acos(1/2)     = pi/3\r\n * acos(-1/2)    = 2*pi/3\r\n * acos(|x| > 1) = NaN\r\n * acos(NaN)     = NaN\r\n *\r\n */\r\nP.inverseCosine = P.acos = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    k = x.abs().cmp(1),\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding;\r\n\r\n  if (k !== -1) {\r\n    return k === 0\r\n      // |x| is 1\r\n      ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n      // |x| > 1 or x is NaN\r\n      : new Ctor(NaN);\r\n  }\r\n\r\n  if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n  // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n  Ctor.precision = pr + 6;\r\n  Ctor.rounding = 1;\r\n\r\n  // See https://github.com/MikeMcl/decimal.js/pull/217\r\n  x = new Ctor(1).minus(x).div(x.plus(1)).sqrt().atan();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n * value of this Decimal.\r\n *\r\n * Domain: [1, Infinity]\r\n * Range: [0, Infinity]\r\n *\r\n * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n *\r\n * acosh(x < 1)     = NaN\r\n * acosh(NaN)       = NaN\r\n * acosh(Infinity)  = Infinity\r\n * acosh(-Infinity) = NaN\r\n * acosh(0)         = NaN\r\n * acosh(-0)        = NaN\r\n * acosh(1)         = 0\r\n * acosh(-1)        = NaN\r\n *\r\n */\r\nP.inverseHyperbolicCosine = P.acosh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n  if (!x.isFinite()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  external = false;\r\n\r\n  x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n  external = true;\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.ln();\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n * of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n *\r\n * asinh(NaN)       = NaN\r\n * asinh(Infinity)  = Infinity\r\n * asinh(-Infinity) = -Infinity\r\n * asinh(0)         = 0\r\n * asinh(-0)        = -0\r\n *\r\n */\r\nP.inverseHyperbolicSine = P.asinh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n  Ctor.rounding = 1;\r\n  external = false;\r\n\r\n  x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n  external = true;\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.ln();\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n * value of this Decimal.\r\n *\r\n * Domain: [-1, 1]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n *\r\n * atanh(|x| > 1)   = NaN\r\n * atanh(NaN)       = NaN\r\n * atanh(Infinity)  = NaN\r\n * atanh(-Infinity) = NaN\r\n * atanh(0)         = 0\r\n * atanh(-0)        = -0\r\n * atanh(1)         = Infinity\r\n * atanh(-1)        = -Infinity\r\n *\r\n */\r\nP.inverseHyperbolicTangent = P.atanh = function () {\r\n  var pr, rm, wpr, xsd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  xsd = x.sd();\r\n\r\n  if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n  Ctor.precision = wpr = xsd - x.e;\r\n\r\n  x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n  Ctor.precision = pr + 4;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.ln();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(0.5);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi/2, pi/2]\r\n *\r\n * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n *\r\n * asin(0)       = 0\r\n * asin(-0)      = -0\r\n * asin(1/2)     = pi/6\r\n * asin(-1/2)    = -pi/6\r\n * asin(1)       = pi/2\r\n * asin(-1)      = -pi/2\r\n * asin(|x| > 1) = NaN\r\n * asin(NaN)     = NaN\r\n *\r\n * TODO? Compare performance of Taylor series.\r\n *\r\n */\r\nP.inverseSine = P.asin = function () {\r\n  var halfPi, k,\r\n    pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  k = x.abs().cmp(1);\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  if (k !== -1) {\r\n\r\n    // |x| is 1\r\n    if (k === 0) {\r\n      halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n      halfPi.s = x.s;\r\n      return halfPi;\r\n    }\r\n\r\n    // |x| > 1 or x is NaN\r\n    return new Ctor(NaN);\r\n  }\r\n\r\n  // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n  Ctor.precision = pr + 6;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n * of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi/2, pi/2]\r\n *\r\n * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n *\r\n * atan(0)         = 0\r\n * atan(-0)        = -0\r\n * atan(1)         = pi/4\r\n * atan(-1)        = -pi/4\r\n * atan(Infinity)  = pi/2\r\n * atan(-Infinity) = -pi/2\r\n * atan(NaN)       = NaN\r\n *\r\n */\r\nP.inverseTangent = P.atan = function () {\r\n  var i, j, k, n, px, t, r, wpr, x2,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding;\r\n\r\n  if (!x.isFinite()) {\r\n    if (!x.s) return new Ctor(NaN);\r\n    if (pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n  } else if (x.isZero()) {\r\n    return new Ctor(x);\r\n  } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n    r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n    r.s = x.s;\r\n    return r;\r\n  }\r\n\r\n  Ctor.precision = wpr = pr + 10;\r\n  Ctor.rounding = 1;\r\n\r\n  // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n  // Argument reduction\r\n  // Ensure |x| < 0.42\r\n  // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n  k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n  for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n  external = false;\r\n\r\n  j = Math.ceil(wpr / LOG_BASE);\r\n  n = 1;\r\n  x2 = x.times(x);\r\n  r = new Ctor(x);\r\n  px = x;\r\n\r\n  // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n  for (; i !== -1;) {\r\n    px = px.times(x2);\r\n    t = r.minus(px.div(n += 2));\r\n\r\n    px = px.times(x2);\r\n    r = t.plus(px.div(n += 2));\r\n\r\n    if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n  }\r\n\r\n  if (k) r = r.times(2 << (k - 1));\r\n\r\n  external = true;\r\n\r\n  return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n *\r\n */\r\nP.isFinite = function () {\r\n  return !!this.d;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is an integer, otherwise return false.\r\n *\r\n */\r\nP.isInteger = P.isInt = function () {\r\n  return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is NaN, otherwise return false.\r\n *\r\n */\r\nP.isNaN = function () {\r\n  return !this.s;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is negative, otherwise return false.\r\n *\r\n */\r\nP.isNegative = P.isNeg = function () {\r\n  return this.s < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is positive, otherwise return false.\r\n *\r\n */\r\nP.isPositive = P.isPos = function () {\r\n  return this.s > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n *\r\n */\r\nP.isZero = function () {\r\n  return !!this.d && this.d[0] === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThan = P.lt = function (y) {\r\n  return this.cmp(y) < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThanOrEqualTo = P.lte = function (y) {\r\n  return this.cmp(y) < 1;\r\n};\r\n\r\n\r\n/*\r\n * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * If no base is specified, return log[10](arg).\r\n *\r\n * log[base](arg) = ln(arg) / ln(base)\r\n *\r\n * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n * otherwise:\r\n *\r\n * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n *\r\n * log[-b](a)       = NaN\r\n * log[0](a)        = NaN\r\n * log[1](a)        = NaN\r\n * log[NaN](a)      = NaN\r\n * log[Infinity](a) = NaN\r\n * log[b](0)        = -Infinity\r\n * log[b](-0)       = -Infinity\r\n * log[b](-a)       = NaN\r\n * log[b](1)        = 0\r\n * log[b](Infinity) = Infinity\r\n * log[b](NaN)      = NaN\r\n *\r\n * [base] {number|string|bigint|Decimal} The base of the logarithm.\r\n *\r\n */\r\nP.logarithm = P.log = function (base) {\r\n  var isBase10, d, denominator, k, inf, num, sd, r,\r\n    arg = this,\r\n    Ctor = arg.constructor,\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding,\r\n    guard = 5;\r\n\r\n  // Default base is 10.\r\n  if (base == null) {\r\n    base = new Ctor(10);\r\n    isBase10 = true;\r\n  } else {\r\n    base = new Ctor(base);\r\n    d = base.d;\r\n\r\n    // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n    if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n    isBase10 = base.eq(10);\r\n  }\r\n\r\n  d = arg.d;\r\n\r\n  // Is arg negative, non-finite, 0 or 1?\r\n  if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n    return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n  }\r\n\r\n  // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n  // integer power of 10.\r\n  if (isBase10) {\r\n    if (d.length > 1) {\r\n      inf = true;\r\n    } else {\r\n      for (k = d[0]; k % 10 === 0;) k /= 10;\r\n      inf = k !== 1;\r\n    }\r\n  }\r\n\r\n  external = false;\r\n  sd = pr + guard;\r\n  num = naturalLogarithm(arg, sd);\r\n  denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n  // The result will have 5 rounding digits.\r\n  r = divide(num, denominator, sd, 1);\r\n\r\n  // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n  // calculate 10 further digits.\r\n  //\r\n  // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n  // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n  // further digits, the last 14 are nines, round up and assume the result is exact.\r\n  // Also assume the result is exact if the last 14 are zero.\r\n  //\r\n  // Example of a result that will be incorrectly rounded:\r\n  // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n  // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n  // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n  // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n  // place is still 2.6.\r\n  if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n    do {\r\n      sd += 10;\r\n      num = naturalLogarithm(arg, sd);\r\n      denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n      r = divide(num, denominator, sd, 1);\r\n\r\n      if (!inf) {\r\n\r\n        // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n        if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n\r\n        break;\r\n      }\r\n    } while (checkRoundingDigits(r.d, k += 10, rm));\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, pr, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\nP.max = function () {\r\n  Array.prototype.push.call(arguments, this);\r\n  return maxOrMin(this.constructor, arguments, -1);\r\n};\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\nP.min = function () {\r\n  Array.prototype.push.call(arguments, this);\r\n  return maxOrMin(this.constructor, arguments, 1);\r\n};\r\n */\r\n\r\n\r\n/*\r\n *  n - 0 = n\r\n *  n - N = N\r\n *  n - I = -I\r\n *  0 - n = -n\r\n *  0 - 0 = 0\r\n *  0 - N = N\r\n *  0 - I = -I\r\n *  N - n = N\r\n *  N - 0 = N\r\n *  N - N = N\r\n *  N - I = N\r\n *  I - n = I\r\n *  I - 0 = I\r\n *  I - N = N\r\n *  I - I = N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.minus = P.sub = function (y) {\r\n  var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // If either is not finite...\r\n  if (!x.d || !y.d) {\r\n\r\n    // Return NaN if either is NaN.\r\n    if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n    // Return y negated if x is finite and y is \u00B1Infinity.\r\n    else if (x.d) y.s = -y.s;\r\n\r\n    // Return x if y is finite and x is \u00B1Infinity.\r\n    // Return x if both are \u00B1Infinity with different signs.\r\n    // Return NaN if both are \u00B1Infinity with the same sign.\r\n    else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n    return y;\r\n  }\r\n\r\n  // If signs differ...\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.plus(y);\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  // If either is zero...\r\n  if (!xd[0] || !yd[0]) {\r\n\r\n    // Return y negated if x is zero and y is non-zero.\r\n    if (yd[0]) y.s = -y.s;\r\n\r\n    // Return x if y is zero and x is non-zero.\r\n    else if (xd[0]) y = new Ctor(x);\r\n\r\n    // Return zero if both are zero.\r\n    // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n    else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  }\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  // Calculate base 1e7 exponents.\r\n  e = mathfloor(y.e / LOG_BASE);\r\n  xe = mathfloor(x.e / LOG_BASE);\r\n\r\n  xd = xd.slice();\r\n  k = xe - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (k) {\r\n    xLTy = k < 0;\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      k = -k;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = xe;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Numbers with massively different exponents would result in a very high number of\r\n    // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n    // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n    i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n    if (k > i) {\r\n      k = i;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    d.reverse();\r\n    for (i = k; i--;) d.push(0);\r\n    d.reverse();\r\n\r\n  // Base 1e7 exponents equal.\r\n  } else {\r\n\r\n    // Check digits to determine which is the bigger number.\r\n\r\n    i = xd.length;\r\n    len = yd.length;\r\n    xLTy = i < len;\r\n    if (xLTy) len = i;\r\n\r\n    for (i = 0; i < len; i++) {\r\n      if (xd[i] != yd[i]) {\r\n        xLTy = xd[i] < yd[i];\r\n        break;\r\n      }\r\n    }\r\n\r\n    k = 0;\r\n  }\r\n\r\n  if (xLTy) {\r\n    d = xd;\r\n    xd = yd;\r\n    yd = d;\r\n    y.s = -y.s;\r\n  }\r\n\r\n  len = xd.length;\r\n\r\n  // Append zeros to `xd` if shorter.\r\n  // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n  for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n  // Subtract yd from xd.\r\n  for (i = yd.length; i > k;) {\r\n\r\n    if (xd[--i] < yd[i]) {\r\n      for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n      --xd[j];\r\n      xd[i] += BASE;\r\n    }\r\n\r\n    xd[i] -= yd[i];\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; xd[--len] === 0;) xd.pop();\r\n\r\n  // Remove leading zeros and adjust exponent accordingly.\r\n  for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n  // Zero?\r\n  if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n  y.d = xd;\r\n  y.e = getBase10Exponent(xd, e);\r\n\r\n  return external ? finalise(y, pr, rm) : y;\r\n};\r\n\r\n\r\n/*\r\n *   n % 0 =  N\r\n *   n % N =  N\r\n *   n % I =  n\r\n *   0 % n =  0\r\n *  -0 % n = -0\r\n *   0 % 0 =  N\r\n *   0 % N =  N\r\n *   0 % I =  0\r\n *   N % n =  N\r\n *   N % 0 =  N\r\n *   N % N =  N\r\n *   N % I =  N\r\n *   I % n =  N\r\n *   I % 0 =  N\r\n *   I % N =  N\r\n *   I % I =  N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * The result depends on the modulo mode.\r\n *\r\n */\r\nP.modulo = P.mod = function (y) {\r\n  var q,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // Return NaN if x is \u00B1Infinity or NaN, or y is NaN or \u00B10.\r\n  if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n  // Return x if y is \u00B1Infinity or x is \u00B10.\r\n  if (!y.d || x.d && !x.d[0]) {\r\n    return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n  }\r\n\r\n  // Prevent rounding of intermediate calculations.\r\n  external = false;\r\n\r\n  if (Ctor.modulo == 9) {\r\n\r\n    // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n    // result = x - q * y    where  0 <= result < abs(y)\r\n    q = divide(x, y.abs(), 0, 3, 1);\r\n    q.s *= y.s;\r\n  } else {\r\n    q = divide(x, y, 0, Ctor.modulo, 1);\r\n  }\r\n\r\n  q = q.times(y);\r\n\r\n  external = true;\r\n\r\n  return x.minus(q);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.naturalExponential = P.exp = function () {\r\n  return naturalExponential(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n * rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.naturalLogarithm = P.ln = function () {\r\n  return naturalLogarithm(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n * -1.\r\n *\r\n */\r\nP.negated = P.neg = function () {\r\n  var x = new this.constructor(this);\r\n  x.s = -x.s;\r\n  return finalise(x);\r\n};\r\n\r\n\r\n/*\r\n *  n + 0 = n\r\n *  n + N = N\r\n *  n + I = I\r\n *  0 + n = n\r\n *  0 + 0 = 0\r\n *  0 + N = N\r\n *  0 + I = I\r\n *  N + n = N\r\n *  N + 0 = N\r\n *  N + N = N\r\n *  N + I = N\r\n *  I + n = I\r\n *  I + 0 = I\r\n *  I + N = N\r\n *  I + I = I\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.plus = P.add = function (y) {\r\n  var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // If either is not finite...\r\n  if (!x.d || !y.d) {\r\n\r\n    // Return NaN if either is NaN.\r\n    if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n    // Return x if y is finite and x is \u00B1Infinity.\r\n    // Return x if both are \u00B1Infinity with the same sign.\r\n    // Return NaN if both are \u00B1Infinity with different signs.\r\n    // Return y if x is finite and y is \u00B1Infinity.\r\n    else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n    return y;\r\n  }\r\n\r\n   // If signs differ...\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.minus(y);\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  // If either is zero...\r\n  if (!xd[0] || !yd[0]) {\r\n\r\n    // Return x if y is zero.\r\n    // Return y if y is non-zero.\r\n    if (!yd[0]) y = new Ctor(x);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  }\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  // Calculate base 1e7 exponents.\r\n  k = mathfloor(x.e / LOG_BASE);\r\n  e = mathfloor(y.e / LOG_BASE);\r\n\r\n  xd = xd.slice();\r\n  i = k - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (i) {\r\n\r\n    if (i < 0) {\r\n      d = xd;\r\n      i = -i;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = k;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n    k = Math.ceil(pr / LOG_BASE);\r\n    len = k > len ? k + 1 : len + 1;\r\n\r\n    if (i > len) {\r\n      i = len;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n    d.reverse();\r\n    for (; i--;) d.push(0);\r\n    d.reverse();\r\n  }\r\n\r\n  len = xd.length;\r\n  i = yd.length;\r\n\r\n  // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n  if (len - i < 0) {\r\n    i = len;\r\n    d = yd;\r\n    yd = xd;\r\n    xd = d;\r\n  }\r\n\r\n  // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n  for (carry = 0; i;) {\r\n    carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n    xd[i] %= BASE;\r\n  }\r\n\r\n  if (carry) {\r\n    xd.unshift(carry);\r\n    ++e;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n  for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n  y.d = xd;\r\n  y.e = getBase10Exponent(xd, e);\r\n\r\n  return external ? finalise(y, pr, rm) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return the number of significant digits of the value of this Decimal.\r\n *\r\n * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n *\r\n */\r\nP.precision = P.sd = function (z) {\r\n  var k,\r\n    x = this;\r\n\r\n  if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n  if (x.d) {\r\n    k = getPrecision(x.d);\r\n    if (z && x.e + 1 > k) k = x.e + 1;\r\n  } else {\r\n    k = NaN;\r\n  }\r\n\r\n  return k;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n * rounding mode `rounding`.\r\n *\r\n */\r\nP.round = function () {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * sin(x) = x - x^3/3! + x^5/5! - ...\r\n *\r\n * sin(0)         = 0\r\n * sin(-0)        = -0\r\n * sin(Infinity)  = NaN\r\n * sin(-Infinity) = NaN\r\n * sin(NaN)       = NaN\r\n *\r\n */\r\nP.sine = P.sin = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n  Ctor.rounding = 1;\r\n\r\n  x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n *  sqrt(-n) =  N\r\n *  sqrt(N)  =  N\r\n *  sqrt(-I) =  N\r\n *  sqrt(I)  =  I\r\n *  sqrt(0)  =  0\r\n *  sqrt(-0) = -0\r\n *\r\n */\r\nP.squareRoot = P.sqrt = function () {\r\n  var m, n, sd, r, rep, t,\r\n    x = this,\r\n    d = x.d,\r\n    e = x.e,\r\n    s = x.s,\r\n    Ctor = x.constructor;\r\n\r\n  // Negative/NaN/Infinity/zero?\r\n  if (s !== 1 || !d || !d[0]) {\r\n    return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n  }\r\n\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = Math.sqrt(+x);\r\n\r\n  // Math.sqrt underflow/overflow?\r\n  // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n  if (s == 0 || s == 1 / 0) {\r\n    n = digitsToString(d);\r\n\r\n    if ((n.length + e) % 2 == 0) n += '0';\r\n    s = Math.sqrt(n);\r\n    e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  sd = (e = Ctor.precision) + 3;\r\n\r\n  // Newton-Raphson iteration.\r\n  for (;;) {\r\n    t = r;\r\n    r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n    // TODO? Replace with for-loop and checkRoundingDigits.\r\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n      n = n.slice(sd - 3, sd + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n      // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n      if (n == '9999' || !rep && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        if (!rep) {\r\n          finalise(t, e + 1, 0);\r\n\r\n          if (t.times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        }\r\n\r\n        sd += 4;\r\n        rep = 1;\r\n      } else {\r\n\r\n        // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n        // If not, then there are further digits and m will be truthy.\r\n        if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n          // Truncate to the first rounding digit.\r\n          finalise(r, e + 1, 1);\r\n          m = !r.times(r).eq(x);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, e, Ctor.rounding, m);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * tan(0)         = 0\r\n * tan(-0)        = -0\r\n * tan(Infinity)  = NaN\r\n * tan(-Infinity) = NaN\r\n * tan(NaN)       = NaN\r\n *\r\n */\r\nP.tangent = P.tan = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 10;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.sin();\r\n  x.s = 1;\r\n  x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n *  n * 0 = 0\r\n *  n * N = N\r\n *  n * I = I\r\n *  0 * n = 0\r\n *  0 * 0 = 0\r\n *  0 * N = N\r\n *  0 * I = N\r\n *  N * n = N\r\n *  N * 0 = N\r\n *  N * N = N\r\n *  N * I = N\r\n *  I * n = I\r\n *  I * 0 = N\r\n *  I * N = N\r\n *  I * I = I\r\n *\r\n * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.times = P.mul = function (y) {\r\n  var carry, e, i, k, r, rL, t, xdL, ydL,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    xd = x.d,\r\n    yd = (y = new Ctor(y)).d;\r\n\r\n  y.s *= x.s;\r\n\r\n   // If either is NaN, \u00B1Infinity or \u00B10...\r\n  if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n    return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n      // Return NaN if either is NaN.\r\n      // Return NaN if x is \u00B10 and y is \u00B1Infinity, or y is \u00B10 and x is \u00B1Infinity.\r\n      ? NaN\r\n\r\n      // Return \u00B1Infinity if either is \u00B1Infinity.\r\n      // Return \u00B10 if either is \u00B10.\r\n      : !xd || !yd ? y.s / 0 : y.s * 0);\r\n  }\r\n\r\n  e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Ensure xd points to the longer array.\r\n  if (xdL < ydL) {\r\n    r = xd;\r\n    xd = yd;\r\n    yd = r;\r\n    rL = xdL;\r\n    xdL = ydL;\r\n    ydL = rL;\r\n  }\r\n\r\n  // Initialise the result array with zeros.\r\n  r = [];\r\n  rL = xdL + ydL;\r\n  for (i = rL; i--;) r.push(0);\r\n\r\n  // Multiply!\r\n  for (i = ydL; --i >= 0;) {\r\n    carry = 0;\r\n    for (k = xdL + i; k > i;) {\r\n      t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n      r[k--] = t % BASE | 0;\r\n      carry = t / BASE | 0;\r\n    }\r\n\r\n    r[k] = (r[k] + carry) % BASE | 0;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; !r[--rL];) r.pop();\r\n\r\n  if (carry) ++e;\r\n  else r.shift();\r\n\r\n  y.d = r;\r\n  y.e = getBase10Exponent(r, e);\r\n\r\n  return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toBinary = function (sd, rm) {\r\n  return toStringBinary(this, 2, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n *\r\n * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n  if (dp === void 0) return x;\r\n\r\n  checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n  if (rm === void 0) rm = Ctor.rounding;\r\n  else checkInt32(rm, 0, 8);\r\n\r\n  return finalise(x, dp + x.e + 1, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in exponential notation rounded to\r\n * `dp` fixed decimal places using rounding mode `rounding`.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toExponential = function (dp, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = finiteToString(x, true);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = finalise(new Ctor(x), dp + 1, rm);\r\n    str = finiteToString(x, true, dp + 1);\r\n  }\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n * omitted.\r\n *\r\n * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n * (-0).toFixed(3) is '0.000'.\r\n * (-0.5).toFixed(0) is '-0'.\r\n *\r\n */\r\nP.toFixed = function (dp, rm) {\r\n  var str, y,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = finiteToString(x);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n    str = finiteToString(y, false, dp + y.e + 1);\r\n  }\r\n\r\n  // To determine whether to add the minus sign look at the value before it was rounded,\r\n  // i.e. look at `x` rather than `y`.\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n * numerator and an integer denominator.\r\n *\r\n * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n * value necessary to represent the number exactly.\r\n *\r\n * [maxD] {number|string|bigint|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n *\r\n */\r\nP.toFraction = function (maxD) {\r\n  var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n    x = this,\r\n    xd = x.d,\r\n    Ctor = x.constructor;\r\n\r\n  if (!xd) return new Ctor(x);\r\n\r\n  n1 = d0 = new Ctor(1);\r\n  d1 = n0 = new Ctor(0);\r\n\r\n  d = new Ctor(d1);\r\n  e = d.e = getPrecision(xd) - x.e - 1;\r\n  k = e % LOG_BASE;\r\n  d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n  if (maxD == null) {\r\n\r\n    // d is 10**e, the minimum max-denominator needed.\r\n    maxD = e > 0 ? d : n1;\r\n  } else {\r\n    n = new Ctor(maxD);\r\n    if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n    maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n  }\r\n\r\n  external = false;\r\n  n = new Ctor(digitsToString(xd));\r\n  pr = Ctor.precision;\r\n  Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n  for (;;)  {\r\n    q = divide(n, d, 0, 1, 1);\r\n    d2 = d0.plus(q.times(d1));\r\n    if (d2.cmp(maxD) == 1) break;\r\n    d0 = d1;\r\n    d1 = d2;\r\n    d2 = n1;\r\n    n1 = n0.plus(q.times(d2));\r\n    n0 = d2;\r\n    d2 = d;\r\n    d = n.minus(q.times(d2));\r\n    n = d2;\r\n  }\r\n\r\n  d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n  n0 = n0.plus(d2.times(n1));\r\n  d0 = d0.plus(d2.times(d1));\r\n  n0.s = n1.s = x.s;\r\n\r\n  // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n  r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n      ? [n1, d1] : [n0, d0];\r\n\r\n  Ctor.precision = pr;\r\n  external = true;\r\n\r\n  return r;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toHexadecimal = P.toHex = function (sd, rm) {\r\n  return toStringBinary(this, 16, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n *\r\n * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n * or `y` is NaN, in which case the return value will be also be NaN.\r\n *\r\n * The return value is not affected by the value of `precision`.\r\n *\r\n * y {number|string|bigint|Decimal} The magnitude to round to a multiple of.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * 'toNearest() rounding mode not an integer: {rm}'\r\n * 'toNearest() rounding mode out of range: {rm}'\r\n *\r\n */\r\nP.toNearest = function (y, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n\r\n  if (y == null) {\r\n\r\n    // If x is not finite, return x.\r\n    if (!x.d) return x;\r\n\r\n    y = new Ctor(1);\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    y = new Ctor(y);\r\n    if (rm === void 0) {\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    // If x is not finite, return x if y is not NaN, else NaN.\r\n    if (!x.d) return y.s ? x : y;\r\n\r\n    // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n    if (!y.d) {\r\n      if (y.s) y.s = x.s;\r\n      return y;\r\n    }\r\n  }\r\n\r\n  // If y is not zero, calculate the nearest multiple of y to x.\r\n  if (y.d[0]) {\r\n    external = false;\r\n    x = divide(x, y, 0, rm, 1).times(y);\r\n    external = true;\r\n    finalise(x);\r\n\r\n  // If y is zero, return zero with the sign of x.\r\n  } else {\r\n    y.s = x.s;\r\n    x = y;\r\n  }\r\n\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return the value of this Decimal converted to a number primitive.\r\n * Zero keeps its sign.\r\n *\r\n */\r\nP.toNumber = function () {\r\n  return +this;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toOctal = function (sd, rm) {\r\n  return toStringBinary(this, 8, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n * to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * ECMAScript compliant.\r\n *\r\n *   pow(x, NaN)                           = NaN\r\n *   pow(x, \u00B10)                            = 1\r\n\r\n *   pow(NaN, non-zero)                    = NaN\r\n *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n *   pow(abs(x) > 1, -Infinity)            = +0\r\n *   pow(abs(x) == 1, \u00B1Infinity)           = NaN\r\n *   pow(abs(x) < 1, +Infinity)            = +0\r\n *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n *   pow(+Infinity, y > 0)                 = +Infinity\r\n *   pow(+Infinity, y < 0)                 = +0\r\n *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n *   pow(-Infinity, even integer > 0)      = +Infinity\r\n *   pow(-Infinity, odd integer < 0)       = -0\r\n *   pow(-Infinity, even integer < 0)      = +0\r\n *   pow(+0, y > 0)                        = +0\r\n *   pow(+0, y < 0)                        = +Infinity\r\n *   pow(-0, odd integer > 0)              = -0\r\n *   pow(-0, even integer > 0)             = +0\r\n *   pow(-0, odd integer < 0)              = -Infinity\r\n *   pow(-0, even integer < 0)             = +Infinity\r\n *   pow(finite x < 0, finite non-integer) = NaN\r\n *\r\n * For non-integer or very large exponents pow(x, y) is calculated using\r\n *\r\n *   x^y = exp(y*ln(x))\r\n *\r\n * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n * probability of an incorrectly rounded result\r\n * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n * i.e. 1 in 250,000,000,000,000\r\n *\r\n * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n *\r\n * y {number|string|bigint|Decimal} The power to which to raise this Decimal.\r\n *\r\n */\r\nP.toPower = P.pow = function (y) {\r\n  var e, k, pr, r, rm, s,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    yn = +(y = new Ctor(y));\r\n\r\n  // Either \u00B1Infinity, NaN or \u00B10?\r\n  if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n  x = new Ctor(x);\r\n\r\n  if (x.eq(1)) return x;\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n  // y exponent\r\n  e = mathfloor(y.e / LOG_BASE);\r\n\r\n  // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n  if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n    r = intPow(Ctor, x, k, pr);\r\n    return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n  }\r\n\r\n  s = x.s;\r\n\r\n  // if x is negative\r\n  if (s < 0) {\r\n\r\n    // if y is not an integer\r\n    if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n    // Result is positive if x is negative and the last digit of integer y is even.\r\n    if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n    // if x.eq(-1)\r\n    if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n      x.s = s;\r\n      return x;\r\n    }\r\n  }\r\n\r\n  // Estimate result exponent.\r\n  // x^y = 10^e,  where e = y * log10(x)\r\n  // log10(x) = log10(x_significand) + x_exponent\r\n  // log10(x_significand) = ln(x_significand) / ln(10)\r\n  k = mathpow(+x, yn);\r\n  e = k == 0 || !isFinite(k)\r\n    ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n    : new Ctor(k + '').e;\r\n\r\n  // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n  // Overflow/underflow?\r\n  if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n  external = false;\r\n  Ctor.rounding = x.s = 1;\r\n\r\n  // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n  // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n  // new Decimal(2.32456).pow('2087987436534566.46411')\r\n  // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n  k = Math.min(12, (e + '').length);\r\n\r\n  // r = x^y = exp(y*ln(x))\r\n  r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n  // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n  if (r.d) {\r\n\r\n    // Truncate to the required precision plus five rounding digits.\r\n    r = finalise(r, pr + 5, 1);\r\n\r\n    // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n    // the result.\r\n    if (checkRoundingDigits(r.d, pr, rm)) {\r\n      e = pr + 10;\r\n\r\n      // Truncate to the increased precision plus five rounding digits.\r\n      r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n      // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n      if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n        r = finalise(r, pr + 1, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  r.s = s;\r\n  external = true;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(r, pr, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n * the integer part of the value in normal notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toPrecision = function (sd, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = finalise(new Ctor(x), sd, rm);\r\n    str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n  }\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n * omitted.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * 'toSD() digits out of range: {sd}'\r\n * 'toSD() digits not an integer: {sd}'\r\n * 'toSD() rounding mode not an integer: {rm}'\r\n * 'toSD() rounding mode out of range: {rm}'\r\n *\r\n */\r\nP.toSignificantDigits = P.toSD = function (sd, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  }\r\n\r\n  return finalise(new Ctor(x), sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n *\r\n * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n *\r\n */\r\nP.toString = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n *\r\n */\r\nP.truncated = P.trunc = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 1);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n * Unlike `toString`, negative zero will include the minus sign.\r\n *\r\n */\r\nP.valueOf = P.toJSON = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n  return x.isNeg() ? '-' + str : str;\r\n};\r\n\r\n\r\n// Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n/*\r\n *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n *                           finiteToString, naturalExponential, naturalLogarithm\r\n *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n *  convertBase              toStringBinary, parseOther\r\n *  cos                      P.cos\r\n *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n *                           taylorSeries, atan2, parseOther\r\n *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n *                           naturalLogarithm, ceil, floor, round, trunc\r\n *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n *                           toStringBinary\r\n *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n *  getLn10                  P.logarithm, naturalLogarithm\r\n *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n *  getPrecision             P.precision, P.toFraction\r\n *  getZeroString            digitsToString, finiteToString\r\n *  intPow                   P.toPower, parseOther\r\n *  isOdd                    toLessThanHalfPi\r\n *  maxOrMin                 max, min\r\n *  naturalExponential       P.naturalExponential, P.toPower\r\n *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n *                           P.toPower, naturalExponential\r\n *  nonFiniteToString        finiteToString, toStringBinary\r\n *  parseDecimal             Decimal\r\n *  parseOther               Decimal\r\n *  sin                      P.sin\r\n *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n *  toLessThanHalfPi         P.cos, P.sin\r\n *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n *  truncate                 intPow\r\n *\r\n *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n *                           naturalLogarithm, config, parseOther, random, Decimal\r\n */\r\n\r\n\r\nfunction digitsToString(d) {\r\n  var i, k, ws,\r\n    indexOfLastWord = d.length - 1,\r\n    str = '',\r\n    w = d[0];\r\n\r\n  if (indexOfLastWord > 0) {\r\n    str += w;\r\n    for (i = 1; i < indexOfLastWord; i++) {\r\n      ws = d[i] + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n      str += ws;\r\n    }\r\n\r\n    w = d[i];\r\n    ws = w + '';\r\n    k = LOG_BASE - ws.length;\r\n    if (k) str += getZeroString(k);\r\n  } else if (w === 0) {\r\n    return '0';\r\n  }\r\n\r\n  // Remove trailing zeros of last w.\r\n  for (; w % 10 === 0;) w /= 10;\r\n\r\n  return str + w;\r\n}\r\n\r\n\r\nfunction checkInt32(i, min, max) {\r\n  if (i !== ~~i || i < min || i > max) {\r\n    throw Error(invalidArgument + i);\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n * `repeating == null` if caller is `log` or `pow`,\r\n * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n */\r\nfunction checkRoundingDigits(d, i, rm, repeating) {\r\n  var di, k, r, rd;\r\n\r\n  // Get the length of the first word of the array d.\r\n  for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n  // Is the rounding digit in the first word of d?\r\n  if (--i < 0) {\r\n    i += LOG_BASE;\r\n    di = 0;\r\n  } else {\r\n    di = Math.ceil((i + 1) / LOG_BASE);\r\n    i %= LOG_BASE;\r\n  }\r\n\r\n  // i is the index (0 - 6) of the rounding digit.\r\n  // E.g. if within the word 3487563 the first rounding digit is 5,\r\n  // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n  k = mathpow(10, LOG_BASE - i);\r\n  rd = d[di] % k | 0;\r\n\r\n  if (repeating == null) {\r\n    if (i < 3) {\r\n      if (i == 0) rd = rd / 100 | 0;\r\n      else if (i == 1) rd = rd / 10 | 0;\r\n      r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n    } else {\r\n      r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n        (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n          (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n    }\r\n  } else {\r\n    if (i < 4) {\r\n      if (i == 0) rd = rd / 1000 | 0;\r\n      else if (i == 1) rd = rd / 100 | 0;\r\n      else if (i == 2) rd = rd / 10 | 0;\r\n      r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n    } else {\r\n      r = ((repeating || rm < 4) && rd + 1 == k ||\r\n      (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n        (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n    }\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n\r\n// Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n// Eg. convertBase('255', 10, 16) returns [15, 15].\r\n// Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\nfunction convertBase(str, baseIn, baseOut) {\r\n  var j,\r\n    arr = [0],\r\n    arrL,\r\n    i = 0,\r\n    strL = str.length;\r\n\r\n  for (; i < strL;) {\r\n    for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n    arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n    for (j = 0; j < arr.length; j++) {\r\n      if (arr[j] > baseOut - 1) {\r\n        if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n        arr[j + 1] += arr[j] / baseOut | 0;\r\n        arr[j] %= baseOut;\r\n      }\r\n    }\r\n  }\r\n\r\n  return arr.reverse();\r\n}\r\n\r\n\r\n/*\r\n * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n * |x| < pi/2\r\n *\r\n */\r\nfunction cosine(Ctor, x) {\r\n  var k, len, y;\r\n\r\n  if (x.isZero()) return x;\r\n\r\n  // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n  // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  len = x.d.length;\r\n  if (len < 32) {\r\n    k = Math.ceil(len / 3);\r\n    y = (1 / tinyPow(4, k)).toString();\r\n  } else {\r\n    k = 16;\r\n    y = '2.3283064365386962890625e-10';\r\n  }\r\n\r\n  Ctor.precision += k;\r\n\r\n  x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n  // Reverse argument reduction\r\n  for (var i = k; i--;) {\r\n    var cos2x = x.times(x);\r\n    x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n  }\r\n\r\n  Ctor.precision -= k;\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Perform division in the specified base.\r\n */\r\nvar divide = (function () {\r\n\r\n  // Assumes non-zero x and k, and hence non-zero result.\r\n  function multiplyInteger(x, k, base) {\r\n    var temp,\r\n      carry = 0,\r\n      i = x.length;\r\n\r\n    for (x = x.slice(); i--;) {\r\n      temp = x[i] * k + carry;\r\n      x[i] = temp % base | 0;\r\n      carry = temp / base | 0;\r\n    }\r\n\r\n    if (carry) x.unshift(carry);\r\n\r\n    return x;\r\n  }\r\n\r\n  function compare(a, b, aL, bL) {\r\n    var i, r;\r\n\r\n    if (aL != bL) {\r\n      r = aL > bL ? 1 : -1;\r\n    } else {\r\n      for (i = r = 0; i < aL; i++) {\r\n        if (a[i] != b[i]) {\r\n          r = a[i] > b[i] ? 1 : -1;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  function subtract(a, b, aL, base) {\r\n    var i = 0;\r\n\r\n    // Subtract b from a.\r\n    for (; aL--;) {\r\n      a[aL] -= i;\r\n      i = a[aL] < b[aL] ? 1 : 0;\r\n      a[aL] = i * base + a[aL] - b[aL];\r\n    }\r\n\r\n    // Remove leading zeros.\r\n    for (; !a[0] && a.length > 1;) a.shift();\r\n  }\r\n\r\n  return function (x, y, pr, rm, dp, base) {\r\n    var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n      yL, yz,\r\n      Ctor = x.constructor,\r\n      sign = x.s == y.s ? 1 : -1,\r\n      xd = x.d,\r\n      yd = y.d;\r\n\r\n    // Either NaN, Infinity or 0?\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n        !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n        // Return \u00B10 if x is 0 or y is \u00B1Infinity, or return \u00B1Infinity as y is 0.\r\n        xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n    }\r\n\r\n    if (base) {\r\n      logBase = 1;\r\n      e = x.e - y.e;\r\n    } else {\r\n      base = BASE;\r\n      logBase = LOG_BASE;\r\n      e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n    }\r\n\r\n    yL = yd.length;\r\n    xL = xd.length;\r\n    q = new Ctor(sign);\r\n    qd = q.d = [];\r\n\r\n    // Result exponent may be one less than e.\r\n    // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n    for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n    if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n    if (pr == null) {\r\n      sd = pr = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else if (dp) {\r\n      sd = pr + (x.e - y.e) + 1;\r\n    } else {\r\n      sd = pr;\r\n    }\r\n\r\n    if (sd < 0) {\r\n      qd.push(1);\r\n      more = true;\r\n    } else {\r\n\r\n      // Convert precision in number of base 10 digits to base 1e7 digits.\r\n      sd = sd / logBase + 2 | 0;\r\n      i = 0;\r\n\r\n      // divisor < 1e7\r\n      if (yL == 1) {\r\n        k = 0;\r\n        yd = yd[0];\r\n        sd++;\r\n\r\n        // k is the carry.\r\n        for (; (i < xL || k) && sd--; i++) {\r\n          t = k * base + (xd[i] || 0);\r\n          qd[i] = t / yd | 0;\r\n          k = t % yd | 0;\r\n        }\r\n\r\n        more = k || i < xL;\r\n\r\n      // divisor >= 1e7\r\n      } else {\r\n\r\n        // Normalise xd and yd so highest order digit of yd is >= base/2\r\n        k = base / (yd[0] + 1) | 0;\r\n\r\n        if (k > 1) {\r\n          yd = multiplyInteger(yd, k, base);\r\n          xd = multiplyInteger(xd, k, base);\r\n          yL = yd.length;\r\n          xL = xd.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xd.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL;) rem[remL++] = 0;\r\n\r\n        yz = yd.slice();\r\n        yz.unshift(0);\r\n        yd0 = yd[0];\r\n\r\n        if (yd[1] >= base / 2) ++yd0;\r\n\r\n        do {\r\n          k = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yd, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, k.\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // k will be how many times the divisor goes into the current remainder.\r\n            k = rem0 / yd0 | 0;\r\n\r\n            //  Algorithm:\r\n            //  1. product = divisor * trial digit (k)\r\n            //  2. if product > remainder: product -= divisor, k--\r\n            //  3. remainder -= product\r\n            //  4. if product was < remainder at 2:\r\n            //    5. compare new remainder and divisor\r\n            //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n            if (k > 1) {\r\n              if (k >= base) k = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiplyInteger(yd, k, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              cmp = compare(prod, rem, prodL, remL);\r\n\r\n              // product > remainder.\r\n              if (cmp == 1) {\r\n                k--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n              }\r\n            } else {\r\n\r\n              // cmp is -1.\r\n              // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n              // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n              if (k == 0) cmp = k = 1;\r\n              prod = yd.slice();\r\n            }\r\n\r\n            prodL = prod.length;\r\n            if (prodL < remL) prod.unshift(0);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n\r\n            // If product was < previous remainder.\r\n            if (cmp == -1) {\r\n              remL = rem.length;\r\n\r\n              // Compare divisor and new remainder.\r\n              cmp = compare(yd, rem, yL, remL);\r\n\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              if (cmp < 1) {\r\n                k++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yd, remL, base);\r\n              }\r\n            }\r\n\r\n            remL = rem.length;\r\n          } else if (cmp === 0) {\r\n            k++;\r\n            rem = [0];\r\n          }    // if cmp === 1, k will be 0\r\n\r\n          // Add the next digit, k, to the result array.\r\n          qd[i++] = k;\r\n\r\n          // Update the remainder.\r\n          if (cmp && rem[0]) {\r\n            rem[remL++] = xd[xi] || 0;\r\n          } else {\r\n            rem = [xd[xi]];\r\n            remL = 1;\r\n          }\r\n\r\n        } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n        more = rem[0] !== void 0;\r\n      }\r\n\r\n      // Leading zero?\r\n      if (!qd[0]) qd.shift();\r\n    }\r\n\r\n    // logBase is 1 when divide is being used for base conversion.\r\n    if (logBase == 1) {\r\n      q.e = e;\r\n      inexact = more;\r\n    } else {\r\n\r\n      // To calculate q.e, first get the number of digits of qd[0].\r\n      for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n      q.e = i + e * logBase - 1;\r\n\r\n      finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n    }\r\n\r\n    return q;\r\n  };\r\n})();\r\n\r\n\r\n/*\r\n * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n * Check for over/under-flow.\r\n */\r\n function finalise(x, sd, rm, isTruncated) {\r\n  var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n    Ctor = x.constructor;\r\n\r\n  // Don't round if sd is null or undefined.\r\n  out: if (sd != null) {\r\n    xd = x.d;\r\n\r\n    // Infinity/NaN.\r\n    if (!xd) return x;\r\n\r\n    // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n    // w: the word of xd containing rd, a base 1e7 number.\r\n    // xdi: the index of w within xd.\r\n    // digits: the number of digits of w.\r\n    // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n    // they had leading zeros)\r\n    // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n    // Get the length of the first word of the digits array xd.\r\n    for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n    i = sd - digits;\r\n\r\n    // Is the rounding digit in the first word of xd?\r\n    if (i < 0) {\r\n      i += LOG_BASE;\r\n      j = sd;\r\n      w = xd[xdi = 0];\r\n\r\n      // Get the rounding digit at index j of w.\r\n      rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n    } else {\r\n      xdi = Math.ceil((i + 1) / LOG_BASE);\r\n      k = xd.length;\r\n      if (xdi >= k) {\r\n        if (isTruncated) {\r\n\r\n          // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n          for (; k++ <= xdi;) xd.push(0);\r\n          w = rd = 0;\r\n          digits = 1;\r\n          i %= LOG_BASE;\r\n          j = i - LOG_BASE + 1;\r\n        } else {\r\n          break out;\r\n        }\r\n      } else {\r\n        w = k = xd[xdi];\r\n\r\n        // Get the number of digits of w.\r\n        for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n        // Get the index of rd within w.\r\n        i %= LOG_BASE;\r\n\r\n        // Get the index of rd within w, adjusted for leading zeros.\r\n        // The number of leading zeros of w is given by LOG_BASE - digits.\r\n        j = i - LOG_BASE + digits;\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      }\r\n    }\r\n\r\n    // Are there any non-zero digits after the rounding digit?\r\n    isTruncated = isTruncated || sd < 0 ||\r\n      xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n    // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n    // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n    // will give 714.\r\n\r\n    roundUp = rm < 4\r\n      ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n      : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n        // Check whether the digit to the left of the rounding digit is odd.\r\n        ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n          rm == (x.s < 0 ? 8 : 7));\r\n\r\n    if (sd < 1 || !xd[0]) {\r\n      xd.length = 0;\r\n      if (roundUp) {\r\n\r\n        // Convert sd to decimal places.\r\n        sd -= x.e + 1;\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n        x.e = -sd || 0;\r\n      } else {\r\n\r\n        // Zero.\r\n        xd[0] = x.e = 0;\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n    // Remove excess digits.\r\n    if (i == 0) {\r\n      xd.length = xdi;\r\n      k = 1;\r\n      xdi--;\r\n    } else {\r\n      xd.length = xdi + 1;\r\n      k = mathpow(10, LOG_BASE - i);\r\n\r\n      // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n      // j > 0 means i > number of leading zeros of w.\r\n      xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n    }\r\n\r\n    if (roundUp) {\r\n      for (;;) {\r\n\r\n        // Is the digit to be rounded up in the first word of xd?\r\n        if (xdi == 0) {\r\n\r\n          // i will be the length of xd[0] before k is added.\r\n          for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n          j = xd[0] += k;\r\n          for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n          // if i != k the length has increased.\r\n          if (i != k) {\r\n            x.e++;\r\n            if (xd[0] == BASE) xd[0] = 1;\r\n          }\r\n\r\n          break;\r\n        } else {\r\n          xd[xdi] += k;\r\n          if (xd[xdi] != BASE) break;\r\n          xd[xdi--] = 0;\r\n          k = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n  }\r\n\r\n  if (external) {\r\n\r\n    // Overflow?\r\n    if (x.e > Ctor.maxE) {\r\n\r\n      // Infinity.\r\n      x.d = null;\r\n      x.e = NaN;\r\n\r\n    // Underflow?\r\n    } else if (x.e < Ctor.minE) {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n      // Ctor.underflow = true;\r\n    } // else Ctor.underflow = false;\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\nfunction finiteToString(x, isExp, sd) {\r\n  if (!x.isFinite()) return nonFiniteToString(x);\r\n  var k,\r\n    e = x.e,\r\n    str = digitsToString(x.d),\r\n    len = str.length;\r\n\r\n  if (isExp) {\r\n    if (sd && (k = sd - len) > 0) {\r\n      str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n    } else if (len > 1) {\r\n      str = str.charAt(0) + '.' + str.slice(1);\r\n    }\r\n\r\n    str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n  } else if (e < 0) {\r\n    str = '0.' + getZeroString(-e - 1) + str;\r\n    if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n  } else if (e >= len) {\r\n    str += getZeroString(e + 1 - len);\r\n    if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n  } else {\r\n    if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n    if (sd && (k = sd - len) > 0) {\r\n      if (e + 1 === len) str += '.';\r\n      str += getZeroString(k);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// Calculate the base 10 exponent from the base 1e7 exponent.\r\nfunction getBase10Exponent(digits, e) {\r\n  var w = digits[0];\r\n\r\n  // Add the number of digits of the first word of the digits array.\r\n  for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n  return e;\r\n}\r\n\r\n\r\nfunction getLn10(Ctor, sd, pr) {\r\n  if (sd > LN10_PRECISION) {\r\n\r\n    // Reset global state in case the exception is caught.\r\n    external = true;\r\n    if (pr) Ctor.precision = pr;\r\n    throw Error(precisionLimitExceeded);\r\n  }\r\n  return finalise(new Ctor(LN10), sd, 1, true);\r\n}\r\n\r\n\r\nfunction getPi(Ctor, sd, rm) {\r\n  if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n  return finalise(new Ctor(PI), sd, rm, true);\r\n}\r\n\r\n\r\nfunction getPrecision(digits) {\r\n  var w = digits.length - 1,\r\n    len = w * LOG_BASE + 1;\r\n\r\n  w = digits[w];\r\n\r\n  // If non-zero...\r\n  if (w) {\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    for (; w % 10 == 0; w /= 10) len--;\r\n\r\n    // Add the number of digits of the first word.\r\n    for (w = digits[0]; w >= 10; w /= 10) len++;\r\n  }\r\n\r\n  return len;\r\n}\r\n\r\n\r\nfunction getZeroString(k) {\r\n  var zs = '';\r\n  for (; k--;) zs += '0';\r\n  return zs;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n * integer of type number.\r\n *\r\n * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n *\r\n */\r\nfunction intPow(Ctor, x, n, pr) {\r\n  var isTruncated,\r\n    r = new Ctor(1),\r\n\r\n    // Max n of 9007199254740991 takes 53 loop iterations.\r\n    // Maximum digits array length; leaves [28, 34] guard digits.\r\n    k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n  external = false;\r\n\r\n  for (;;) {\r\n    if (n % 2) {\r\n      r = r.times(x);\r\n      if (truncate(r.d, k)) isTruncated = true;\r\n    }\r\n\r\n    n = mathfloor(n / 2);\r\n    if (n === 0) {\r\n\r\n      // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n      n = r.d.length - 1;\r\n      if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n      break;\r\n    }\r\n\r\n    x = x.times(x);\r\n    truncate(x.d, k);\r\n  }\r\n\r\n  external = true;\r\n\r\n  return r;\r\n}\r\n\r\n\r\nfunction isOdd(n) {\r\n  return n.d[n.d.length - 1] & 1;\r\n}\r\n\r\n\r\n/*\r\n * Handle `max` (`n` is -1) and `min` (`n` is 1).\r\n */\r\nfunction maxOrMin(Ctor, args, n) {\r\n  var k, y,\r\n    x = new Ctor(args[0]),\r\n    i = 0;\r\n\r\n  for (; ++i < args.length;) {\r\n    y = new Ctor(args[i]);\r\n\r\n    // NaN?\r\n    if (!y.s) {\r\n      x = y;\r\n      break;\r\n    }\r\n\r\n    k = x.cmp(y);\r\n\r\n    if (k === n || k === 0 && x.s === n) {\r\n      x = y;\r\n    }\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n * digits.\r\n *\r\n * Taylor/Maclaurin series.\r\n *\r\n * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n *\r\n * Argument reduction:\r\n *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n *   exp(x) = exp(x / 2^k)^(2^k)\r\n *\r\n * Previously, the argument was initially reduced by\r\n * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n * found to be slower than just dividing repeatedly by 32 as above.\r\n *\r\n * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n *\r\n *  exp(Infinity)  = Infinity\r\n *  exp(-Infinity) = 0\r\n *  exp(NaN)       = NaN\r\n *  exp(\u00B10)        = 1\r\n *\r\n *  exp(x) is non-terminating for any finite, non-zero x.\r\n *\r\n *  The result will always be correctly rounded.\r\n *\r\n */\r\nfunction naturalExponential(x, sd) {\r\n  var denominator, guard, j, pow, sum, t, wpr,\r\n    rep = 0,\r\n    i = 0,\r\n    k = 0,\r\n    Ctor = x.constructor,\r\n    rm = Ctor.rounding,\r\n    pr = Ctor.precision;\r\n\r\n  // 0/NaN/Infinity?\r\n  if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n    return new Ctor(x.d\r\n      ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n      : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n  }\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  t = new Ctor(0.03125);\r\n\r\n  // while abs(x) >= 0.1\r\n  while (x.e > -2) {\r\n\r\n    // x = x / 2^5\r\n    x = x.times(t);\r\n    k += 5;\r\n  }\r\n\r\n  // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n  // necessary to ensure the first 4 rounding digits are correct.\r\n  guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n  wpr += guard;\r\n  denominator = pow = sum = new Ctor(1);\r\n  Ctor.precision = wpr;\r\n\r\n  for (;;) {\r\n    pow = finalise(pow.times(x), wpr, 1);\r\n    denominator = denominator.times(++i);\r\n    t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      j = k;\r\n      while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n      // Check to see if the first 4 rounding digits are [49]999.\r\n      // If so, repeat the summation with a higher precision, otherwise\r\n      // e.g. with precision: 18, rounding: 1\r\n      // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n      // `wpr - guard` is the index of first rounding digit.\r\n      if (sd == null) {\r\n\r\n        if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n          Ctor.precision = wpr += 10;\r\n          denominator = pow = t = new Ctor(1);\r\n          i = 0;\r\n          rep++;\r\n        } else {\r\n          return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n        }\r\n      } else {\r\n        Ctor.precision = pr;\r\n        return sum;\r\n      }\r\n    }\r\n\r\n    sum = t;\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n * digits.\r\n *\r\n *  ln(-n)        = NaN\r\n *  ln(0)         = -Infinity\r\n *  ln(-0)        = -Infinity\r\n *  ln(1)         = 0\r\n *  ln(Infinity)  = Infinity\r\n *  ln(-Infinity) = NaN\r\n *  ln(NaN)       = NaN\r\n *\r\n *  ln(n) (n != 1) is non-terminating.\r\n *\r\n */\r\nfunction naturalLogarithm(y, sd) {\r\n  var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n    n = 1,\r\n    guard = 10,\r\n    x = y,\r\n    xd = x.d,\r\n    Ctor = x.constructor,\r\n    rm = Ctor.rounding,\r\n    pr = Ctor.precision;\r\n\r\n  // Is x negative or Infinity, NaN, 0 or 1?\r\n  if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n    return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n  }\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  Ctor.precision = wpr += guard;\r\n  c = digitsToString(xd);\r\n  c0 = c.charAt(0);\r\n\r\n  if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n    // Argument reduction.\r\n    // The series converges faster the closer the argument is to 1, so using\r\n    // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n    // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n    // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n    // later be divided by this number, then separate out the power of 10 using\r\n    // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n    // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n    //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n    // max n is 6 (gives 0.7 - 1.3)\r\n    while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n      x = x.times(y);\r\n      c = digitsToString(x.d);\r\n      c0 = c.charAt(0);\r\n      n++;\r\n    }\r\n\r\n    e = x.e;\r\n\r\n    if (c0 > 1) {\r\n      x = new Ctor('0.' + c);\r\n      e++;\r\n    } else {\r\n      x = new Ctor(c0 + '.' + c.slice(1));\r\n    }\r\n  } else {\r\n\r\n    // The argument reduction method above may result in overflow if the argument y is a massive\r\n    // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n    // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n    t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n    x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n    Ctor.precision = pr;\r\n\r\n    return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n  }\r\n\r\n  // x1 is x reduced to a value near 1.\r\n  x1 = x;\r\n\r\n  // Taylor series.\r\n  // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n  // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n  sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n  x2 = finalise(x.times(x), wpr, 1);\r\n  denominator = 3;\r\n\r\n  for (;;) {\r\n    numerator = finalise(numerator.times(x2), wpr, 1);\r\n    t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      sum = sum.times(2);\r\n\r\n      // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n      // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n      if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n      sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n      // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n      // been repeated previously) and the first 4 rounding digits 9999?\r\n      // If so, restart the summation with a higher precision, otherwise\r\n      // e.g. with precision: 12, rounding: 1\r\n      // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n      // `wpr - guard` is the index of first rounding digit.\r\n      if (sd == null) {\r\n        if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n          Ctor.precision = wpr += guard;\r\n          t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n          x2 = finalise(x.times(x), wpr, 1);\r\n          denominator = rep = 1;\r\n        } else {\r\n          return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n        }\r\n      } else {\r\n        Ctor.precision = pr;\r\n        return sum;\r\n      }\r\n    }\r\n\r\n    sum = t;\r\n    denominator += 2;\r\n  }\r\n}\r\n\r\n\r\n// \u00B1Infinity, NaN.\r\nfunction nonFiniteToString(x) {\r\n  // Unsigned.\r\n  return String(x.s * x.s / 0);\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from string `str`.\r\n */\r\nfunction parseDecimal(x, str) {\r\n  var e, i, len;\r\n\r\n  // TODO BigInt str: no need to check for decimal point, exponential form or leading zeros.\r\n  // Decimal point?\r\n  if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n  // Exponential form?\r\n  if ((i = str.search(/e/i)) > 0) {\r\n\r\n    // Determine exponent.\r\n    if (e < 0) e = i;\r\n    e += +str.slice(i + 1);\r\n    str = str.substring(0, i);\r\n  } else if (e < 0) {\r\n\r\n    // Integer.\r\n    e = str.length;\r\n  }\r\n\r\n  // Determine leading zeros.\r\n  for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n  // Determine trailing zeros.\r\n  for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n  str = str.slice(i, len);\r\n\r\n  if (str) {\r\n    len -= i;\r\n    x.e = e = e - i - 1;\r\n    x.d = [];\r\n\r\n    // Transform base\r\n\r\n    // e is the base 10 exponent.\r\n    // i is where to slice str to get the first word of the digits array.\r\n    i = (e + 1) % LOG_BASE;\r\n    if (e < 0) i += LOG_BASE;\r\n\r\n    if (i < len) {\r\n      if (i) x.d.push(+str.slice(0, i));\r\n      for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n      str = str.slice(i);\r\n      i = LOG_BASE - str.length;\r\n    } else {\r\n      i -= len;\r\n    }\r\n\r\n    for (; i--;) str += '0';\r\n    x.d.push(+str);\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > x.constructor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < x.constructor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // x.constructor.underflow = true;\r\n      } // else x.constructor.underflow = false;\r\n    }\r\n  } else {\r\n\r\n    // Zero.\r\n    x.e = 0;\r\n    x.d = [0];\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n */\r\nfunction parseOther(x, str) {\r\n  var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n  if (str.indexOf('_') > -1) {\r\n    str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n    if (isDecimal.test(str)) return parseDecimal(x, str);\r\n  } else if (str === 'Infinity' || str === 'NaN') {\r\n    if (!+str) x.s = NaN;\r\n    x.e = NaN;\r\n    x.d = null;\r\n    return x;\r\n  }\r\n\r\n  if (isHex.test(str))  {\r\n    base = 16;\r\n    str = str.toLowerCase();\r\n  } else if (isBinary.test(str))  {\r\n    base = 2;\r\n  } else if (isOctal.test(str))  {\r\n    base = 8;\r\n  } else {\r\n    throw Error(invalidArgument + str);\r\n  }\r\n\r\n  // Is there a binary exponent part?\r\n  i = str.search(/p/i);\r\n\r\n  if (i > 0) {\r\n    p = +str.slice(i + 1);\r\n    str = str.substring(2, i);\r\n  } else {\r\n    str = str.slice(2);\r\n  }\r\n\r\n  // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n  // fraction part will be restored.\r\n  i = str.indexOf('.');\r\n  isFloat = i >= 0;\r\n  Ctor = x.constructor;\r\n\r\n  if (isFloat) {\r\n    str = str.replace('.', '');\r\n    len = str.length;\r\n    i = len - i;\r\n\r\n    // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n    divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n  }\r\n\r\n  xd = convertBase(str, base, BASE);\r\n  xe = xd.length - 1;\r\n\r\n  // Remove trailing zeros.\r\n  for (i = xe; xd[i] === 0; --i) xd.pop();\r\n  if (i < 0) return new Ctor(x.s * 0);\r\n  x.e = getBase10Exponent(xd, xe);\r\n  x.d = xd;\r\n  external = false;\r\n\r\n  // At what precision to perform the division to ensure exact conversion?\r\n  // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n  // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n  // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n  // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n  // Therefore using 4 * the number of digits of str will always be enough.\r\n  if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n  // Multiply by the binary exponent part if present.\r\n  if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n  external = true;\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * sin(x) = x - x^3/3! + x^5/5! - ...\r\n * |x| < pi/2\r\n *\r\n */\r\nfunction sine(Ctor, x) {\r\n  var k,\r\n    len = x.d.length;\r\n\r\n  if (len < 3) {\r\n    return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n  }\r\n\r\n  // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n  // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n  // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  k = 1.4 * Math.sqrt(len);\r\n  k = k > 16 ? 16 : k | 0;\r\n\r\n  x = x.times(1 / tinyPow(5, k));\r\n  x = taylorSeries(Ctor, 2, x, x);\r\n\r\n  // Reverse argument reduction\r\n  var sin2_x,\r\n    d5 = new Ctor(5),\r\n    d16 = new Ctor(16),\r\n    d20 = new Ctor(20);\r\n  for (; k--;) {\r\n    sin2_x = x.times(x);\r\n    x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n// Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\nfunction taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n  var j, t, u, x2,\r\n    i = 1,\r\n    pr = Ctor.precision,\r\n    k = Math.ceil(pr / LOG_BASE);\r\n\r\n  external = false;\r\n  x2 = x.times(x);\r\n  u = new Ctor(y);\r\n\r\n  for (;;) {\r\n    t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n    u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n    y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n    t = u.plus(y);\r\n\r\n    if (t.d[k] !== void 0) {\r\n      for (j = k; t.d[j] === u.d[j] && j--;);\r\n      if (j == -1) break;\r\n    }\r\n\r\n    j = u;\r\n    u = y;\r\n    y = t;\r\n    t = j;\r\n    i++;\r\n  }\r\n\r\n  external = true;\r\n  t.d.length = k + 1;\r\n\r\n  return t;\r\n}\r\n\r\n\r\n// Exponent e must be positive and non-zero.\r\nfunction tinyPow(b, e) {\r\n  var n = b;\r\n  while (--e) n *= b;\r\n  return n;\r\n}\r\n\r\n\r\n// Return the absolute value of `x` reduced to less than or equal to half pi.\r\nfunction toLessThanHalfPi(Ctor, x) {\r\n  var t,\r\n    isNeg = x.s < 0,\r\n    pi = getPi(Ctor, Ctor.precision, 1),\r\n    halfPi = pi.times(0.5);\r\n\r\n  x = x.abs();\r\n\r\n  if (x.lte(halfPi)) {\r\n    quadrant = isNeg ? 4 : 1;\r\n    return x;\r\n  }\r\n\r\n  t = x.divToInt(pi);\r\n\r\n  if (t.isZero()) {\r\n    quadrant = isNeg ? 3 : 2;\r\n  } else {\r\n    x = x.minus(t.times(pi));\r\n\r\n    // 0 <= x < pi\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n      return x;\r\n    }\r\n\r\n    quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n  }\r\n\r\n  return x.minus(pi).abs();\r\n}\r\n\r\n\r\n/*\r\n * Return the value of Decimal `x` as a string in base `baseOut`.\r\n *\r\n * If the optional `sd` argument is present include a binary exponent suffix.\r\n */\r\nfunction toStringBinary(x, baseOut, sd, rm) {\r\n  var base, e, i, k, len, roundUp, str, xd, y,\r\n    Ctor = x.constructor,\r\n    isExp = sd !== void 0;\r\n\r\n  if (isExp) {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  } else {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  }\r\n\r\n  if (!x.isFinite()) {\r\n    str = nonFiniteToString(x);\r\n  } else {\r\n    str = finiteToString(x);\r\n    i = str.indexOf('.');\r\n\r\n    // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n    // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n    // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n    // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n    if (isExp) {\r\n      base = 2;\r\n      if (baseOut == 16) {\r\n        sd = sd * 4 - 3;\r\n      } else if (baseOut == 8) {\r\n        sd = sd * 3 - 2;\r\n      }\r\n    } else {\r\n      base = baseOut;\r\n    }\r\n\r\n    // Convert the number as an integer then divide the result by its base raised to a power such\r\n    // that the fraction part will be restored.\r\n\r\n    // Non-integer.\r\n    if (i >= 0) {\r\n      str = str.replace('.', '');\r\n      y = new Ctor(1);\r\n      y.e = str.length - i;\r\n      y.d = convertBase(finiteToString(y), 10, base);\r\n      y.e = y.d.length;\r\n    }\r\n\r\n    xd = convertBase(str, 10, base);\r\n    e = len = xd.length;\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] == 0;) xd.pop();\r\n\r\n    if (!xd[0]) {\r\n      str = isExp ? '0p+0' : '0';\r\n    } else {\r\n      if (i < 0) {\r\n        e--;\r\n      } else {\r\n        x = new Ctor(x);\r\n        x.d = xd;\r\n        x.e = e;\r\n        x = divide(x, y, sd, rm, 0, base);\r\n        xd = x.d;\r\n        e = x.e;\r\n        roundUp = inexact;\r\n      }\r\n\r\n      // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      i = xd[sd];\r\n      k = base / 2;\r\n      roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n      roundUp = rm < 4\r\n        ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n        : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n          rm === (x.s < 0 ? 8 : 7));\r\n\r\n      xd.length = sd;\r\n\r\n      if (roundUp) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up and so on.\r\n        for (; ++xd[--sd] > base - 1;) {\r\n          xd[sd] = 0;\r\n          if (!sd) {\r\n            ++e;\r\n            xd.unshift(1);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Determine trailing zeros.\r\n      for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n      // E.g. [4, 11, 15] becomes 4bf.\r\n      for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n      // Add binary exponent suffix?\r\n      if (isExp) {\r\n        if (len > 1) {\r\n          if (baseOut == 16 || baseOut == 8) {\r\n            i = baseOut == 16 ? 4 : 3;\r\n            for (--len; len % i; len++) str += '0';\r\n            xd = convertBase(str, base, baseOut);\r\n            for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n            // xd[0] will always be be 1\r\n            for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n          } else {\r\n            str = str.charAt(0) + '.' + str.slice(1);\r\n          }\r\n        }\r\n\r\n        str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n      } else if (e < 0) {\r\n        for (; ++e;) str = '0' + str;\r\n        str = '0.' + str;\r\n      } else {\r\n        if (++e > len) for (e -= len; e-- ;) str += '0';\r\n        else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n  }\r\n\r\n  return x.s < 0 ? '-' + str : str;\r\n}\r\n\r\n\r\n// Does not strip trailing zeros.\r\nfunction truncate(arr, len) {\r\n  if (arr.length > len) {\r\n    arr.length = len;\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n// Decimal methods\r\n\r\n\r\n/*\r\n *  abs\r\n *  acos\r\n *  acosh\r\n *  add\r\n *  asin\r\n *  asinh\r\n *  atan\r\n *  atanh\r\n *  atan2\r\n *  cbrt\r\n *  ceil\r\n *  clamp\r\n *  clone\r\n *  config\r\n *  cos\r\n *  cosh\r\n *  div\r\n *  exp\r\n *  floor\r\n *  hypot\r\n *  ln\r\n *  log\r\n *  log2\r\n *  log10\r\n *  max\r\n *  min\r\n *  mod\r\n *  mul\r\n *  pow\r\n *  random\r\n *  round\r\n *  set\r\n *  sign\r\n *  sin\r\n *  sinh\r\n *  sqrt\r\n *  sub\r\n *  sum\r\n *  tan\r\n *  tanh\r\n *  trunc\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of `x`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction abs(x) {\r\n  return new this(x).abs();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction acos(x) {\r\n  return new this(x).acos();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction acosh(x) {\r\n  return new this(x).acosh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction add(x, y) {\r\n  return new this(x).plus(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction asin(x) {\r\n  return new this(x).asin();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction asinh(x) {\r\n  return new this(x).asinh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction atan(x) {\r\n  return new this(x).atan();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction atanh(x) {\r\n  return new this(x).atanh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi, pi]\r\n *\r\n * y {number|string|bigint|Decimal} The y-coordinate.\r\n * x {number|string|bigint|Decimal} The x-coordinate.\r\n *\r\n * atan2(\u00B10, -0)               = \u00B1pi\r\n * atan2(\u00B10, +0)               = \u00B10\r\n * atan2(\u00B10, -x)               = \u00B1pi for x > 0\r\n * atan2(\u00B10, x)                = \u00B10 for x > 0\r\n * atan2(-y, \u00B10)               = -pi/2 for y > 0\r\n * atan2(y, \u00B10)                = pi/2 for y > 0\r\n * atan2(\u00B1y, -Infinity)        = \u00B1pi for finite y > 0\r\n * atan2(\u00B1y, +Infinity)        = \u00B10 for finite y > 0\r\n * atan2(\u00B1Infinity, x)         = \u00B1pi/2 for finite x\r\n * atan2(\u00B1Infinity, -Infinity) = \u00B13*pi/4\r\n * atan2(\u00B1Infinity, +Infinity) = \u00B1pi/4\r\n * atan2(NaN, x) = NaN\r\n * atan2(y, NaN) = NaN\r\n *\r\n */\r\nfunction atan2(y, x) {\r\n  y = new this(y);\r\n  x = new this(x);\r\n  var r,\r\n    pr = this.precision,\r\n    rm = this.rounding,\r\n    wpr = pr + 4;\r\n\r\n  // Either NaN\r\n  if (!y.s || !x.s) {\r\n    r = new this(NaN);\r\n\r\n  // Both \u00B1Infinity\r\n  } else if (!y.d && !x.d) {\r\n    r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n    r.s = y.s;\r\n\r\n  // x is \u00B1Infinity or y is \u00B10\r\n  } else if (!x.d || y.isZero()) {\r\n    r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n    r.s = y.s;\r\n\r\n  // y is \u00B1Infinity or x is \u00B10\r\n  } else if (!y.d || x.isZero()) {\r\n    r = getPi(this, wpr, 1).times(0.5);\r\n    r.s = y.s;\r\n\r\n  // Both non-zero and finite\r\n  } else if (x.s < 0) {\r\n    this.precision = wpr;\r\n    this.rounding = 1;\r\n    r = this.atan(divide(y, x, wpr, 1));\r\n    x = getPi(this, wpr, 1);\r\n    this.precision = pr;\r\n    this.rounding = rm;\r\n    r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n  } else {\r\n    r = this.atan(divide(y, x, wpr, 1));\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction cbrt(x) {\r\n  return new this(x).cbrt();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction ceil(x) {\r\n  return finalise(x = new this(x), x.e + 1, 2);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * min {number|string|bigint|Decimal}\r\n * max {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction clamp(x, min, max) {\r\n  return new this(x).clamp(min, max);\r\n}\r\n\r\n\r\n/*\r\n * Configure global settings for a Decimal constructor.\r\n *\r\n * `obj` is an object with one or more of the following properties,\r\n *\r\n *   precision  {number}\r\n *   rounding   {number}\r\n *   toExpNeg   {number}\r\n *   toExpPos   {number}\r\n *   maxE       {number}\r\n *   minE       {number}\r\n *   modulo     {number}\r\n *   crypto     {boolean|number}\r\n *   defaults   {true}\r\n *\r\n * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n *\r\n */\r\nfunction config(obj) {\r\n  if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n  var i, p, v,\r\n    useDefaults = obj.defaults === true,\r\n    ps = [\r\n      'precision', 1, MAX_DIGITS,\r\n      'rounding', 0, 8,\r\n      'toExpNeg', -EXP_LIMIT, 0,\r\n      'toExpPos', 0, EXP_LIMIT,\r\n      'maxE', 0, EXP_LIMIT,\r\n      'minE', -EXP_LIMIT, 0,\r\n      'modulo', 0, 9\r\n    ];\r\n\r\n  for (i = 0; i < ps.length; i += 3) {\r\n    if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n      else throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n  if ((v = obj[p]) !== void 0) {\r\n    if (v === true || v === false || v === 0 || v === 1) {\r\n      if (v) {\r\n        if (typeof crypto != 'undefined' && crypto &&\r\n          (crypto.getRandomValues || crypto.randomBytes)) {\r\n          this[p] = true;\r\n        } else {\r\n          throw Error(cryptoUnavailable);\r\n        }\r\n      } else {\r\n        this[p] = false;\r\n      }\r\n    } else {\r\n      throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  return this;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction cos(x) {\r\n  return new this(x).cos();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction cosh(x) {\r\n  return new this(x).cosh();\r\n}\r\n\r\n\r\n/*\r\n * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n * constructor.\r\n *\r\n */\r\nfunction clone(obj) {\r\n  var i, p, ps;\r\n\r\n  /*\r\n   * The Decimal constructor and exported function.\r\n   * Return a new Decimal instance.\r\n   *\r\n   * v {number|string|bigint|Decimal} A numeric value.\r\n   *\r\n   */\r\n  function Decimal(v) {\r\n    var e, i, t,\r\n      x = this;\r\n\r\n    // Decimal called without new.\r\n    if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n    // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n    // which points to Object.\r\n    x.constructor = Decimal;\r\n\r\n    if (isDecimalInstance(v)) {\r\n      x.s = v.s;\r\n\r\n      if (external) {\r\n        if (!v.d || v.e > Decimal.maxE) {\r\n\r\n          // Infinity.\r\n          x.e = NaN;\r\n          x.d = null;\r\n        } else if (v.e < Decimal.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d.slice();\r\n        }\r\n      } else {\r\n        x.e = v.e;\r\n        x.d = v.d ? v.d.slice() : v.d;\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    t = typeof v;\r\n\r\n    if (t === 'number') {\r\n      if (v === 0) {\r\n        x.s = 1 / v < 0 ? -1 : 1;\r\n        x.e = 0;\r\n        x.d = [0];\r\n        return;\r\n      }\r\n\r\n      if (v < 0) {\r\n        v = -v;\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      // Fast path for small integers.\r\n      if (v === ~~v && v < 1e7) {\r\n        for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n        if (external) {\r\n          if (e > Decimal.maxE) {\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (e < Decimal.minE) {\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n        } else {\r\n          x.e = e;\r\n          x.d = [v];\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      // Infinity or NaN?\r\n      if (v * 0 !== 0) {\r\n        if (!v) x.s = NaN;\r\n        x.e = NaN;\r\n        x.d = null;\r\n        return;\r\n      }\r\n\r\n      return parseDecimal(x, v.toString());\r\n    }\r\n\r\n    if (t === 'string') {\r\n      if ((i = v.charCodeAt(0)) === 45) {  // minus sign\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        if (i === 43) v = v.slice(1);  // plus sign\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    if (t === 'bigint') {\r\n      if (v < 0) {\r\n        v = -v;\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      return parseDecimal(x, v.toString());\r\n    }\r\n\r\n    throw Error(invalidArgument + v);\r\n  }\r\n\r\n  Decimal.prototype = P;\r\n\r\n  Decimal.ROUND_UP = 0;\r\n  Decimal.ROUND_DOWN = 1;\r\n  Decimal.ROUND_CEIL = 2;\r\n  Decimal.ROUND_FLOOR = 3;\r\n  Decimal.ROUND_HALF_UP = 4;\r\n  Decimal.ROUND_HALF_DOWN = 5;\r\n  Decimal.ROUND_HALF_EVEN = 6;\r\n  Decimal.ROUND_HALF_CEIL = 7;\r\n  Decimal.ROUND_HALF_FLOOR = 8;\r\n  Decimal.EUCLID = 9;\r\n\r\n  Decimal.config = Decimal.set = config;\r\n  Decimal.clone = clone;\r\n  Decimal.isDecimal = isDecimalInstance;\r\n\r\n  Decimal.abs = abs;\r\n  Decimal.acos = acos;\r\n  Decimal.acosh = acosh;        // ES6\r\n  Decimal.add = add;\r\n  Decimal.asin = asin;\r\n  Decimal.asinh = asinh;        // ES6\r\n  Decimal.atan = atan;\r\n  Decimal.atanh = atanh;        // ES6\r\n  Decimal.atan2 = atan2;\r\n  Decimal.cbrt = cbrt;          // ES6\r\n  Decimal.ceil = ceil;\r\n  Decimal.clamp = clamp;\r\n  Decimal.cos = cos;\r\n  Decimal.cosh = cosh;          // ES6\r\n  Decimal.div = div;\r\n  Decimal.exp = exp;\r\n  Decimal.floor = floor;\r\n  Decimal.hypot = hypot;        // ES6\r\n  Decimal.ln = ln;\r\n  Decimal.log = log;\r\n  Decimal.log10 = log10;        // ES6\r\n  Decimal.log2 = log2;          // ES6\r\n  Decimal.max = max;\r\n  Decimal.min = min;\r\n  Decimal.mod = mod;\r\n  Decimal.mul = mul;\r\n  Decimal.pow = pow;\r\n  Decimal.random = random;\r\n  Decimal.round = round;\r\n  Decimal.sign = sign;          // ES6\r\n  Decimal.sin = sin;\r\n  Decimal.sinh = sinh;          // ES6\r\n  Decimal.sqrt = sqrt;\r\n  Decimal.sub = sub;\r\n  Decimal.sum = sum;\r\n  Decimal.tan = tan;\r\n  Decimal.tanh = tanh;          // ES6\r\n  Decimal.trunc = trunc;        // ES6\r\n\r\n  if (obj === void 0) obj = {};\r\n  if (obj) {\r\n    if (obj.defaults !== true) {\r\n      ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n    }\r\n  }\r\n\r\n  Decimal.config(obj);\r\n\r\n  return Decimal;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction div(x, y) {\r\n  return new this(x).div(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} The power to which to raise the base of the natural log.\r\n *\r\n */\r\nfunction exp(x) {\r\n  return new this(x).exp();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction floor(x) {\r\n  return finalise(x = new this(x), x.e + 1, 3);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n * rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction hypot() {\r\n  var i, n,\r\n    t = new this(0);\r\n\r\n  external = false;\r\n\r\n  for (i = 0; i < arguments.length;) {\r\n    n = new this(arguments[i++]);\r\n    if (!n.d) {\r\n      if (n.s) {\r\n        external = true;\r\n        return new this(1 / 0);\r\n      }\r\n      t = n;\r\n    } else if (t.d) {\r\n      t = t.plus(n.times(n));\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return t.sqrt();\r\n}\r\n\r\n\r\n/*\r\n * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n * otherwise return false.\r\n *\r\n */\r\nfunction isDecimalInstance(obj) {\r\n  return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction ln(x) {\r\n  return new this(x).ln();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * log[y](x)\r\n *\r\n * x {number|string|bigint|Decimal} The argument of the logarithm.\r\n * y {number|string|bigint|Decimal} The base of the logarithm.\r\n *\r\n */\r\nfunction log(x, y) {\r\n  return new this(x).log(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction log2(x) {\r\n  return new this(x).log(2);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction log10(x) {\r\n  return new this(x).log(10);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the maximum of the arguments.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction max() {\r\n  return maxOrMin(this, arguments, -1);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the minimum of the arguments.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction min() {\r\n  return maxOrMin(this, arguments, 1);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction mod(x, y) {\r\n  return new this(x).mod(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction mul(x, y) {\r\n  return new this(x).mul(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} The base.\r\n * y {number|string|bigint|Decimal} The exponent.\r\n *\r\n */\r\nfunction pow(x, y) {\r\n  return new this(x).pow(y);\r\n}\r\n\r\n\r\n/*\r\n * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n * are produced).\r\n *\r\n * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n *\r\n */\r\nfunction random(sd) {\r\n  var d, e, k, n,\r\n    i = 0,\r\n    r = new this(1),\r\n    rd = [];\r\n\r\n  if (sd === void 0) sd = this.precision;\r\n  else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n  k = Math.ceil(sd / LOG_BASE);\r\n\r\n  if (!this.crypto) {\r\n    for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n  // Browsers supporting crypto.getRandomValues.\r\n  } else if (crypto.getRandomValues) {\r\n    d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n    for (; i < k;) {\r\n      n = d[i];\r\n\r\n      // 0 <= n < 4294967296\r\n      // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n      if (n >= 4.29e9) {\r\n        d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n      } else {\r\n\r\n        // 0 <= n <= 4289999999\r\n        // 0 <= (n % 1e7) <= 9999999\r\n        rd[i++] = n % 1e7;\r\n      }\r\n    }\r\n\r\n  // Node.js supporting crypto.randomBytes.\r\n  } else if (crypto.randomBytes) {\r\n\r\n    // buffer\r\n    d = crypto.randomBytes(k *= 4);\r\n\r\n    for (; i < k;) {\r\n\r\n      // 0 <= n < 2147483648\r\n      n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n      // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n      if (n >= 2.14e9) {\r\n        crypto.randomBytes(4).copy(d, i);\r\n      } else {\r\n\r\n        // 0 <= n <= 2139999999\r\n        // 0 <= (n % 1e7) <= 9999999\r\n        rd.push(n % 1e7);\r\n        i += 4;\r\n      }\r\n    }\r\n\r\n    i = k / 4;\r\n  } else {\r\n    throw Error(cryptoUnavailable);\r\n  }\r\n\r\n  k = rd[--i];\r\n  sd %= LOG_BASE;\r\n\r\n  // Convert trailing digits to zeros according to sd.\r\n  if (k && sd) {\r\n    n = mathpow(10, LOG_BASE - sd);\r\n    rd[i] = (k / n | 0) * n;\r\n  }\r\n\r\n  // Remove trailing words which are zero.\r\n  for (; rd[i] === 0; i--) rd.pop();\r\n\r\n  // Zero?\r\n  if (i < 0) {\r\n    e = 0;\r\n    rd = [0];\r\n  } else {\r\n    e = -1;\r\n\r\n    // Remove leading words which are zero and adjust exponent accordingly.\r\n    for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n    // Count the digits of the first word of rd to determine leading zeros.\r\n    for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n    // Adjust the exponent for leading zeros of the first word of rd.\r\n    if (k < LOG_BASE) e -= LOG_BASE - k;\r\n  }\r\n\r\n  r.e = e;\r\n  r.d = rd;\r\n\r\n  return r;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n *\r\n * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction round(x) {\r\n  return finalise(x = new this(x), x.e + 1, this.rounding);\r\n}\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if x > 0,\r\n *  -1    if x < 0,\r\n *   0    if x is 0,\r\n *  -0    if x is -0,\r\n *   NaN  otherwise\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction sign(x) {\r\n  x = new this(x);\r\n  return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction sin(x) {\r\n  return new this(x).sin();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction sinh(x) {\r\n  return new this(x).sinh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction sqrt(x) {\r\n  return new this(x).sqrt();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n * y {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction sub(x, y) {\r\n  return new this(x).sub(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * Only the result is rounded, not the intermediate calculations.\r\n *\r\n * arguments {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction sum() {\r\n  var i = 0,\r\n    args = arguments,\r\n    x = new this(args[i]);\r\n\r\n  external = false;\r\n  for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n  external = true;\r\n\r\n  return finalise(x, this.precision, this.rounding);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction tan(x) {\r\n  return new this(x).tan();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|bigint|Decimal} A value in radians.\r\n *\r\n */\r\nfunction tanh(x) {\r\n  return new this(x).tanh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` truncated to an integer.\r\n *\r\n * x {number|string|bigint|Decimal}\r\n *\r\n */\r\nfunction trunc(x) {\r\n  return finalise(x = new this(x), x.e + 1, 1);\r\n}\r\n\r\n\r\nP[Symbol.for('nodejs.util.inspect.custom')] = P.toString;\r\nP[Symbol.toStringTag] = 'Decimal';\r\n\r\n// Create and configure initial Decimal constructor.\r\nexport var Decimal = P.constructor = clone(DEFAULTS);\r\n\r\n// Create the internal constants from their string values.\r\nLN10 = new Decimal(LN10);\r\nPI = new Decimal(PI);\r\n\r\nexport default Decimal;\r\n", "import { RuntimeDataModel, RuntimeModel, uncapitalize } from '@prisma/client-common'\nimport { assertNever } from '@prisma/internals'\n\nimport { ErrorFormat } from '../../getPrismaClient'\nimport { CallSite } from '../../utils/CallSite'\nimport { isDate, isValidDate } from '../../utils/date'\nimport { isDecimalJsLike } from '../../utils/decimalJsLike'\nimport {\n  JsonArgumentValue,\n  JsonFieldSelection,\n  JsonQuery,\n  JsonQueryAction,\n  JsonSelectionSet,\n  OutputTypeDescription,\n  RawTaggedValue,\n} from '../engines'\nimport { throwValidationException } from '../errorRendering/throwValidationException'\nimport { MergedExtensionsList } from '../extensions/MergedExtensionsList'\nimport { computeEngineSideOmissions, computeEngineSideSelection } from '../extensions/resultUtils'\nimport { isFieldRef } from '../model/FieldRef'\nimport { isParam } from '../model/Param'\nimport { isSkip, Skip } from '../types'\nimport {\n  Action,\n  JsArgs,\n  JsInputValue,\n  JsonConvertible,\n  Omission,\n  RawParameters,\n  Selection,\n} from '../types/exported/JsApi'\nimport { ObjectEnumValue, objectEnumValues } from '../types/exported/ObjectEnums'\nimport { ValidationError } from '../types/ValidationError'\n\nconst jsActionToProtocolAction: Record<Action, JsonQueryAction> = {\n  findUnique: 'findUnique',\n  findUniqueOrThrow: 'findUniqueOrThrow',\n  findFirst: 'findFirst',\n  findFirstOrThrow: 'findFirstOrThrow',\n  findMany: 'findMany',\n  count: 'aggregate',\n  create: 'createOne',\n  createMany: 'createMany',\n  createManyAndReturn: 'createManyAndReturn',\n  update: 'updateOne',\n  updateMany: 'updateMany',\n  updateManyAndReturn: 'updateManyAndReturn',\n  upsert: 'upsertOne',\n  delete: 'deleteOne',\n  deleteMany: 'deleteMany',\n  executeRaw: 'executeRaw',\n  queryRaw: 'queryRaw',\n  aggregate: 'aggregate',\n  groupBy: 'groupBy',\n  runCommandRaw: 'runCommandRaw',\n  findRaw: 'findRaw',\n  aggregateRaw: 'aggregateRaw',\n}\n\nexport type GlobalOmitOptions = {\n  [modelName: string]: {\n    [fieldName: string]: boolean\n  }\n}\n\nexport type SerializeParams = {\n  runtimeDataModel: RuntimeDataModel\n  modelName?: string\n  action: Action\n  args?: JsArgs\n  extensions?: MergedExtensionsList\n  callsite?: CallSite\n  clientMethod: string\n  clientVersion: string\n  errorFormat: ErrorFormat\n  previewFeatures: string[]\n  globalOmit?: GlobalOmitOptions\n}\n\nconst STRICT_UNDEFINED_ERROR_MESSAGE = 'explicitly `undefined` values are not allowed'\n\nexport function serializeJsonQuery({\n  modelName,\n  action,\n  args,\n  runtimeDataModel,\n  extensions = MergedExtensionsList.empty(),\n  callsite,\n  clientMethod,\n  errorFormat,\n  clientVersion,\n  previewFeatures,\n  globalOmit,\n}: SerializeParams): JsonQuery {\n  const context = new SerializeContext({\n    runtimeDataModel,\n    modelName,\n    action,\n    rootArgs: args,\n    callsite,\n    extensions,\n    selectionPath: [],\n    argumentPath: [],\n    originalMethod: clientMethod,\n    errorFormat,\n    clientVersion,\n    previewFeatures,\n    globalOmit,\n  })\n  return {\n    modelName,\n    action: jsActionToProtocolAction[action],\n    query: serializeFieldSelection(args, context),\n  }\n}\n\nfunction serializeFieldSelection(\n  { select, include, ...args }: JsArgs = {},\n  context: SerializeContext,\n): JsonFieldSelection {\n  const omit = args.omit\n  delete args.omit\n  return {\n    arguments: serializeArgumentsObject(args, context),\n    selection: serializeSelectionSet(select, include, omit, context),\n  }\n}\n\nfunction serializeSelectionSet(\n  select: Selection | undefined,\n  include: Selection | undefined,\n  omit: Omission | undefined,\n  context: SerializeContext,\n): JsonSelectionSet {\n  if (select) {\n    if (include) {\n      context.throwValidationError({\n        kind: 'MutuallyExclusiveFields',\n        firstField: 'include',\n        secondField: 'select',\n        selectionPath: context.getSelectionPath(),\n      })\n    } else if (omit) {\n      context.throwValidationError({\n        kind: 'MutuallyExclusiveFields',\n        firstField: 'omit',\n        secondField: 'select',\n        selectionPath: context.getSelectionPath(),\n      })\n    }\n    return createExplicitSelection(select, context)\n  }\n\n  return createImplicitSelection(context, include, omit)\n}\n\nfunction createImplicitSelection(\n  context: SerializeContext,\n  include: Selection | undefined,\n  omit: Omission | undefined,\n) {\n  const selectionSet: JsonSelectionSet = {}\n\n  if (context.modelOrType && !context.isRawAction()) {\n    selectionSet.$composites = true\n    selectionSet.$scalars = true\n  }\n\n  if (include) {\n    addIncludedRelations(selectionSet, include, context)\n  }\n\n  omitFields(selectionSet, omit, context)\n\n  return selectionSet\n}\n\nfunction addIncludedRelations(selectionSet: JsonSelectionSet, include: Selection, context: SerializeContext) {\n  for (const [key, value] of Object.entries(include)) {\n    if (isSkip(value)) {\n      continue\n    }\n    const nestedContext = context.nestSelection(key)\n    validateSelectionForUndefined(value, nestedContext)\n    if (value === false || value === undefined) {\n      selectionSet[key] = false\n      continue\n    }\n\n    const field = context.findField(key)\n    if (field && field.kind !== 'object') {\n      context.throwValidationError({\n        kind: 'IncludeOnScalar',\n        selectionPath: context.getSelectionPath().concat(key),\n        outputType: context.getOutputTypeDescription(),\n      })\n    }\n    if (field) {\n      selectionSet[key] = serializeFieldSelection(value === true ? {} : value, nestedContext)\n      continue\n    }\n\n    if (value === true) {\n      selectionSet[key] = true\n      continue\n    }\n\n    // value is an object, field is unknown\n    // this can either be user error (in that case, qe will respond with an error)\n    // or virtual field not present on datamodel (like `_count`).\n    // Since we don't know which one cast is, we still attempt to serialize selection\n    selectionSet[key] = serializeFieldSelection(value, nestedContext)\n  }\n}\n\nfunction omitFields(selectionSet: JsonSelectionSet, localOmit: Omission | undefined, context: SerializeContext) {\n  const computedFields = context.getComputedFields()\n  const combinedOmits = { ...context.getGlobalOmit(), ...localOmit }\n  const omitWithComputedFields = computeEngineSideOmissions(combinedOmits, computedFields)\n  for (const [key, value] of Object.entries(omitWithComputedFields)) {\n    if (isSkip(value)) {\n      continue\n    }\n    validateSelectionForUndefined(value, context.nestSelection(key))\n    const field = context.findField(key)\n    if (computedFields?.[key] && !field) {\n      continue\n    }\n    selectionSet[key] = !value\n  }\n}\n\nfunction createExplicitSelection(select: Selection, context: SerializeContext) {\n  const selectionSet: JsonSelectionSet = {}\n  const computedFields = context.getComputedFields()\n  const selectWithComputedFields = computeEngineSideSelection(select, computedFields)\n\n  for (const [key, value] of Object.entries(selectWithComputedFields)) {\n    if (isSkip(value)) {\n      continue\n    }\n    const nestedContext = context.nestSelection(key)\n    validateSelectionForUndefined(value, nestedContext)\n    const field = context.findField(key)\n    if (computedFields?.[key] && !field) {\n      continue\n    }\n    if (value === false || value === undefined || isSkip(value)) {\n      selectionSet[key] = false\n      continue\n    }\n    if (value === true) {\n      if (field?.kind === 'object') {\n        selectionSet[key] = serializeFieldSelection({}, nestedContext)\n      } else {\n        selectionSet[key] = true\n      }\n      continue\n    }\n    selectionSet[key] = serializeFieldSelection(value, nestedContext)\n  }\n  return selectionSet\n}\n\nfunction serializeArgumentsValue(\n  jsValue: Exclude<JsInputValue, undefined | Skip>,\n  context: SerializeContext,\n): JsonArgumentValue {\n  if (jsValue === null) {\n    return null\n  }\n\n  if (typeof jsValue === 'string' || typeof jsValue === 'number' || typeof jsValue === 'boolean') {\n    return jsValue\n  }\n\n  if (typeof jsValue === 'bigint') {\n    return { $type: 'BigInt', value: String(jsValue) }\n  }\n\n  if (isDate(jsValue)) {\n    if (isValidDate(jsValue)) {\n      return { $type: 'DateTime', value: jsValue.toISOString() }\n    } else {\n      context.throwValidationError({\n        kind: 'InvalidArgumentValue',\n        selectionPath: context.getSelectionPath(),\n        argumentPath: context.getArgumentPath(),\n        argument: {\n          name: context.getArgumentName(),\n          typeNames: ['Date'],\n        },\n        underlyingError: 'Provided Date object is invalid',\n      })\n    }\n  }\n\n  if (isParam(jsValue)) {\n    return { $type: 'Param', value: jsValue.name }\n  }\n\n  if (isFieldRef(jsValue)) {\n    return { $type: 'FieldRef', value: { _ref: jsValue.name, _container: jsValue.modelName } }\n  }\n\n  if (Array.isArray(jsValue)) {\n    return serializeArgumentsArray(jsValue, context)\n  }\n\n  if (ArrayBuffer.isView(jsValue)) {\n    const { buffer, byteOffset, byteLength } = jsValue\n    return { $type: 'Bytes', value: Buffer.from(buffer, byteOffset, byteLength).toString('base64') }\n  }\n\n  if (isRawParameters(jsValue)) {\n    return jsValue.values\n  }\n\n  if (isDecimalJsLike(jsValue)) {\n    return { $type: 'Decimal', value: jsValue.toFixed() }\n  }\n\n  if (jsValue instanceof ObjectEnumValue) {\n    if (jsValue !== objectEnumValues.instances[jsValue._getName()]) {\n      throw new Error('Invalid ObjectEnumValue')\n    }\n    return { $type: 'Enum', value: jsValue._getName() }\n  }\n\n  if (isJSONConvertible(jsValue)) {\n    return jsValue.toJSON() as JsonArgumentValue\n  }\n\n  if (typeof jsValue === 'object') {\n    return serializeArgumentsObject(jsValue, context)\n  }\n\n  context.throwValidationError({\n    kind: 'InvalidArgumentValue',\n    selectionPath: context.getSelectionPath(),\n    argumentPath: context.getArgumentPath(),\n    argument: {\n      name: context.getArgumentName(),\n      typeNames: [],\n    },\n    underlyingError: `We could not serialize ${Object.prototype.toString.call(\n      jsValue,\n    )} value. Serialize the object to JSON or implement a \".toJSON()\" method on it`,\n  })\n}\n\nfunction serializeArgumentsObject(\n  object: Record<string, JsInputValue>,\n  context: SerializeContext,\n): Record<string, JsonArgumentValue> | RawTaggedValue {\n  if (object['$type']) {\n    return { $type: 'Raw', value: object }\n  }\n  const result: Record<string, JsonArgumentValue> = {}\n  for (const key in object) {\n    const value = object[key]\n    const nestedContext = context.nestArgument(key)\n    if (isSkip(value)) {\n      continue\n    }\n    if (value !== undefined) {\n      result[key] = serializeArgumentsValue(value, nestedContext)\n    } else if (context.isPreviewFeatureOn('strictUndefinedChecks')) {\n      context.throwValidationError({\n        kind: 'InvalidArgumentValue',\n        argumentPath: nestedContext.getArgumentPath(),\n        selectionPath: context.getSelectionPath(),\n        argument: { name: context.getArgumentName(), typeNames: [] },\n        underlyingError: STRICT_UNDEFINED_ERROR_MESSAGE,\n      })\n    }\n  }\n  return result\n}\n\nfunction serializeArgumentsArray(array: JsInputValue[], context: SerializeContext): JsonArgumentValue[] {\n  const result: JsonArgumentValue[] = []\n  for (let i = 0; i < array.length; i++) {\n    const itemContext = context.nestArgument(String(i))\n    const value = array[i]\n    if (value === undefined || isSkip(value)) {\n      const valueName = value === undefined ? 'undefined' : `Prisma.skip`\n      context.throwValidationError({\n        kind: 'InvalidArgumentValue',\n        selectionPath: itemContext.getSelectionPath(),\n        argumentPath: itemContext.getArgumentPath(),\n        argument: {\n          name: `${context.getArgumentName()}[${i}]`,\n          typeNames: [],\n        },\n        underlyingError: `Can not use \\`${valueName}\\` value within array. Use \\`null\\` or filter out \\`${valueName}\\` values`,\n      })\n    }\n    result.push(serializeArgumentsValue(value, itemContext))\n  }\n  return result\n}\n\nfunction isRawParameters(value: JsInputValue): value is RawParameters {\n  return typeof value === 'object' && value !== null && value['__prismaRawParameters__'] === true\n}\n\nfunction isJSONConvertible(value: JsInputValue): value is JsonConvertible {\n  return typeof value === 'object' && value !== null && typeof value['toJSON'] === 'function'\n}\n\nfunction validateSelectionForUndefined(value: unknown, context: SerializeContext) {\n  if (value === undefined && context.isPreviewFeatureOn('strictUndefinedChecks')) {\n    context.throwValidationError({\n      kind: 'InvalidSelectionValue',\n      selectionPath: context.getSelectionPath(),\n      underlyingError: STRICT_UNDEFINED_ERROR_MESSAGE,\n    })\n  }\n}\n\ntype ContextParams = {\n  runtimeDataModel: RuntimeDataModel\n  originalMethod: string\n  rootArgs: JsArgs | undefined\n  extensions: MergedExtensionsList\n  selectionPath: string[]\n  argumentPath: string[]\n  modelName?: string\n  action: Action\n  callsite?: CallSite\n  errorFormat: ErrorFormat\n  clientVersion: string\n  previewFeatures: string[]\n  globalOmit?: GlobalOmitOptions\n}\n\nclass SerializeContext {\n  public readonly modelOrType: RuntimeModel | undefined\n  constructor(private params: ContextParams) {\n    if (this.params.modelName) {\n      // TODO: throw if not found\n      this.modelOrType =\n        this.params.runtimeDataModel.models[this.params.modelName] ??\n        this.params.runtimeDataModel.types[this.params.modelName]\n    }\n  }\n\n  throwValidationError(error: ValidationError): never {\n    throwValidationException({\n      errors: [error],\n      originalMethod: this.params.originalMethod,\n      args: this.params.rootArgs ?? {},\n      callsite: this.params.callsite,\n      errorFormat: this.params.errorFormat,\n      clientVersion: this.params.clientVersion,\n      globalOmit: this.params.globalOmit,\n    })\n  }\n\n  getSelectionPath() {\n    return this.params.selectionPath\n  }\n\n  getArgumentPath() {\n    return this.params.argumentPath\n  }\n\n  getArgumentName() {\n    return this.params.argumentPath[this.params.argumentPath.length - 1]\n  }\n\n  getOutputTypeDescription(): OutputTypeDescription | undefined {\n    if (!this.params.modelName || !this.modelOrType) {\n      return undefined\n    }\n    return {\n      name: this.params.modelName,\n      fields: this.modelOrType.fields.map((field) => ({\n        name: field.name,\n        typeName: 'boolean',\n        isRelation: field.kind === 'object',\n      })),\n    }\n  }\n\n  isRawAction() {\n    return ['executeRaw', 'queryRaw', 'runCommandRaw', 'findRaw', 'aggregateRaw'].includes(this.params.action)\n  }\n\n  isPreviewFeatureOn(previewFeature: string) {\n    return this.params.previewFeatures.includes(previewFeature)\n  }\n\n  getComputedFields() {\n    if (!this.params.modelName) {\n      return undefined\n    }\n\n    return this.params.extensions.getAllComputedFields(this.params.modelName)\n  }\n\n  findField(name: string) {\n    return this.modelOrType?.fields.find((field) => field.name === name)\n  }\n\n  nestSelection(fieldName: string) {\n    const field = this.findField(fieldName)\n    const modelName = field?.kind === 'object' ? field.type : undefined\n\n    return new SerializeContext({\n      ...this.params,\n      modelName,\n      selectionPath: this.params.selectionPath.concat(fieldName),\n    })\n  }\n\n  getGlobalOmit(): Record<string, boolean> {\n    if (this.params.modelName && this.shouldApplyGlobalOmit()) {\n      return this.params.globalOmit?.[uncapitalize(this.params.modelName)] ?? {}\n    }\n    return {}\n  }\n\n  shouldApplyGlobalOmit(): boolean {\n    switch (this.params.action) {\n      case 'findFirst':\n      case 'findFirstOrThrow':\n      case 'findUniqueOrThrow':\n      case 'findMany':\n      case 'upsert':\n      case 'findUnique':\n      case 'createManyAndReturn':\n      case 'create':\n      case 'update':\n      case 'updateManyAndReturn':\n      case 'delete':\n        return true\n      case 'executeRaw':\n      case 'aggregateRaw':\n      case 'runCommandRaw':\n      case 'findRaw':\n      case 'createMany':\n      case 'deleteMany':\n      case 'groupBy':\n      case 'updateMany':\n      case 'count':\n      case 'aggregate':\n      case 'queryRaw':\n        return false\n      default:\n        assertNever(this.params.action, 'Unknown action')\n    }\n  }\n\n  nestArgument(fieldName: string) {\n    return new SerializeContext({\n      ...this.params,\n      argumentPath: this.params.argumentPath.concat(fieldName),\n    })\n  }\n}\n", "export * from './Cache'\nexport * from './casing'\nexport * from './client-config'\nexport * from './Dictionary'\nexport * from './dmmf'\nexport * from './enums'\nexport * from './lazyProperty'\nexport * from './omit'\nexport * from './operations'\nexport * from './QueryCompiler'\nexport * from './QueryEngine'\nexport * from './runtimeDataModel'\nexport * from './uniqueBy'\n", "type CacheEntry<V> = {\n  value: V\n}\nexport class Cache<K, V> {\n  private _map = new Map<K, CacheEntry<V>>()\n\n  get(key: K): V | undefined {\n    return this._map.get(key)?.value\n  }\n\n  set(key: K, value: V): void {\n    this._map.set(key, { value })\n  }\n\n  getOrCreate(key: K, create: () => V): V {\n    const cached = this._map.get(key)\n    if (cached) {\n      return cached.value\n    }\n    const value = create()\n    this.set(key, value)\n    return value\n  }\n}\n", "/**\n * Converts the first character of a word to upper case.\n */\nexport function capitalize<T extends string>(self: T): Capitalize<T> {\n  if (self.length === 0) return self as Capitalize<T>\n\n  return (self[0].toUpperCase() + self.slice(1)) as Capitalize<T>\n}\n\n/**\n * Converts the first character of a word to lower case.\n */\nexport function uncapitalize<T extends string>(self: T): Uncapitalize<T> {\n  return (self.substring(0, 1).toLowerCase() + self.substring(1)) as Uncapitalize<T>\n}\n", "export interface Dictionary<T> {\n  [key: string]: T\n}\n\nexport function keyBy<P extends PropertyKey, T extends { [key in P]: string }>(\n  collection: readonly T[],\n  prop: P,\n): Dictionary<T> {\n  const acc: Dictionary<T> = {}\n\n  for (const obj of collection) {\n    const key = obj[prop]\n    acc[key] = obj\n  }\n\n  return acc\n}\n", "export type LazyProperty<T> = {\n  get: () => T\n}\n\nexport function lazyProperty<T>(compute: () => T): LazyProperty<T> {\n  let resultContainer: undefined | { value: T }\n\n  return {\n    get() {\n      if (resultContainer) {\n        return resultContainer.value\n      }\n      resultContainer = { value: compute() }\n      return resultContainer.value\n    },\n  }\n}\n", "import type * as DMMF from '@prisma/dmmf'\n\nexport type RuntimeModel = Omit<DMMF.Model, 'name'>\nexport type RuntimeEnum = Omit<DMMF.DatamodelEnum, 'name'>\n\nexport type RuntimeDataModel = {\n  readonly models: Record<string, RuntimeModel>\n  readonly enums: Record<string, RuntimeEnum>\n  readonly types: Record<string, RuntimeModel>\n}\n\nexport type PrunedRuntimeModel = {\n  readonly dbName: RuntimeModel['dbName']\n  readonly fields: Pick<RuntimeModel['fields'][number], 'name' | 'kind' | 'type' | 'relationName' | 'dbName'>[]\n}\n\nexport type PrunedRuntimeDataModel = {\n  readonly models: Record<string, PrunedRuntimeModel>\n  readonly enums: {}\n  readonly types: {}\n}\n\nexport function dmmfToRuntimeDataModel(dmmfDataModel: DMMF.Datamodel): RuntimeDataModel {\n  return {\n    models: buildMapForRuntime(dmmfDataModel.models),\n    enums: buildMapForRuntime(dmmfDataModel.enums),\n    types: buildMapForRuntime(dmmfDataModel.types),\n  }\n}\n\n/**\n * Minimal version of the runtime datamodel for the Client to work\n * @param runtimeDataModel\n * @returns\n */\nexport function pruneRuntimeDataModel({ models }: RuntimeDataModel) {\n  const prunedModels: PrunedRuntimeDataModel['models'] = {}\n\n  for (const modelName of Object.keys(models)) {\n    prunedModels[modelName] = { fields: [], dbName: models[modelName].dbName }\n\n    for (const { name, kind, type, relationName, dbName } of models[modelName].fields) {\n      prunedModels[modelName].fields.push({ name, kind, type, relationName, dbName })\n    }\n  }\n\n  return { models: prunedModels, enums: {}, types: {} }\n}\n\nfunction buildMapForRuntime<T extends { name: string }>(list: readonly T[]): Record<string, Omit<T, 'name'>> {\n  const result: Record<string, Omit<T, 'name'>> = {}\n  for (const { name, ...rest } of list) {\n    result[name] = rest\n  }\n  return result\n}\n", "export function isDate(value: unknown): value is Date {\n  return (\n    value instanceof Date ||\n    // date created in other JS context (for example, worker)\n    Object.prototype.toString.call(value) === '[object Date]'\n  )\n}\n\nexport function isValidDate(date: Date) {\n  return date.toString() !== 'Invalid Date'\n}\n", "import { Decimal } from 'decimal.js'\n\nimport { DecimalJsLike } from '../core/types/exported/DecimalJsLike'\n\nexport function isDecimalJsLike(value: unknown): value is DecimalJsLike {\n  if (Decimal.isDecimal(value)) {\n    return true\n  }\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value['s'] === 'number' &&\n    typeof value['e'] === 'number' &&\n    typeof value['toFixed'] === 'function' &&\n    Array.isArray(value['d'])\n  )\n}\n", "import { ErrorFormat } from '../../getPrismaClient'\nimport { CallSite } from '../../utils/CallSite'\nimport { createErrorMessageWithContext } from '../../utils/createErrorMessageWithContext'\nimport { PrismaClientValidationError } from '../errors/PrismaClientValidationError'\nimport { GlobalOmitOptions } from '../jsonProtocol/serializeJsonQuery'\nimport { JsArgs } from '../types/exported/JsApi'\nimport { ValidationError } from '../types/ValidationError'\nimport { applyValidationError } from './applyValidationError'\nimport { buildArgumentsRenderingTree, renderArgsTree } from './ArgumentsRenderingTree'\n\ntype ExceptionParams = {\n  errors: ValidationError[]\n  args: JsArgs\n  callsite?: CallSite\n  originalMethod: string\n  errorFormat: ErrorFormat\n  clientVersion: string\n  globalOmit?: GlobalOmitOptions\n}\n\nexport function throwValidationException({\n  args,\n  errors,\n  errorFormat,\n  callsite,\n  originalMethod,\n  clientVersion,\n  globalOmit,\n}: ExceptionParams): never {\n  const argsTree = buildArgumentsRenderingTree(args)\n  for (const error of errors) {\n    applyValidationError(error, argsTree, globalOmit)\n  }\n\n  const { message, args: renderedArgs } = renderArgsTree(argsTree, errorFormat)\n\n  const messageWithContext = createErrorMessageWithContext({\n    message,\n    callsite,\n    originalMethod,\n    showColors: errorFormat === 'pretty',\n    callArguments: renderedArgs,\n  })\n\n  throw new PrismaClientValidationError(messageWithContext, { clientVersion })\n}\n", "import * as DMMF from '@prisma/dmmf'\nimport indentString from 'indent-string'\nimport { bold, dim, gray, red, underline } from 'kleur/colors'\n\nimport { CallSite, LocationInFile } from './CallSite'\nimport { SourceFileSlice } from './SourceFileSlice'\n\ndeclare global {\n  /**\n   * a global variable that is injected by us via jest to make our snapshots\n   * work in clients that cannot read from disk (e.g. wasm or edge clients)\n   */\n  let $getTemplateParameters: typeof getTemplateParameters | undefined\n}\n\nexport interface ErrorArgs {\n  callsite?: CallSite\n  originalMethod: string\n  message: string\n  isPanic?: boolean\n  showColors?: boolean\n  callArguments?: string\n}\n\ntype Colors = {\n  red: (str: string) => string\n  gray: (str: string) => string\n  dim: (str: string) => string\n  bold: (str: string) => string\n  underline: (str: string) => string\n  highlightSource: (source: SourceFileSlice) => SourceFileSlice\n}\n\nconst colorsEnabled: Colors = {\n  red,\n  gray,\n  dim,\n  bold,\n  underline,\n  highlightSource: (source) => source.highlight(),\n}\n\nconst colorsDisabled: Colors = {\n  red: (str) => str,\n  gray: (str) => str,\n  dim: (str) => str,\n  bold: (str) => str,\n  underline: (str) => str,\n  highlightSource: (source) => source,\n}\n\ntype ErrorContextTemplateParameters = {\n  functionName: string\n  message: string\n  location?: LocationInFile\n  contextLines?: SourceFileSlice\n  callArguments?: string\n  isPanic: boolean\n}\n\nfunction getRawTemplateParameters({\n  message,\n  originalMethod,\n  isPanic,\n  callArguments,\n}: ErrorArgs): ErrorContextTemplateParameters {\n  return {\n    functionName: `prisma.${originalMethod}()`,\n    message,\n    isPanic: isPanic ?? false,\n    callArguments,\n  }\n}\n\nexport function getTemplateParameters(\n  { callsite, message, originalMethod, isPanic, callArguments }: ErrorArgs,\n  colors: Colors,\n): ErrorContextTemplateParameters {\n  const templateParameters = getRawTemplateParameters({ message, originalMethod, isPanic, callArguments })\n\n  // @ts-ignore\n  if (!callsite || typeof window !== 'undefined') {\n    return templateParameters\n  }\n\n  if (process.env.NODE_ENV === 'production') {\n    return templateParameters\n  }\n\n  const callLocation = callsite.getLocation()\n  if (!callLocation || !callLocation.lineNumber || !callLocation.columnNumber) {\n    return templateParameters\n  }\n\n  const contextFirstLine = Math.max(1, callLocation.lineNumber - 3)\n  let source = SourceFileSlice.read(callLocation.fileName)?.slice(contextFirstLine, callLocation.lineNumber)\n  const invocationLine = source?.lineAt(callLocation.lineNumber)\n  if (source && invocationLine) {\n    const invocationLineIndent = getIndent(invocationLine)\n    const invocationCallCode = findPrismaActionCall(invocationLine)\n    if (!invocationCallCode) {\n      return templateParameters\n    }\n    templateParameters.functionName = `${invocationCallCode.code})`\n    templateParameters.location = callLocation\n\n    if (!isPanic) {\n      source = source.mapLineAt(callLocation.lineNumber, (line) => line.slice(0, invocationCallCode.openingBraceIndex))\n    }\n\n    source = colors.highlightSource(source)\n    const numberColumnWidth = String(source.lastLineNumber).length\n    templateParameters.contextLines = source\n      .mapLines((line, lineNumber) => colors.gray(String(lineNumber).padStart(numberColumnWidth)) + ' ' + line)\n      .mapLines((line) => colors.dim(line))\n      .prependSymbolAt(callLocation.lineNumber, colors.bold(colors.red('\u2192')))\n\n    if (callArguments) {\n      let indentValue = invocationLineIndent + numberColumnWidth + 1 /* space between number and code */\n      indentValue += 2 // arrow + space between arrow and number\n\n      // indent all lines but first, because first line of the arguments will be printed\n      // on the same line as the function call\n      templateParameters.callArguments = indentString(callArguments, indentValue).slice(indentValue)\n    }\n  }\n  return templateParameters\n}\n\nfunction findPrismaActionCall(str: string): { code: string; openingBraceIndex: number } | null {\n  const allActions = Object.keys(DMMF.ModelAction).join('|')\n  const regexp = new RegExp(String.raw`\\.(${allActions})\\(`)\n  const match = regexp.exec(str)\n  if (match) {\n    const openingBraceIndex = match.index + match[0].length\n    // to get the code we are slicing the string up to a found brace. We start\n    // with first non-space character if space is found in the line before that or\n    // 0 if it is not.\n    const statementStart = str.lastIndexOf(' ', match.index) + 1\n    return {\n      code: str.slice(statementStart, openingBraceIndex),\n      openingBraceIndex,\n    }\n  }\n  return null\n}\n\nfunction getIndent(line: string): number {\n  let spaceCount = 0\n  for (let i = 0; i < line.length; i++) {\n    if (line.charAt(i) !== ' ') {\n      return spaceCount\n    }\n    spaceCount++\n  }\n\n  return spaceCount\n}\n\nfunction stringifyErrorMessage(\n  { functionName, location, message, isPanic, contextLines, callArguments }: ErrorContextTemplateParameters,\n  colors: Colors,\n) {\n  const lines: string[] = ['']\n\n  const introSuffix = location ? ' in' : ':'\n  if (isPanic) {\n    lines.push(colors.red(`Oops, an unknown error occurred! This is ${colors.bold('on us')}, you did nothing wrong.`))\n    lines.push(colors.red(`It occurred in the ${colors.bold(`\\`${functionName}\\``)} invocation${introSuffix}`))\n  } else {\n    lines.push(colors.red(`Invalid ${colors.bold(`\\`${functionName}\\``)} invocation${introSuffix}`))\n  }\n\n  if (location) {\n    lines.push(colors.underline(stringifyLocationInFile(location)))\n  }\n\n  if (contextLines) {\n    lines.push('')\n\n    const contextLineParts = [contextLines.toString()]\n\n    if (callArguments) {\n      contextLineParts.push(callArguments)\n      contextLineParts.push(colors.dim(')'))\n    }\n    lines.push(contextLineParts.join(''))\n    if (callArguments) {\n      lines.push('')\n    }\n  } else {\n    lines.push('')\n    if (callArguments) {\n      lines.push(callArguments)\n    }\n    lines.push('')\n  }\n\n  lines.push(message)\n  return lines.join('\\n')\n}\n\nfunction stringifyLocationInFile(location: LocationInFile): string {\n  const parts = [location.fileName]\n  if (location.lineNumber) {\n    parts.push(String(location.lineNumber))\n  }\n\n  if (location.columnNumber) {\n    parts.push(String(location.columnNumber))\n  }\n\n  return parts.join(':')\n}\n\nexport function createErrorMessageWithContext(args: ErrorArgs): string {\n  const colors = args.showColors ? colorsEnabled : colorsDisabled\n  let templateParameters: ErrorContextTemplateParameters\n\n  if (\n    TARGET_BUILD_TYPE === 'wasm-engine-edge' ||\n    TARGET_BUILD_TYPE === 'wasm-compiler-edge' ||\n    TARGET_BUILD_TYPE === 'edge'\n  ) {\n    if (typeof $getTemplateParameters !== 'undefined') {\n      templateParameters = $getTemplateParameters(args, colors)\n    } else {\n      templateParameters = getRawTemplateParameters(args)\n    }\n  } else {\n    templateParameters = getTemplateParameters(args, colors)\n  }\n\n  return stringifyErrorMessage(templateParameters, colors)\n}\n", "export * from './convert'\nexport * from './dmmf'\n", "import { DatamodelEnum, SchemaEnum } from './dmmf'\n\nexport function datamodelEnumToSchemaEnum(datamodelEnum: DatamodelEnum): SchemaEnum {\n  return {\n    name: datamodelEnum.name,\n    values: datamodelEnum.values.map((v) => v.name),\n  }\n}\n", "import { ReadonlyDeep } from './util'\n\nexport type Document = ReadonlyDeep<{\n  datamodel: Datamodel\n  schema: Schema\n  mappings: Mappings\n}>\n\nexport type Mappings = ReadonlyDeep<{\n  modelOperations: ModelMapping[]\n  otherOperations: {\n    read: string[]\n    write: string[]\n  }\n}>\n\nexport type OtherOperationMappings = ReadonlyDeep<{\n  read: string[]\n  write: string[]\n}>\n\nexport type DatamodelEnum = ReadonlyDeep<{\n  name: string\n  values: EnumValue[]\n  dbName?: string | null\n  documentation?: string\n}>\n\nexport type SchemaEnum = ReadonlyDeep<{\n  name: string\n  values: string[]\n}>\n\nexport type EnumValue = ReadonlyDeep<{\n  name: string\n  dbName: string | null\n}>\n\nexport type Datamodel = ReadonlyDeep<{\n  models: Model[]\n  enums: DatamodelEnum[]\n  types: Model[]\n  indexes: Index[]\n}>\n\nexport type uniqueIndex = ReadonlyDeep<{\n  name: string\n  fields: string[]\n}>\nexport type PrimaryKey = ReadonlyDeep<{\n  name: string | null\n  fields: string[]\n}>\nexport type Model = ReadonlyDeep<{\n  name: string\n  dbName: string | null\n  schema: string | null\n  fields: Field[]\n  uniqueFields: string[][]\n  uniqueIndexes: uniqueIndex[]\n  documentation?: string\n  primaryKey: PrimaryKey | null\n  isGenerated?: boolean\n}>\n\nexport type FieldKind = 'scalar' | 'object' | 'enum' | 'unsupported'\n\nexport type FieldNamespace = 'model' | 'prisma'\nexport type FieldLocation = 'scalar' | 'inputObjectTypes' | 'outputObjectTypes' | 'enumTypes' | 'fieldRefTypes'\n\nexport type Field = ReadonlyDeep<{\n  kind: FieldKind\n  name: string\n  isRequired: boolean\n  isList: boolean\n  isUnique: boolean\n  isId: boolean\n  isReadOnly: boolean\n  isGenerated?: boolean // does not exist on 'type' but does on 'model'\n  isUpdatedAt?: boolean // does not exist on 'type' but does on 'model'\n  /**\n   * Describes the data type in the same the way it is defined in the Prisma schema:\n   * BigInt, Boolean, Bytes, DateTime, Decimal, Float, Int, JSON, String, $ModelName\n   */\n  type: string\n  /**\n   * Native database type, if specified.\n   * For example, `@db.VarChar(191)` is encoded as `['VarChar', ['191']]`,\n   * `@db.Text` is encoded as `['Text', []]`.\n   */\n  nativeType?: [string, string[]] | null\n  dbName?: string | null\n  hasDefaultValue: boolean\n  default?: FieldDefault | FieldDefaultScalar | FieldDefaultScalar[]\n  relationFromFields?: string[]\n  relationToFields?: string[]\n  relationOnDelete?: string\n  relationOnUpdate?: string\n  relationName?: string\n  documentation?: string\n}>\n\nexport type FieldDefault = ReadonlyDeep<{\n  name: string\n  args: Array<string | number>\n}>\n\nexport type FieldDefaultScalar = string | boolean | number\n\nexport type Index = ReadonlyDeep<{\n  model: string\n  type: IndexType\n  isDefinedOnField: boolean\n  name?: string\n  dbName?: string\n  algorithm?: string\n  clustered?: boolean\n  fields: IndexField[]\n}>\n\nexport type IndexType = 'id' | 'normal' | 'unique' | 'fulltext'\n\nexport type IndexField = ReadonlyDeep<{\n  name: string\n  sortOrder?: SortOrder\n  length?: number\n  operatorClass?: string\n}>\n\nexport type SortOrder = 'asc' | 'desc'\n\nexport type Schema = ReadonlyDeep<{\n  rootQueryType?: string\n  rootMutationType?: string\n  inputObjectTypes: {\n    // For now there are no `model` InputTypes\n    model?: InputType[]\n    prisma: InputType[]\n  }\n  outputObjectTypes: {\n    model: OutputType[]\n    prisma: OutputType[]\n  }\n  enumTypes: {\n    model?: SchemaEnum[]\n    prisma: SchemaEnum[]\n  }\n  fieldRefTypes: {\n    prisma?: FieldRefType[]\n  }\n}>\n\nexport type Query = ReadonlyDeep<{\n  name: string\n  args: SchemaArg[]\n  output: QueryOutput\n}>\n\nexport type QueryOutput = ReadonlyDeep<{\n  name: string\n  isRequired: boolean\n  isList: boolean\n}>\n\nexport type TypeRef<AllowedLocations extends FieldLocation> = {\n  isList: boolean\n  type: string\n  location: AllowedLocations\n  namespace?: FieldNamespace\n}\n\nexport type InputTypeRef = TypeRef<'scalar' | 'inputObjectTypes' | 'enumTypes' | 'fieldRefTypes'>\n\nexport type SchemaArg = ReadonlyDeep<{\n  name: string\n  comment?: string\n  isNullable: boolean\n  isRequired: boolean\n  inputTypes: InputTypeRef[]\n  deprecation?: Deprecation\n}>\n\nexport type OutputType = ReadonlyDeep<{\n  name: string\n  fields: SchemaField[]\n}>\n\nexport type SchemaField = ReadonlyDeep<{\n  name: string\n  isNullable?: boolean\n  outputType: OutputTypeRef\n  args: SchemaArg[]\n  deprecation?: Deprecation\n  documentation?: string\n}>\n\nexport type OutputTypeRef = TypeRef<'scalar' | 'outputObjectTypes' | 'enumTypes'>\n\nexport type Deprecation = ReadonlyDeep<{\n  sinceVersion: string\n  reason: string\n  plannedRemovalVersion?: string\n}>\n\nexport type InputType = ReadonlyDeep<{\n  name: string\n  constraints: {\n    maxNumFields: number | null\n    minNumFields: number | null\n    fields?: string[]\n  }\n  meta?: {\n    source?: string\n    grouping?: string\n  }\n  fields: SchemaArg[]\n}>\n\nexport type FieldRefType = ReadonlyDeep<{\n  name: string\n  allowTypes: FieldRefAllowType[]\n  fields: SchemaArg[]\n}>\n\nexport type FieldRefAllowType = TypeRef<'scalar' | 'enumTypes'>\n\nexport type ModelMapping = ReadonlyDeep<{\n  model: string\n  plural: string\n  findUnique?: string | null\n  findUniqueOrThrow?: string | null\n  findFirst?: string | null\n  findFirstOrThrow?: string | null\n  findMany?: string | null\n  create?: string | null\n  createMany?: string | null\n  createManyAndReturn?: string | null\n  update?: string | null\n  updateMany?: string | null\n  updateManyAndReturn?: string | null\n  upsert?: string | null\n  delete?: string | null\n  deleteMany?: string | null\n  aggregate?: string | null\n  groupBy?: string | null\n  count?: string | null\n  findRaw?: string | null\n  aggregateRaw?: string | null\n}>\n\nexport enum ModelAction {\n  findUnique = 'findUnique',\n  findUniqueOrThrow = 'findUniqueOrThrow',\n  findFirst = 'findFirst',\n  findFirstOrThrow = 'findFirstOrThrow',\n  findMany = 'findMany',\n  create = 'create',\n  createMany = 'createMany',\n  createManyAndReturn = 'createManyAndReturn',\n  update = 'update',\n  updateMany = 'updateMany',\n  updateManyAndReturn = 'updateManyAndReturn',\n  upsert = 'upsert',\n  delete = 'delete',\n  deleteMany = 'deleteMany',\n  groupBy = 'groupBy',\n  count = 'count', // TODO: count does not actually exist in DMMF\n  aggregate = 'aggregate',\n  findRaw = 'findRaw',\n  aggregateRaw = 'aggregateRaw',\n}\n", "import { uncapitalize } from '@prisma/client-common'\nimport levenshtein from 'js-levenshtein'\n\nimport {\n  ArgumentDescription,\n  EmptySelectionError,\n  InputTypeDescription,\n  InvalidArgumentTypeError,\n  InvalidArgumentValueError,\n  OutputTypeDescription,\n  RequiredArgumentMissingError,\n  SomeFieldsMissingError,\n  TooManyFieldsGivenError,\n  UnknownArgumentError,\n  UnknownInputFieldError,\n  UnknownSelectionFieldError,\n  ValueTooLargeError,\n} from '../engines'\nimport { GlobalOmitOptions } from '../jsonProtocol/serializeJsonQuery'\nimport {\n  IncludeOnScalarError,\n  InvalidSelectionValueError,\n  MutuallyExclusiveFieldsError,\n  ValidationError,\n} from '../types/ValidationError'\nimport { applyUnionError } from './applyUnionError'\nimport { ArgumentsRenderingTree } from './ArgumentsRenderingTree'\nimport { Colors } from './base'\nimport { ObjectField } from './ObjectField'\nimport { ObjectFieldSuggestion } from './ObjectFieldSuggestion'\nimport { ObjectValue } from './ObjectValue'\nimport { ScalarValue } from './ScalarValue'\nimport { SuggestionObjectValue } from './SuggestionObjectValue'\n\n/**\n * Given the validation error and arguments rendering tree, applies corresponding\n * formatting to an error tree and adds all relevant messages.\n *\n * @param error\n * @param args\n */\nexport function applyValidationError(\n  error: ValidationError,\n  args: ArgumentsRenderingTree,\n  globalOmit?: GlobalOmitOptions,\n): void {\n  switch (error.kind) {\n    case 'MutuallyExclusiveFields':\n      applyMutuallyExclusiveFieldsError(error, args)\n      break\n    case 'IncludeOnScalar':\n      applyIncludeOnScalarError(error, args)\n      break\n    case 'EmptySelection':\n      applyEmptySelectionError(error, args, globalOmit)\n      break\n    case 'UnknownSelectionField':\n      applyUnknownSelectionFieldError(error, args)\n      break\n    case 'InvalidSelectionValue':\n      applyInvalidSelectionValueError(error, args)\n      break\n    case 'UnknownArgument':\n      applyUnknownArgumentError(error, args)\n      break\n    case 'UnknownInputField':\n      applyUnknownInputFieldError(error, args)\n      break\n    case 'RequiredArgumentMissing':\n      applyRequiredArgumentMissingError(error, args)\n      break\n    case 'InvalidArgumentType':\n      applyInvalidArgumentTypeError(error, args)\n      break\n    case 'InvalidArgumentValue':\n      applyInvalidArgumentValueError(error, args)\n      break\n    case 'ValueTooLarge':\n      applyValueTooLargeError(error, args)\n      break\n    case 'SomeFieldsMissing':\n      applySomeFieldsMissingError(error, args)\n      break\n    case 'TooManyFieldsGiven':\n      applyTooManyFieldsGivenError(error, args)\n      break\n    case 'Union':\n      applyUnionError(error, args, globalOmit)\n      break\n    default:\n      throw new Error('not implemented: ' + error.kind)\n  }\n}\n\nfunction applyMutuallyExclusiveFieldsError(error: MutuallyExclusiveFieldsError, argsTree: ArgumentsRenderingTree) {\n  const object = argsTree.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n  if (object) {\n    object.getField(error.firstField)?.markAsError()\n    object.getField(error.secondField)?.markAsError()\n  }\n\n  argsTree.addErrorMessage(\n    (colors) =>\n      `Please ${colors.bold('either')} use ${colors.green(`\\`${error.firstField}\\``)} or ${colors.green(\n        `\\`${error.secondField}\\``,\n      )}, but ${colors.red('not both')} at the same time.`,\n  )\n}\n\nfunction applyIncludeOnScalarError(error: IncludeOnScalarError, argsTree: ArgumentsRenderingTree) {\n  const [selectionPath, field] = splitPath(error.selectionPath)\n  const outputType = error.outputType\n\n  const object = argsTree.arguments.getDeepSelectionParent(selectionPath)?.value\n  if (object) {\n    object.getField(field)?.markAsError()\n\n    if (outputType) {\n      for (const field of outputType.fields) {\n        if (field.isRelation) {\n          object.addSuggestion(new ObjectFieldSuggestion(field.name, 'true'))\n        }\n      }\n    }\n  }\n\n  argsTree.addErrorMessage((colors) => {\n    let msg = `Invalid scalar field ${colors.red(`\\`${field}\\``)} for ${colors.bold('include')} statement`\n    if (outputType) {\n      msg += ` on model ${colors.bold(outputType.name)}. ${availableOptionsMessage(colors)}`\n    } else {\n      msg += '.'\n    }\n\n    msg += `\\nNote that ${colors.bold('include')} statements only accept relation fields.`\n    return msg\n  })\n}\n\nfunction applyEmptySelectionError(\n  error: EmptySelectionError,\n  argsTree: ArgumentsRenderingTree,\n  globalOmit?: GlobalOmitOptions,\n) {\n  const subSelection = argsTree.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n  if (subSelection) {\n    const omit = subSelection.getField('omit')?.value.asObject()\n    if (omit) {\n      applyEmptySelectionErrorOmit(error, argsTree, omit)\n      return\n    }\n    if (subSelection.hasField('select')) {\n      applyEmptySelectionErrorSelect(error, argsTree)\n      return\n    }\n  }\n\n  if (globalOmit?.[uncapitalize(error.outputType.name)]) {\n    applyEmptySelectionErrorGlobalOmit(error, argsTree)\n    return\n  }\n\n  // should never happen, but in case it does\n  argsTree.addErrorMessage(() => `Unknown field at \"${error.selectionPath.join('.')} selection\"`)\n}\n\n// case for `EmptySelectionError`, triggered by excessive omit\nfunction applyEmptySelectionErrorOmit(\n  error: EmptySelectionError,\n  argsTree: ArgumentsRenderingTree,\n  omitValue: ObjectValue,\n) {\n  omitValue.removeAllFields()\n  for (const field of error.outputType.fields) {\n    omitValue.addSuggestion(new ObjectFieldSuggestion(field.name, 'false'))\n  }\n\n  argsTree.addErrorMessage((colors) => {\n    return `The ${colors.red('omit')} statement includes every field of the model ${colors.bold(\n      error.outputType.name,\n    )}. At least one field must be included in the result`\n  })\n}\n\n// case for `EmptySelectionError`, triggered by empty/falsy `select`\nfunction applyEmptySelectionErrorSelect(error: EmptySelectionError, argsTree: ArgumentsRenderingTree) {\n  const outputType = error.outputType\n  const selection = argsTree.arguments.getDeepSelectionParent(error.selectionPath)?.value\n  const isEmpty = selection?.isEmpty() ?? false\n\n  if (selection) {\n    // If selection has fields and we get EmptySelection error, it means all fields within the\n    // selection are false. We have 2 possible ways to handle suggestions here:\n    //\n    // 1. Suggest only the fields, not present inside of the selection. Example:\n    //\n    // {\n    //   select: {\n    //     id: false\n    //     posts: false,\n    // ?   name?: true\n    // ?   email?: true\n    //  }\n    // }\n    // There are couple of possible problems here. First, we are assuming that user needs to\n    // add new field to the selection, rather than change one of the existing ones to true.\n    // Second, we might end up in a situation where all fields are already used in selection and we have nothing left to suggest.\n    //\n    // 2.Completely ignore users input and suggest all the fields. Example rendering:\n    // {\n    //  select: {\n    //  ?   id?: true\n    //  ?   posts?: true,\n    //  ?   name?: true\n    //  ?   email?: true\n    //   }\n    //  }\n    //\n    // So we will be suggesting to either change one of the fields to true, or add a new one which would be true.\n    // This is the approach we are taking and in order to it, we need to remove all the fields from selection. Code\n    // below will then add them back as a suggestion.\n    selection.removeAllFields()\n    addSelectionSuggestions(selection, outputType)\n  }\n\n  argsTree.addErrorMessage((colors) => {\n    if (isEmpty) {\n      return `The ${colors.red('`select`')} statement for type ${colors.bold(\n        outputType.name,\n      )} must not be empty. ${availableOptionsMessage(colors)}`\n    }\n    return `The ${colors.red('`select`')} statement for type ${colors.bold(outputType.name)} needs ${colors.bold(\n      'at least one truthy value',\n    )}.`\n  })\n}\n\n// case for `EmptySelectionError`, triggered by excessive global omit\nfunction applyEmptySelectionErrorGlobalOmit(error: EmptySelectionError, argsTree: ArgumentsRenderingTree) {\n  const suggestedOmitConfig = new SuggestionObjectValue()\n  for (const field of error.outputType.fields) {\n    if (!field.isRelation) {\n      suggestedOmitConfig.addField(field.name, 'false')\n    }\n  }\n\n  const omitSuggestion = new ObjectFieldSuggestion('omit', suggestedOmitConfig).makeRequired()\n\n  if (error.selectionPath.length === 0) {\n    argsTree.arguments.addSuggestion(omitSuggestion)\n  } else {\n    const [parentPath, fieldName] = splitPath(error.selectionPath)\n    const parent = argsTree.arguments.getDeepSelectionParent(parentPath)?.value.asObject()\n    const field = parent?.getField(fieldName)\n    if (field) {\n      const fieldValue = field?.value.asObject() ?? new ObjectValue()\n      fieldValue.addSuggestion(omitSuggestion)\n      field.value = fieldValue\n    }\n  }\n\n  // neither select, nor omit are used, but global omit global omit configuration for the model exists\n  argsTree.addErrorMessage((colors) => {\n    return `The global ${colors.red('omit')} configuration excludes every field of the model ${colors.bold(\n      error.outputType.name,\n    )}. At least one field must be included in the result`\n  })\n}\n\nfunction applyUnknownSelectionFieldError(error: UnknownSelectionFieldError, argsTree: ArgumentsRenderingTree) {\n  const locateResult = locateSelectionField(error.selectionPath, argsTree)\n  if (locateResult.parentKind !== 'unknown') {\n    locateResult.field.markAsError()\n    const parent = locateResult.parent\n    switch (locateResult.parentKind) {\n      case 'select':\n        addSelectionSuggestions(parent, error.outputType)\n        break\n      case 'include':\n        addInclusionSuggestions(parent, error.outputType)\n        break\n      case 'omit':\n        addOmissionSuggestions(parent, error.outputType)\n        break\n    }\n  }\n  argsTree.addErrorMessage((colors) => {\n    const parts = [`Unknown field ${colors.red(`\\`${locateResult.fieldName}\\``)}`]\n    if (locateResult.parentKind !== 'unknown') {\n      parts.push(`for ${colors.bold(locateResult.parentKind)} statement`)\n    }\n    parts.push(`on model ${colors.bold(`\\`${error.outputType.name}\\``)}.`)\n    parts.push(availableOptionsMessage(colors))\n    return parts.join(' ')\n  })\n}\n\nfunction applyInvalidSelectionValueError(error: InvalidSelectionValueError, argsTree: ArgumentsRenderingTree) {\n  const locateResult = locateSelectionField(error.selectionPath, argsTree)\n  if (locateResult.parentKind !== 'unknown') {\n    locateResult.field.value.markAsError()\n  }\n\n  argsTree.addErrorMessage((colors) => {\n    return `Invalid value for selection field \\`${colors.red(locateResult.fieldName)}\\`: ${error.underlyingError}`\n  })\n}\n\nfunction applyUnknownArgumentError(error: UnknownArgumentError, argsTree: ArgumentsRenderingTree) {\n  const argName = error.argumentPath[0]\n  const selection = argsTree.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n\n  if (selection) {\n    selection.getField(argName)?.markAsError()\n    addArgumentsSuggestions(selection, error.arguments)\n  }\n\n  argsTree.addErrorMessage((colors) =>\n    unknownArgumentMessage(\n      colors,\n      argName,\n      error.arguments.map((arg) => arg.name),\n    ),\n  )\n}\n\nfunction applyUnknownInputFieldError(error: UnknownInputFieldError, argsTree: ArgumentsRenderingTree) {\n  const [argParentPath, argName] = splitPath(error.argumentPath)\n  const selection = argsTree.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n\n  if (selection) {\n    selection.getDeepField(error.argumentPath)?.markAsError()\n    const argParent = selection.getDeepFieldValue(argParentPath)?.asObject()\n    if (argParent) {\n      addInputSuggestions(argParent, error.inputType)\n    }\n  }\n\n  argsTree.addErrorMessage((colors) =>\n    unknownArgumentMessage(\n      colors,\n      argName,\n      error.inputType.fields.map((f) => f.name),\n    ),\n  )\n}\n\nfunction unknownArgumentMessage(colors: Colors, argName: string, options: string[]) {\n  const parts = [`Unknown argument \\`${colors.red(argName)}\\`.`]\n  const suggestion = getSuggestion(argName, options)\n\n  if (suggestion) {\n    parts.push(`Did you mean \\`${colors.green(suggestion)}\\`?`)\n  }\n\n  if (options.length > 0) {\n    parts.push(availableOptionsMessage(colors))\n  }\n\n  return parts.join(' ')\n}\n\nfunction applyRequiredArgumentMissingError(error: RequiredArgumentMissingError, args: ArgumentsRenderingTree) {\n  let existingField: ObjectField | undefined = undefined\n\n  args.addErrorMessage((colors) => {\n    if (existingField?.value instanceof ScalarValue && existingField.value.text === 'null') {\n      return `Argument \\`${colors.green(argumentName)}\\` must not be ${colors.red('null')}.`\n    }\n    return `Argument \\`${colors.green(argumentName)}\\` is missing.`\n  })\n  const selection = args.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n  if (!selection) {\n    return\n  }\n\n  const [argParent, argumentName] = splitPath(error.argumentPath)\n  const objectSuggestion = new SuggestionObjectValue()\n  const parent = selection.getDeepFieldValue(argParent)?.asObject()\n  if (!parent) {\n    return\n  }\n\n  existingField = parent.getField(argumentName)\n  if (existingField) {\n    parent.removeField(argumentName)\n  }\n\n  if (error.inputTypes.length === 1 && error.inputTypes[0].kind === 'object') {\n    for (const field of error.inputTypes[0].fields) {\n      objectSuggestion.addField(field.name, field.typeNames.join(' | '))\n    }\n\n    parent.addSuggestion(new ObjectFieldSuggestion(argumentName, objectSuggestion).makeRequired())\n  } else {\n    const typeName = error.inputTypes.map(getInputTypeName).join(' | ')\n    parent.addSuggestion(new ObjectFieldSuggestion(argumentName, typeName).makeRequired())\n  }\n}\n\nfunction getInputTypeName(description: InputTypeDescription) {\n  if (description.kind === 'list') {\n    return `${getInputTypeName(description.elementType)}[]`\n  }\n  return description.name\n}\n\nfunction applyInvalidArgumentTypeError(error: InvalidArgumentTypeError, args: ArgumentsRenderingTree) {\n  const argName = error.argument.name\n  const selection = args.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n  if (selection) {\n    selection.getDeepFieldValue(error.argumentPath)?.markAsError()\n  }\n\n  args.addErrorMessage((colors) => {\n    const expected = joinWithPreposition(\n      'or',\n      error.argument.typeNames.map((type) => colors.green(type)),\n    )\n    // TODO: print value\n    return `Argument \\`${colors.bold(argName)}\\`: Invalid value provided. Expected ${expected}, provided ${colors.red(\n      error.inferredType,\n    )}.`\n  })\n}\n\nfunction applyInvalidArgumentValueError(error: InvalidArgumentValueError, args: ArgumentsRenderingTree) {\n  const argName = error.argument.name\n  const selection = args.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n  if (selection) {\n    selection.getDeepFieldValue(error.argumentPath)?.markAsError()\n  }\n\n  args.addErrorMessage((colors) => {\n    const parts = [`Invalid value for argument \\`${colors.bold(argName)}\\``]\n    if (error.underlyingError) {\n      parts.push(`: ${error.underlyingError}`)\n    }\n    parts.push('.')\n    if (error.argument.typeNames.length > 0) {\n      const expected = joinWithPreposition(\n        'or',\n        error.argument.typeNames.map((type) => colors.green(type)),\n      )\n      parts.push(` Expected ${expected}.`)\n    }\n    return parts.join('')\n  })\n}\n\nfunction applyValueTooLargeError(error: ValueTooLargeError, args: ArgumentsRenderingTree) {\n  const argName = error.argument.name\n  const selection = args.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n  let printedValue: string | undefined\n  if (selection) {\n    const field = selection.getDeepField(error.argumentPath)\n    const value = field?.value\n    value?.markAsError()\n    if (value instanceof ScalarValue) {\n      printedValue = value.text\n    }\n  }\n\n  args.addErrorMessage((colors) => {\n    const parts: string[] = ['Unable to fit value']\n    if (printedValue) {\n      parts.push(colors.red(printedValue))\n    }\n    parts.push(`into a 64-bit signed integer for field \\`${colors.bold(argName)}\\``)\n\n    return parts.join(' ')\n  })\n}\n\nfunction applySomeFieldsMissingError(error: SomeFieldsMissingError, args: ArgumentsRenderingTree) {\n  const argumentName = error.argumentPath[error.argumentPath.length - 1]\n  const selection = args.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n  if (selection) {\n    const argument = selection.getDeepFieldValue(error.argumentPath)?.asObject()\n    if (argument) {\n      addInputSuggestions(argument, error.inputType)\n    }\n  }\n\n  args.addErrorMessage((colors) => {\n    const parts = [`Argument \\`${colors.bold(argumentName)}\\` of type ${colors.bold(error.inputType.name)} needs`]\n    if (error.constraints.minFieldCount === 1) {\n      if (error.constraints.requiredFields) {\n        parts.push(\n          `${colors.green('at least one of')} ${joinWithPreposition(\n            'or',\n            error.constraints.requiredFields.map((f) => `\\`${colors.bold(f)}\\``),\n          )} arguments.`,\n        )\n      } else {\n        parts.push(`${colors.green('at least one')} argument.`)\n      }\n    } else {\n      parts.push(`${colors.green(`at least ${error.constraints.minFieldCount}`)} arguments.`)\n    }\n    parts.push(availableOptionsMessage(colors))\n    return parts.join(' ')\n  })\n}\n\nfunction applyTooManyFieldsGivenError(error: TooManyFieldsGivenError, args: ArgumentsRenderingTree) {\n  const argumentName = error.argumentPath[error.argumentPath.length - 1]\n  const selection = args.arguments.getDeepSubSelectionValue(error.selectionPath)?.asObject()\n  let providedArguments: string[] = []\n  if (selection) {\n    const argument = selection.getDeepFieldValue(error.argumentPath)?.asObject()\n    if (argument) {\n      argument.markAsError()\n      providedArguments = Object.keys(argument.getFields())\n    }\n  }\n\n  args.addErrorMessage((colors) => {\n    const parts = [`Argument \\`${colors.bold(argumentName)}\\` of type ${colors.bold(error.inputType.name)} needs`]\n    if (error.constraints.minFieldCount === 1 && error.constraints.maxFieldCount == 1) {\n      parts.push(`${colors.green('exactly one')} argument,`)\n    } else if (error.constraints.maxFieldCount == 1) {\n      parts.push(`${colors.green('at most one')} argument,`)\n    } else {\n      parts.push(`${colors.green(`at most ${error.constraints.maxFieldCount}`)} arguments,`)\n    }\n\n    parts.push(\n      `but you provided ${joinWithPreposition(\n        'and',\n        providedArguments.map((arg) => colors.red(arg)),\n      )}. Please choose`,\n    )\n\n    if (error.constraints.maxFieldCount === 1) {\n      parts.push('one.')\n    } else {\n      parts.push(`${error.constraints.maxFieldCount}.`)\n    }\n\n    return parts.join(' ')\n  })\n}\n\nfunction addSelectionSuggestions(selection: ObjectValue, outputType: OutputTypeDescription) {\n  for (const field of outputType.fields) {\n    if (!selection.hasField(field.name)) {\n      selection.addSuggestion(new ObjectFieldSuggestion(field.name, 'true'))\n    }\n  }\n}\n\nfunction addInclusionSuggestions(selection: ObjectValue, outputType: OutputTypeDescription) {\n  for (const field of outputType.fields) {\n    if (field.isRelation && !selection.hasField(field.name)) {\n      selection.addSuggestion(new ObjectFieldSuggestion(field.name, 'true'))\n    }\n  }\n}\n\nfunction addOmissionSuggestions(selection: ObjectValue, outputType: OutputTypeDescription) {\n  for (const field of outputType.fields) {\n    if (!selection.hasField(field.name) && !field.isRelation) {\n      selection.addSuggestion(new ObjectFieldSuggestion(field.name, 'true'))\n    }\n  }\n}\n\nfunction addArgumentsSuggestions(argumentsParent: ObjectValue, args: ArgumentDescription[]) {\n  for (const arg of args) {\n    if (!argumentsParent.hasField(arg.name)) {\n      argumentsParent.addSuggestion(new ObjectFieldSuggestion(arg.name, arg.typeNames.join(' | ')))\n    }\n  }\n}\n\nfunction locateSelectionField(selectionPath: string[], argsTree: ArgumentsRenderingTree) {\n  const [parentPath, fieldName] = splitPath(selectionPath)\n\n  const subSelection = argsTree.arguments.getDeepSubSelectionValue(parentPath)?.asObject()\n  if (!subSelection) {\n    return { parentKind: 'unknown' as const, fieldName }\n  }\n  const select = subSelection.getFieldValue('select')?.asObject()\n  const include = subSelection.getFieldValue('include')?.asObject()\n  const omit = subSelection.getFieldValue('omit')?.asObject()\n  let field = select?.getField(fieldName)\n  if (select && field) {\n    return { parentKind: 'select' as const, parent: select, field, fieldName }\n  }\n  field = include?.getField(fieldName)\n  if (include && field) {\n    return { parentKind: 'include' as const, field, parent: include, fieldName }\n  }\n\n  field = omit?.getField(fieldName)\n  if (omit && field) {\n    return { parentKind: 'omit' as const, field, parent: omit, fieldName }\n  }\n  return { parentKind: 'unknown' as const, fieldName }\n}\n\nfunction addInputSuggestions(parent: ObjectValue, inputType: InputTypeDescription) {\n  if (inputType.kind !== 'object') {\n    return\n  }\n\n  for (const field of inputType.fields) {\n    if (!parent.hasField(field.name)) {\n      parent.addSuggestion(new ObjectFieldSuggestion(field.name, field.typeNames.join(' | ')))\n    }\n  }\n}\n\nfunction splitPath(path: string[]): [parentPath: string[], fieldName: string] {\n  const selectionPath = [...path]\n  const fieldName = selectionPath.pop()\n  if (!fieldName) {\n    throw new Error('unexpected empty path')\n  }\n  return [selectionPath, fieldName]\n}\n\nfunction availableOptionsMessage({ green, enabled }: Colors) {\n  return `Available options are ` + (enabled ? `listed in ${green('green')}` : `marked with ?`) + '.'\n}\n\nfunction joinWithPreposition(preposition: 'and' | 'or', items: string[]): string {\n  if (items.length === 1) {\n    return items[0]\n  }\n  const itemsCopy = [...items]\n  const lastItem = itemsCopy.pop()\n  return `${itemsCopy.join(', ')} ${preposition} ${lastItem}`\n}\n\n/**\n * Options with edit distance above this value will never be suggested\n */\nconst MAX_EDIT_DISTANCE = 3\n\nfunction getSuggestion(str: string, options: string[]): string | undefined {\n  let minDistance = Infinity\n  let result: string | undefined\n\n  for (const option of options) {\n    const editDistance = levenshtein(str, option)\n    if (editDistance > MAX_EDIT_DISTANCE) {\n      continue\n    }\n    if (editDistance < minDistance) {\n      minDistance = editDistance\n      result = option\n    }\n  }\n  return result\n}\n", "import { maxWithComparator } from '@prisma/internals'\n\nimport { EngineValidationError, InvalidArgumentTypeError, UnionError } from '../engines'\nimport { GlobalOmitOptions } from '../jsonProtocol/serializeJsonQuery'\nimport { applyValidationError } from './applyValidationError'\nimport { ArgumentsRenderingTree } from './ArgumentsRenderingTree'\n\ntype NonUnionError = Exclude<EngineValidationError, UnionError>\n\n/**\n * When a particular field has multiple allowed types on the schema level\n * and none of them match users input, engine returns special kind of error: UnionError.\n * This error acts as a container for individual errors for each non-matching type.\n * In that case, we need to make a guess which of the errors corresponds users intent the most.\n * General algorithm of processing them is the following:\n * - flatten all nested errors and get a single list of all possible errors\n * - merge individual InvalidArgumentType errors at the same path\n * - pick the best error based on combined argument and selection paths length and type of the error.\n *\n * For details of each step, see other comments in this file.\n * @param error\n * @param args\n */\nexport function applyUnionError(error: UnionError, args: ArgumentsRenderingTree, globalOmit?: GlobalOmitOptions) {\n  const allErrors = flattenUnionError(error)\n  const merged = mergeInvalidArgumentTypeErrors(allErrors)\n  const bestError = getBestScoringError(merged)\n  if (bestError) {\n    applyValidationError(bestError, args, globalOmit)\n  } else {\n    args.addErrorMessage(() => 'Unknown error')\n  }\n}\n\nfunction flattenUnionError(error: UnionError): NonUnionError[] {\n  return error.errors.flatMap((error) => {\n    if (error.kind === 'Union') {\n      return flattenUnionError(error)\n    }\n    return [error]\n  })\n}\n\n/**\n * Iterates over provided error list and merges all InvalidArgumentType\n * with matching selectionPath and argumentPath into one. For example,\n * if the list has an error, saying that `where.arg` does not match `Int`\n * and another, saying that `where.arg` does not match IntFilter, resulting\n * list will contain a single error for `where.arg` saying it does not\n * match `Int | IntFilter`\n * @param errorList\n * @returns\n */\nfunction mergeInvalidArgumentTypeErrors(errorList: NonUnionError[]) {\n  const invalidArgsError = new Map<string, InvalidArgumentTypeError>()\n  const result: NonUnionError[] = []\n\n  for (const error of errorList) {\n    if (error.kind !== 'InvalidArgumentType') {\n      result.push(error)\n      continue\n    }\n\n    const key = `${error.selectionPath.join('.')}:${error.argumentPath.join('.')}`\n    const prevError = invalidArgsError.get(key)\n    if (!prevError) {\n      invalidArgsError.set(key, error)\n    } else {\n      invalidArgsError.set(key, {\n        ...error,\n        argument: {\n          ...error.argument,\n          typeNames: uniqueConcat(prevError.argument.typeNames, error.argument.typeNames),\n        },\n      })\n    }\n  }\n\n  result.push(...invalidArgsError.values())\n  return result\n}\n\nfunction uniqueConcat<T>(head: T[], tail: T[]): T[] {\n  return [...new Set(head.concat(tail))]\n}\n\n/**\n * Function that attempts to pick the best error from the list\n * by ranking them. In most cases, highest ranking error would be the one\n * which has the longest combined \"selectionPath\" + \"argumentPath\". Justification\n * for that is that type that made it deeper into validation tree before failing\n * is probably closer to the one user actually wanted to do.\n *\n * However, if two errors are at the same depth level, we introduce additional ranking based\n * on error type. See `getErrorTypeScore` function for details\n * @param errors\n * @returns\n */\nfunction getBestScoringError(errors: NonUnionError[]) {\n  return maxWithComparator(errors, (errorA, errorB) => {\n    const aPathLength = getCombinedPathLength(errorA)\n    const bPathLength = getCombinedPathLength(errorB)\n    if (aPathLength !== bPathLength) {\n      return aPathLength - bPathLength\n    }\n    return getErrorTypeScore(errorA) - getErrorTypeScore(errorB)\n  })\n}\n\nfunction getCombinedPathLength(error: EngineValidationError) {\n  let score = 0\n  if (Array.isArray(error['selectionPath'])) {\n    score += error['selectionPath'].length\n  }\n\n  if (Array.isArray(error['argumentPath'])) {\n    score += error['argumentPath'].length\n  }\n  return score\n}\n\n/**\n * Function is invoked to determine most relevant error based on its type.\n * Specific numbers returned from this function do not really matter, it's only\n * important how they compare relatively to each other.\n *\n * Current logic is:\n * - InvalidArgumentValue/ValueTooLarge is treated as the best possible error to display\n * since when it is present we know that the field causing the error is defined on the schema\n * and provided value has correct type, it's just that value violates some other constraint.\n * - Next candidate is `InvalidArgumentType` error. We know the field user specified can exists in\n * this spot, it's just that value provided has incorrect type.\n * - All other engine-side errors follow. At that point it's difficult to say which of them is more relevant,\n * so we treat them equally. We might adjust this logic in the future.\n * - RequiredArgumentMissing is penalized because this error is often used to disambiguate\n * union types and what is required in one arm of the union might be fine to leave out in another\n * @param error\n * @returns\n */\nfunction getErrorTypeScore(error: EngineValidationError): number {\n  switch (error.kind) {\n    case 'InvalidArgumentValue':\n    case 'ValueTooLarge':\n      return 20\n    case 'InvalidArgumentType':\n      return 10\n    case 'RequiredArgumentMissing':\n      return -10\n    default:\n      return 0\n  }\n}\n", "import { ErrorBasicBuilder, ErrorWriter } from './base'\nimport { SuggestionObjectValue } from './SuggestionObjectValue'\n\nexport class ObjectFieldSuggestion implements ErrorBasicBuilder {\n  public isRequired = false\n  constructor(readonly name: string, readonly value: string | SuggestionObjectValue) {}\n\n  makeRequired() {\n    this.isRequired = true\n    return this\n  }\n\n  write(writer: ErrorWriter): void {\n    const {\n      colors: { green },\n    } = writer.context\n\n    writer.addMarginSymbol(green(this.isRequired ? '+' : '?'))\n    writer.write(green(this.name))\n\n    if (!this.isRequired) {\n      writer.write(green('?'))\n    }\n\n    writer.write(green(`: `))\n    if (typeof this.value === 'string') {\n      writer.write(green(this.value))\n    } else {\n      writer.write(this.value)\n    }\n  }\n}\n", "import { INDENT_SIZE } from '@prisma/ts-builders'\n\nimport { ArrayValue } from './ArrayValue'\nimport { ErrorWriter, fieldsSeparator } from './base'\nimport { Field } from './Field'\nimport { FormattedString } from './FormattedString'\nimport { ObjectField } from './ObjectField'\nimport { ObjectFieldSuggestion } from './ObjectFieldSuggestion'\nimport { Value } from './Value'\n\ntype SelectionParent = {\n  kind: 'include' | 'select'\n  value: ObjectValue\n}\n\n/**\n * Class for representing object value within rendering tree. Also used for accessing\n * different fields of the object.\n *\n * Terminology used within:\n * - selection parent = either `select` or `include` property value. For example for object\n * `{ select: { posts: true }}`, selection parent is `{ posts: true }`\n * - sub selection: value of a property of selection parent. Can be deep. In that case, specified\n * path is expected to not contain either `select` or `include` values in between (the way engine reports `selectionPath`).\n * For example, for this query:\n *\n * {\n *   include: {\n *     posts: {\n *       select: { attachments: { where: { published: true }} }\n *     }\n *   }\n * }\n * Value of sub selection at path [posts, attachments] is { where: { published: true }}\n */\nexport class ObjectValue extends Value {\n  private fields: Record<string, ObjectField> = {}\n  private suggestions: ObjectFieldSuggestion[] = []\n\n  addField(field: ObjectField) {\n    this.fields[field.name] = field\n  }\n\n  addSuggestion(suggestion: ObjectFieldSuggestion) {\n    this.suggestions.push(suggestion)\n  }\n\n  getField(key: string): ObjectField | undefined {\n    return this.fields[key]\n  }\n\n  getDeepField(path: string[]): Field | undefined {\n    const [head, ...tail] = path\n    const firstField = this.getField(head)\n    if (!firstField) {\n      return undefined\n    }\n    let field: Field = firstField\n    for (const segment of tail) {\n      let nextField: Field | undefined\n\n      if (field.value instanceof ObjectValue) {\n        nextField = field.value.getField(segment)\n      } else if (field.value instanceof ArrayValue) {\n        nextField = field.value.getField(Number(segment))\n      }\n      if (!nextField) {\n        return undefined\n      }\n      field = nextField\n    }\n    return field\n  }\n\n  getDeepFieldValue(path: string[]) {\n    if (path.length === 0) {\n      return this\n    }\n    return this.getDeepField(path)?.value\n  }\n\n  hasField(key: string) {\n    return Boolean(this.getField(key))\n  }\n\n  removeAllFields() {\n    this.fields = {}\n  }\n\n  removeField(key: string) {\n    delete this.fields[key]\n  }\n\n  getFields() {\n    return this.fields\n  }\n\n  isEmpty(): boolean {\n    return Object.keys(this.fields).length === 0\n  }\n\n  getFieldValue(key: string): Value | undefined {\n    return this.getField(key)?.value\n  }\n\n  getDeepSubSelectionValue(path: string[]): Value | undefined {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let selection: Value = this\n    for (const segment of path) {\n      if (!(selection instanceof ObjectValue)) {\n        return undefined\n      }\n      const next = selection.getSubSelectionValue(segment)\n      if (!next) {\n        return undefined\n      }\n\n      selection = next\n    }\n\n    return selection\n  }\n\n  getDeepSelectionParent(path: string[]): SelectionParent | undefined {\n    const thisParent = this.getSelectionParent()\n    if (!thisParent) {\n      return undefined\n    }\n\n    let parent = thisParent\n\n    for (const segment of path) {\n      const next = parent.value.getFieldValue(segment)\n      if (!next || !(next instanceof ObjectValue)) {\n        return undefined\n      }\n\n      const nextParent = next.getSelectionParent()\n      if (!nextParent) {\n        return undefined\n      }\n      parent = nextParent\n    }\n\n    return parent\n  }\n\n  getSelectionParent(): SelectionParent | undefined {\n    const select = this.getField('select')?.value.asObject()\n    if (select) {\n      return { kind: 'select', value: select }\n    }\n\n    const include = this.getField('include')?.value.asObject()\n    if (include) {\n      return { kind: 'include', value: include }\n    }\n    return undefined\n  }\n\n  getSubSelectionValue(key: string): Value | undefined {\n    return this.getSelectionParent()?.value.fields[key].value\n  }\n\n  override getPrintWidth(): number {\n    const fields = Object.values(this.fields)\n    if (fields.length == 0) {\n      return 2 // {}\n    }\n    const maxFieldWidth = Math.max(...fields.map((f) => f.getPrintWidth()))\n    return maxFieldWidth + INDENT_SIZE\n  }\n\n  override write(writer: ErrorWriter): void {\n    const fields = Object.values(this.fields)\n    if (fields.length === 0 && this.suggestions.length === 0) {\n      this.writeEmpty(writer)\n      return\n    }\n\n    this.writeWithContents(writer, fields)\n  }\n\n  override asObject(): ObjectValue {\n    return this\n  }\n\n  private writeEmpty(writer: ErrorWriter) {\n    const output = new FormattedString('{}')\n    if (this.hasError) {\n      output.setColor(writer.context.colors.red).underline()\n    }\n\n    writer.write(output)\n  }\n\n  private writeWithContents(writer: ErrorWriter, fields: ObjectField[]) {\n    writer.writeLine('{').withIndent(() => {\n      writer.writeJoined(fieldsSeparator, [...fields, ...this.suggestions]).newLine()\n    })\n\n    writer.write('}')\n    if (this.hasError) {\n      writer.afterNextNewline(() => {\n        writer.writeLine(writer.context.colors.red('~'.repeat(this.getPrintWidth())))\n      })\n    }\n  }\n}\n", "export * from './AnyDeclarationBuilder'\nexport * from './ArraySpread'\nexport * from './ArrayType'\nexport * from './BasicBuilder'\nexport * from './Class'\nexport * from './ConstDeclaration'\nexport * from './DocComment'\nexport * from './Export'\nexport * from './ExportFrom'\nexport * from './File'\nexport * from './FunctionCall'\nexport * from './FunctionType'\nexport * from './GenericParameter'\nexport * from './helpers'\nexport * from './Import'\nexport * from './Interface'\nexport * from './KeyofType'\nexport * from './KeyType'\nexport * from './Method'\nexport * from './NamedType'\nexport * from './NamedValue'\nexport * from './NamespaceDeclaration'\nexport * from './ObjectType'\nexport * from './Parameter'\nexport * from './PrimitiveType'\nexport * from './Property'\nexport * from './stringify'\nexport * from './StringLiteralType'\nexport * from './TupleType'\nexport * from './TypeBuilder'\nexport * from './TypeDeclaration'\nexport * from './UnionType'\nexport * from './ValueBuilder'\nexport * from './WellKnownSymbol'\nexport * from './Writer'\n", "import type { BasicBuilder } from './BasicBuilder'\n\nexport const INDENT_SIZE = 2\n/**\n * Helper class for building long multi-line formatted strings from building blocks.\n * Can use either plain strings or `Builder` objects, that would encapsulate formatting logic.\n */\nexport class Writer<ContextType = undefined> {\n  private lines: string[] = []\n  private currentLine = ''\n  private currentIndent = 0\n  private marginSymbol?: string\n  private afterNextNewLineCallback?: () => void\n\n  constructor(startingIndent = 0, readonly context: ContextType) {\n    this.currentIndent = startingIndent\n  }\n\n  /**\n   * Adds provided value to the current line. Does not end the line.\n   *\n   * @param value\n   * @returns\n   */\n  write(value: string | BasicBuilder<ContextType>): this {\n    if (typeof value === 'string') {\n      this.currentLine += value\n    } else {\n      value.write(this)\n    }\n    return this\n  }\n\n  /**\n   * Adds several `values` to the current line, separated by `separator`. Both values and separator\n   * can also be `Builder` instances for more advanced formatting.\n   *\n   * @param separator\n   * @param values\n   * @param writeItem allow to customize how individual item is written\n   * @returns\n   */\n  writeJoined<T extends string | BasicBuilder<ContextType>>(\n    separator: string | BasicBuilder<ContextType>,\n    values: T[],\n    writeItem: (item: T, writer: this) => void = (item, w) => w.write(item),\n  ): this {\n    const last = values.length - 1\n    for (let i = 0; i < values.length; i++) {\n      writeItem(values[i], this)\n      if (i !== last) {\n        this.write(separator)\n      }\n    }\n    return this\n  }\n\n  /**\n   * Adds a string to current line, flushes current line and starts a new line.\n   * @param line\n   * @returns\n   */\n  writeLine(line: string | BasicBuilder<ContextType>): this {\n    return this.write(line).newLine()\n  }\n\n  /**\n   * Flushes current line and starts a new line. New line starts at previously configured indentation level\n   * @returns\n   */\n  newLine(): this {\n    this.lines.push(this.indentedCurrentLine())\n    this.currentLine = ''\n    this.marginSymbol = undefined\n\n    const afterNextNewLineCallback = this.afterNextNewLineCallback\n    this.afterNextNewLineCallback = undefined\n    afterNextNewLineCallback?.()\n    return this\n  }\n\n  /**\n   * Increases indentation level by 1, calls provided callback and then decreases indentation again.\n   * Could be used for writing indented blocks of text:\n   *\n   * @example\n   * ```ts\n   * writer\n   *   .writeLine('{')\n   *   .withIndent(() => {\n   *      writer.writeLine('foo: 123');\n   *      writer.writeLine('bar: 456');\n   *   })\n   *   .writeLine('}')\n   * ```\n   * @param callback\n   * @returns\n   */\n  withIndent(callback: (writer: this) => void): this {\n    this.indent()\n    callback(this)\n    this.unindent()\n    return this\n  }\n\n  /**\n   * Calls provided callback next time when new line is started.\n   * Callback is called after old line have already been flushed and a new\n   * line have been started. Can be used for adding \"between the lines\" decorations,\n   * such as underlines.\n   *\n   * @param callback\n   * @returns\n   */\n  afterNextNewline(callback: () => void) {\n    this.afterNextNewLineCallback = callback\n    return this\n  }\n\n  /**\n   * Increases indentation level of the current line by 1\n   * @returns\n   */\n  indent(): this {\n    this.currentIndent++\n    return this\n  }\n\n  /**\n   * Decreases indentation level of the current line by 1, if it is possible\n   * @returns\n   */\n  unindent(): this {\n    if (this.currentIndent > 0) {\n      this.currentIndent--\n    }\n    return this\n  }\n\n  /**\n   * Adds a symbol, that will replace the first character of the current line (including indentation)\n   * when it is flushed. Can be used for adding markers to the line.\n   *\n   * Note: if indentation level of the line is 0, it will replace the first actually printed character\n   * of the line. Use with caution.\n   * @param symbol\n   * @returns\n   */\n  addMarginSymbol(symbol: string): this {\n    this.marginSymbol = symbol\n    return this\n  }\n\n  toString() {\n    return this.lines.concat(this.indentedCurrentLine()).join('\\n')\n  }\n\n  getCurrentLineLength() {\n    return this.currentLine.length\n  }\n\n  private indentedCurrentLine(): string {\n    const line = this.currentLine.padStart(this.currentLine.length + INDENT_SIZE * this.currentIndent)\n    if (this.marginSymbol) {\n      return this.marginSymbol + line.slice(1)\n    }\n    return line\n  }\n}\n", "import { INDENT_SIZE } from '@prisma/ts-builders'\n\nimport { ArrayField } from './ArrayField'\nimport { ErrorWriter, fieldsSeparator } from './base'\nimport { FormattedString } from './FormattedString'\nimport { Value } from './Value'\n\nexport class ArrayValue extends Value {\n  private items: ArrayField[] = []\n\n  addItem(item: Value): this {\n    this.items.push(new ArrayField(item))\n    return this\n  }\n\n  getField(index: number): ArrayField | undefined {\n    return this.items[index]\n  }\n\n  override getPrintWidth(): number {\n    if (this.items.length === 0) {\n      return 2\n    }\n    const maxItemWidth = Math.max(...this.items.map((item) => item.value.getPrintWidth()))\n    return maxItemWidth + INDENT_SIZE\n  }\n\n  override write(writer: ErrorWriter): void {\n    if (this.items.length === 0) {\n      this.writeEmpty(writer)\n      return\n    }\n    this.writeWithItems(writer)\n  }\n\n  private writeEmpty(writer: ErrorWriter) {\n    const output = new FormattedString('[]')\n    if (this.hasError) {\n      output.setColor(writer.context.colors.red).underline()\n    }\n    writer.write(output)\n  }\n\n  private writeWithItems(writer: ErrorWriter) {\n    const { colors } = writer.context\n\n    writer\n      .writeLine('[')\n      .withIndent(() => writer.writeJoined(fieldsSeparator, this.items).newLine())\n      .write(']')\n\n    if (this.hasError) {\n      writer.afterNextNewline(() => {\n        writer.writeLine(colors.red('~'.repeat(this.getPrintWidth())))\n      })\n    }\n  }\n\n  override asObject(): undefined {\n    return undefined\n  }\n}\n", "import { ErrorBasicBuilder, ErrorWriter } from './base'\nimport { Field } from './Field'\nimport { Value } from './Value'\n\nexport class ArrayField implements ErrorBasicBuilder, Field {\n  constructor(public value: Value) {}\n  write(writer: ErrorWriter): void {\n    writer.write(this.value)\n  }\n\n  markAsError(): void {\n    this.value.markAsError()\n  }\n}\n", "import { BasicBuilder, Writer } from '@prisma/ts-builders'\nimport { bold, dim, green, red } from 'kleur/colors'\n\ntype ColorFn = (str: string) => string\nexport type Colors = {\n  bold: ColorFn\n  red: ColorFn\n  green: ColorFn\n  dim: ColorFn\n  // if false, all color functions are useless\n  readonly enabled: boolean\n}\n\nconst noop = (str: string) => str\n\nexport const inactiveColors: Colors = {\n  bold: noop,\n  red: noop,\n  green: noop,\n  dim: noop,\n  enabled: false,\n}\n\nexport const activeColors: Colors = {\n  bold,\n  red,\n  green,\n  dim,\n  enabled: true,\n}\n\nexport type ErrorRenderContext = {\n  colors: Colors\n}\n\nexport type ErrorWriter = Writer<ErrorRenderContext>\nexport type ErrorBasicBuilder = BasicBuilder<ErrorRenderContext>\n\nexport const fieldsSeparator: ErrorBasicBuilder = {\n  write(writer) {\n    writer.writeLine(',')\n  },\n}\n", "import { ErrorBasicBuilder, ErrorWriter } from './base'\n\nexport type ColorFn = (str: string) => string\n\nexport class FormattedString implements ErrorBasicBuilder {\n  private isUnderlined = false\n  private color: ColorFn = (str) => str\n  constructor(public contents: string) {}\n\n  underline(): this {\n    this.isUnderlined = true\n    return this\n  }\n\n  setColor(color: ColorFn): this {\n    this.color = color\n    return this\n  }\n\n  write(writer: ErrorWriter): void {\n    const paddingSize = writer.getCurrentLineLength()\n    writer.write(this.color(this.contents))\n    if (this.isUnderlined) {\n      writer.afterNextNewline(() => {\n        writer.write(' '.repeat(paddingSize)).writeLine(this.color('~'.repeat(this.contents.length)))\n      })\n    }\n  }\n}\n", "import { ErrorBasicBuilder, ErrorWriter } from './base'\nimport { ObjectValue } from './ObjectValue'\n\nexport abstract class Value implements ErrorBasicBuilder {\n  abstract write(writer: ErrorWriter): void\n\n  /**\n   * Returns total width the value when it is rendered. Used\n   * for determining underline width.\n   */\n  abstract getPrintWidth(): number\n\n  public hasError = false\n\n  markAsError(): this {\n    this.hasError = true\n    return this\n  }\n\n  abstract asObject(): ObjectValue | undefined\n}\n", "import { ErrorWriter } from './base'\nimport { FormattedString } from './FormattedString'\nimport { Value } from './Value'\n\nexport class ScalarValue extends Value {\n  constructor(readonly text: string) {\n    super()\n  }\n\n  override getPrintWidth(): number {\n    return this.text.length\n  }\n\n  override write(writer: ErrorWriter): void {\n    const string = new FormattedString(this.text)\n    if (this.hasError) {\n      string.underline().setColor(writer.context.colors.red)\n    }\n    writer.write(string)\n  }\n\n  override asObject(): undefined {\n    return undefined\n  }\n}\n", "import { ErrorBasicBuilder, ErrorWriter, fieldsSeparator } from './base'\n\nexport class SuggestionObjectValue implements ErrorBasicBuilder {\n  private fields: ErrorBasicBuilder[] = []\n\n  addField(name: string, value: string) {\n    this.fields.push({\n      write(writer) {\n        const { green, dim } = writer.context.colors\n        writer.write(green(dim(`${name}: ${value}`))).addMarginSymbol(green(dim('+')))\n      },\n    })\n    return this\n  }\n\n  write(writer: ErrorWriter): void {\n    const {\n      colors: { green },\n    } = writer.context\n    writer\n      .writeLine(green('{'))\n      .withIndent(() => {\n        writer.writeJoined(fieldsSeparator, this.fields).newLine()\n      })\n      .write(green('}'))\n      .addMarginSymbol(green('+'))\n  }\n}\n", "import { uncapitalize } from '@prisma/client-common'\nimport { Writer } from '@prisma/ts-builders'\n\nimport { ErrorFormat } from '../../getPrismaClient'\nimport { isValidDate } from '../../utils/date'\nimport { isDecimalJsLike } from '../../utils/decimalJsLike'\nimport { isFieldRef } from '../model/FieldRef'\nimport { ObjectEnumValue } from '../types/exported/ObjectEnums'\nimport { ArrayValue } from './ArrayValue'\nimport { activeColors, Colors, ErrorBasicBuilder, ErrorWriter, inactiveColors } from './base'\nimport { ObjectField } from './ObjectField'\nimport { ObjectValue } from './ObjectValue'\nimport { ScalarValue } from './ScalarValue'\n\ntype MessageRender = (colors: Colors) => string\n\nexport class ArgumentsRenderingTree implements ErrorBasicBuilder {\n  readonly arguments: ObjectValue\n  private errorMessages: MessageRender[] = []\n\n  constructor(args: ObjectValue) {\n    this.arguments = args\n  }\n\n  write(writer: ErrorWriter): void {\n    writer.write(this.arguments)\n  }\n\n  addErrorMessage(renderer: MessageRender) {\n    this.errorMessages.push(renderer)\n  }\n\n  renderAllMessages(colors: Colors): string {\n    return this.errorMessages.map((messageRenderer) => messageRenderer(colors)).join('\\n')\n  }\n}\n\n/**\n * Given JS call arguments, produces rendering tree for outputting rich errors into the console\n * Difference between rendering tree and plain object is that fields and values can have different attributes:\n * colors, underlines, markers on the margins. `applyValidationError` function will then apply specific formatting\n * to the rendering tree.\n *\n * @param args\n * @returns\n */\nexport function buildArgumentsRenderingTree(args: Record<PropertyKey, unknown>): ArgumentsRenderingTree {\n  return new ArgumentsRenderingTree(buildInputObject(args))\n}\n\nfunction buildInputObject(inputObject: Record<PropertyKey, unknown>) {\n  const object = new ObjectValue()\n\n  for (const [key, value] of Object.entries(inputObject)) {\n    const field = new ObjectField(key, buildInputValue(value))\n    object.addField(field)\n  }\n  return object\n}\n\nfunction buildInputValue(value: unknown) {\n  if (typeof value === 'string') {\n    return new ScalarValue(JSON.stringify(value))\n  }\n\n  if (typeof value === 'number' || typeof value === 'boolean') {\n    return new ScalarValue(String(value))\n  }\n\n  if (typeof value === 'bigint') {\n    return new ScalarValue(`${value}n`)\n  }\n\n  if (value === null) {\n    return new ScalarValue('null')\n  }\n\n  if (value === undefined) {\n    return new ScalarValue('undefined')\n  }\n\n  if (isDecimalJsLike(value)) {\n    return new ScalarValue(`new Prisma.Decimal(\"${value.toFixed()}\")`)\n  }\n\n  if (value instanceof Uint8Array) {\n    if (Buffer.isBuffer(value)) {\n      return new ScalarValue(`Buffer.alloc(${value.byteLength})`)\n    }\n    return new ScalarValue(`new Uint8Array(${value.byteLength})`)\n  }\n\n  if (value instanceof Date) {\n    const dateStr = isValidDate(value) ? value.toISOString() : 'Invalid Date'\n    return new ScalarValue(`new Date(\"${dateStr}\")`)\n  }\n\n  if (value instanceof ObjectEnumValue) {\n    return new ScalarValue(`Prisma.${value._getName()}`)\n  }\n\n  if (isFieldRef(value)) {\n    return new ScalarValue(`prisma.${uncapitalize(value.modelName)}.$fields.${value.name}`)\n  }\n\n  if (Array.isArray(value)) {\n    return buildInputArray(value)\n  }\n\n  if (typeof value === 'object') {\n    return buildInputObject(value as Record<PropertyKey, unknown>)\n  }\n\n  return new ScalarValue(Object.prototype.toString.call(value))\n}\n\nfunction buildInputArray(array: unknown[]) {\n  const result = new ArrayValue()\n  for (const item of array) {\n    result.addItem(buildInputValue(item))\n  }\n  return result\n}\n\nexport function renderArgsTree(argsTree: ArgumentsRenderingTree, errorFormat: ErrorFormat) {\n  const colors = errorFormat === 'pretty' ? activeColors : inactiveColors\n\n  const message = argsTree.renderAllMessages(colors)\n  const args = new Writer(0, { colors }).write(argsTree).toString()\n\n  return { message, args }\n}\n", "import { FieldRef } from '../types/exported/FieldRef'\n\nexport class FieldRefImpl<Model, FieldType> implements FieldRef<Model, FieldType> {\n  public readonly modelName: Model\n  public readonly name: string\n  public readonly typeName: FieldType\n  public readonly isList: boolean\n  public readonly isEnum: boolean\n\n  constructor(modelName: Model, name: string, fieldType: FieldType, isList: boolean, isEnum: boolean) {\n    this.modelName = modelName\n    this.name = name\n    this.typeName = fieldType\n    this.isList = isList\n    this.isEnum = isEnum\n  }\n\n  _toGraphQLInputType() {\n    const listPrefix = this.isList ? `List` : ''\n    const enumPrefix = this.isEnum ? 'Enum' : ''\n\n    return `${listPrefix}${enumPrefix}${this.typeName}FieldRefInput<${this.modelName}>`\n  }\n}\n\nexport function isFieldRef(value: unknown): value is FieldRef<string, unknown> {\n  return value instanceof FieldRefImpl\n}\n", "/**\n * Module-private symbol used to distinguish between instances of\n * `ObjectEnumValue` created inside and outside this module.\n */\nconst secret = Symbol()\n\n/**\n * Emulate a private property via a WeakMap manually. Using native private\n * properties is a breaking change for downstream users with minimal TypeScript\n * configs, because TypeScript uses ES3 as the default target.\n *\n * TODO: replace this with a `#representation` private property in the\n * `ObjectEnumValue` class and document minimal required `target` for TypeScript.\n */\nconst representations = new WeakMap<ObjectEnumValue, string>()\n\n/**\n * Base class for unique values of object-valued enums.\n */\nexport abstract class ObjectEnumValue {\n  constructor(arg?: symbol) {\n    if (arg === secret) {\n      representations.set(this, `Prisma.${this._getName()}`)\n    } else {\n      representations.set(this, `new Prisma.${this._getNamespace()}.${this._getName()}()`)\n    }\n  }\n\n  abstract _getNamespace(): string\n\n  _getName() {\n    return this.constructor.name\n  }\n\n  toString() {\n    return representations.get(this)!\n  }\n}\n\nclass NullTypesEnumValue extends ObjectEnumValue {\n  override _getNamespace() {\n    return 'NullTypes'\n  }\n}\n\nclass DbNull extends NullTypesEnumValue {\n  // Phantom private property to prevent structural type equality\n  // eslint-disable-next-line no-unused-private-class-members\n  readonly #_brand_DbNull!: void\n}\nsetClassName(DbNull, 'DbNull')\n\nclass JsonNull extends NullTypesEnumValue {\n  // Phantom private property to prevent structural type equality\n  // eslint-disable-next-line no-unused-private-class-members\n  readonly #_brand_JsonNull!: void\n}\nsetClassName(JsonNull, 'JsonNull')\n\nclass AnyNull extends NullTypesEnumValue {\n  // Phantom private property to prevent structural type equality\n  // eslint-disable-next-line no-unused-private-class-members\n  readonly #_brand_AnyNull!: void\n}\nsetClassName(AnyNull, 'AnyNull')\n\nexport const objectEnumValues = {\n  classes: {\n    DbNull,\n    JsonNull,\n    AnyNull,\n  },\n  instances: {\n    DbNull: new DbNull(secret),\n    JsonNull: new JsonNull(secret),\n    AnyNull: new AnyNull(secret),\n  },\n}\n\n/**\n * See helper in @internals package. Can not be used here\n * because importing internal breaks browser build.\n *\n * @param classObject\n * @param name\n */\nfunction setClassName(classObject: Function, name: string) {\n  Object.defineProperty(classObject, 'name', {\n    value: name,\n    configurable: true,\n  })\n}\n", "import { ErrorBasicBuilder, ErrorWriter } from './base'\nimport { Field } from './Field'\nimport { FormattedString } from './FormattedString'\nimport { Value } from './Value'\n\nconst separator = ': '\nexport class ObjectField implements ErrorBasicBuilder, Field {\n  hasError = false\n  constructor(readonly name: string, public value: Value) {}\n\n  markAsError() {\n    this.hasError = true\n  }\n\n  getPrintWidth() {\n    return this.name.length + this.value.getPrintWidth() + separator.length\n  }\n\n  write(writer: ErrorWriter): void {\n    const name = new FormattedString(this.name)\n    if (this.hasError) {\n      name.underline().setColor(writer.context.colors.red)\n    }\n    writer.write(name).write(separator).write(this.value)\n  }\n}\n", "import { Cache, lazyProperty } from '@prisma/client-common'\n\nimport { dmmfToJSModelName } from '../model/utils/dmmfToJSModelName'\nimport { ClientArg, ExtensionArgs, ModelArg, QueryOptionsCb } from '../types/exported/ExtensionArgs'\nimport { BatchQueryOptionsCb, QueryOptionsPrivate } from '../types/internal/ExtensionsInternalArgs'\nimport { ComputedFieldsMap, getComputedFields } from './resultUtils'\n\nclass MergedExtensionsListNode {\n  private computedFieldsCache = new Cache<string, ComputedFieldsMap | undefined>()\n  private modelExtensionsCache = new Cache<string, ModelArg | undefined>()\n  private queryCallbacksCache = new Cache<string, QueryOptionsCb[]>()\n\n  private clientExtensions = lazyProperty(() => {\n    if (!this.extension.client) {\n      return this.previous?.getAllClientExtensions()\n    }\n\n    return {\n      ...this.previous?.getAllClientExtensions(),\n      ...this.extension.client,\n    }\n  })\n\n  private batchCallbacks = lazyProperty(() => {\n    const previous: BatchQueryOptionsCb[] = this.previous?.getAllBatchQueryCallbacks() ?? []\n    const newCb = (this.extension as QueryOptionsPrivate).query?.$__internalBatch\n    if (!newCb) {\n      return previous\n    }\n    return previous.concat(newCb)\n  })\n\n  constructor(public extension: ExtensionArgs, public previous?: MergedExtensionsListNode) {}\n\n  getAllComputedFields(dmmfModelName: string): ComputedFieldsMap | undefined {\n    return this.computedFieldsCache.getOrCreate(dmmfModelName, () => {\n      return getComputedFields(this.previous?.getAllComputedFields(dmmfModelName), this.extension, dmmfModelName)\n    })\n  }\n\n  getAllClientExtensions(): ClientArg | undefined {\n    return this.clientExtensions.get()\n  }\n\n  getAllModelExtensions(dmmfModelName: string): ModelArg | undefined {\n    return this.modelExtensionsCache.getOrCreate(dmmfModelName, () => {\n      const jsModelName = dmmfToJSModelName(dmmfModelName)\n      if (!this.extension.model || !(this.extension.model[jsModelName] || this.extension.model.$allModels)) {\n        return this.previous?.getAllModelExtensions(dmmfModelName)\n      }\n\n      return {\n        ...this.previous?.getAllModelExtensions(dmmfModelName),\n        ...this.extension.model.$allModels,\n        ...this.extension.model[jsModelName],\n      }\n    })\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n  getAllQueryCallbacks(jsModelName: string | '$none', operation: string) {\n    return this.queryCallbacksCache.getOrCreate(`${jsModelName}:${operation}`, () => {\n      const prevCbs = this.previous?.getAllQueryCallbacks(jsModelName, operation) ?? []\n      const newCbs: QueryOptionsCb[] = []\n      const query = this.extension.query\n\n      if (!query || !(query[jsModelName] || query['$allModels'] || query[operation] || query['$allOperations'])) {\n        return prevCbs\n      }\n\n      if (query[jsModelName] !== undefined) {\n        if (query[jsModelName][operation] !== undefined) {\n          newCbs.push(query[jsModelName][operation])\n        }\n\n        // when the model-bound extension has a wildcard for the operation\n        if (query[jsModelName]['$allOperations'] !== undefined) {\n          newCbs.push(query[jsModelName]['$allOperations'])\n        }\n      }\n\n      // when the extension isn't model-bound, apply it to all models\n      // '$none' is a special case for top-level operations without model\n      if (jsModelName !== '$none' && query['$allModels'] !== undefined) {\n        if (query['$allModels'][operation] !== undefined) {\n          newCbs.push(query['$allModels'][operation])\n        }\n\n        // when the non-model-bound extension has a wildcard for the operation\n        if (query['$allModels']['$allOperations'] !== undefined) {\n          newCbs.push(query['$allModels']['$allOperations'])\n        }\n      }\n\n      // when the extension is not bound to a model & is a top-level operation\n      if (query[operation] !== undefined) {\n        newCbs.push(query[operation] as QueryOptionsCb)\n      }\n\n      // when the extension is not bound to a model & is any top-level operation\n      if (query['$allOperations'] !== undefined) {\n        newCbs.push(query['$allOperations'] as QueryOptionsCb)\n      }\n\n      return prevCbs.concat(newCbs)\n    })\n  }\n\n  getAllBatchQueryCallbacks() {\n    return this.batchCallbacks.get()\n  }\n}\n\n/**\n * Class that holds the list of all extensions, applied to particular instance,\n * as well as resolved versions of the components that need to apply on\n * different levels. Main idea of this class: avoid re-resolving as much of the\n * stuff as possible when new extensions are added while also delaying the\n * resolve until the point it is actually needed. For example, computed fields\n * of the model won't be resolved unless the model is actually queried. Neither\n * adding extensions with `client` component only cause other components to\n * recompute.\n */\nexport class MergedExtensionsList {\n  private constructor(private head?: MergedExtensionsListNode) {}\n\n  static empty() {\n    return new MergedExtensionsList()\n  }\n\n  static single(extension: ExtensionArgs) {\n    return new MergedExtensionsList(new MergedExtensionsListNode(extension))\n  }\n\n  isEmpty(): boolean {\n    return this.head === undefined\n  }\n\n  append(extension: ExtensionArgs) {\n    return new MergedExtensionsList(new MergedExtensionsListNode(extension, this.head))\n  }\n\n  getAllComputedFields(dmmfModelName: string): ComputedFieldsMap | undefined {\n    return this.head?.getAllComputedFields(dmmfModelName)\n  }\n\n  getAllClientExtensions() {\n    return this.head?.getAllClientExtensions()\n  }\n\n  getAllModelExtensions(dmmfModelName: string) {\n    return this.head?.getAllModelExtensions(dmmfModelName)\n  }\n\n  getAllQueryCallbacks(jsModelName: string, operation: string) {\n    return this.head?.getAllQueryCallbacks(jsModelName, operation) ?? []\n  }\n\n  getAllBatchQueryCallbacks() {\n    return this.head?.getAllBatchQueryCallbacks() ?? []\n  }\n}\n", "/**\n * Transforms a model name coming from the DMMF to a runtime model name.\n * @param name\n * @returns\n */\nexport function dmmfToJSModelName(name: string) {\n  return name.replace(/^./, (str) => str.toLowerCase())\n}\n", "import { Cache } from '@prisma/client-common'\nimport { mapObjectValues } from '@prisma/internals'\n\nimport { dmmfToJSModelName } from '../model/utils/dmmfToJSModelName'\nimport { ExtensionArgs, ResultArg, ResultArgsFieldCompute } from '../types/exported/ExtensionArgs'\nimport { Omission, Selection } from '../types/exported/JsApi'\n\nexport type ComputedField = {\n  name: string\n  needs: string[]\n  compute: ResultArgsFieldCompute\n}\n\nexport type ComputedFieldsMap = {\n  [fieldName: string]: ComputedField\n}\n\n/**\n * Given the list of previously resolved computed fields, new extension and dmmf model name, produces a map\n * of all computed fields that may be applied to this model, accounting for all previous and past extensions.\n *\n * All naming conflicts which could be produced by the plain list of extensions are resolved as follows:\n * - extension, that declared later always wins\n * - in a single extension, specific model takes precedence over $allModels\n *\n * Additionally, resolves all `needs` dependencies down to the model fields. For example,\n * if `nameAndTitle` field depends on `fullName` computed field and `title` model field and\n * `fullName` field depends on `firstName` and `lastName` field, full list of `nameAndTitle` dependencies\n * would be `firstName`, `lastName`, `title`.\n * @param previousComputedFields\n * @param extension\n * @param dmmfModelName\n * @returns\n */\nexport function getComputedFields(\n  previousComputedFields: ComputedFieldsMap | undefined,\n  extension: ExtensionArgs,\n  dmmfModelName: string,\n) {\n  const jsName = dmmfToJSModelName(dmmfModelName)\n  if (!extension.result || !(extension.result.$allModels || extension.result[jsName])) {\n    return previousComputedFields\n  }\n\n  return resolveDependencies({\n    ...previousComputedFields,\n    ...getComputedFieldsFromModel(extension.name, previousComputedFields, extension.result.$allModels),\n    ...getComputedFieldsFromModel(extension.name, previousComputedFields, extension.result[jsName]),\n  })\n}\n\nexport function resolveDependencies(computedFields: ComputedFieldsMap): ComputedFieldsMap {\n  const cache = new Cache<string, string[]>()\n  const resolveNeeds = (fieldName: string, visitedFields: Set<string>) => {\n    return cache.getOrCreate(fieldName, () => {\n      if (visitedFields.has(fieldName)) {\n        return [fieldName]\n      }\n      visitedFields.add(fieldName)\n      if (!computedFields[fieldName]) {\n        return [fieldName]\n      }\n      return computedFields[fieldName].needs.flatMap((fieldDep) => resolveNeeds(fieldDep, visitedFields))\n    })\n  }\n\n  return mapObjectValues(computedFields, (field) => {\n    return {\n      ...field,\n      needs: resolveNeeds(field.name, new Set()),\n    }\n  })\n}\n\nfunction getComputedFieldsFromModel(\n  name: string | undefined,\n  previousComputedFields: ComputedFieldsMap | undefined,\n  modelResult: ResultArg | undefined,\n): ComputedFieldsMap {\n  if (!modelResult) {\n    return {}\n  }\n\n  return mapObjectValues(modelResult, ({ needs, compute }, fieldName) => ({\n    name: fieldName,\n    needs: needs ? Object.keys(needs).filter((key) => needs[key]) : [],\n    compute: composeCompute(previousComputedFields, fieldName, compute),\n  }))\n}\n\nfunction composeCompute(\n  previousComputedFields: ComputedFieldsMap | undefined,\n  fieldName: string,\n  nextCompute: ResultArgsFieldCompute,\n): ResultArgsFieldCompute {\n  const previousCompute = previousComputedFields?.[fieldName]?.compute\n  if (!previousCompute) {\n    return nextCompute\n  }\n  return (model) => {\n    return nextCompute({ ...model, [fieldName]: previousCompute(model) })\n  }\n}\n\nexport function computeEngineSideSelection(\n  selection: Selection,\n  computedFields: ComputedFieldsMap | undefined,\n): Selection {\n  if (!computedFields) {\n    return selection\n  }\n  const result = { ...selection }\n\n  for (const field of Object.values(computedFields)) {\n    if (!selection[field.name]) {\n      continue\n    }\n\n    for (const dependency of field.needs) {\n      result[dependency] = true\n    }\n  }\n  return result\n}\n\n/**\n * Given user-supplied omissions, computes the results to send to the engine, taking\n * into account dependencies of the computed field. Consider following example:\n *\n * ```\n * const xprisma = prisma.$extends({\n *       result: {\n *         user: {\n *           sanitizedPassword: {\n *             needs: { password: true },\n *             compute(user) {\n *               return sanitze(user.password)\n *             },\n *           },\n *         },\n *       },\n * })\n *\n * const user = await xprisma.user.findFirstOrThrow({\n *       omit: {\n *         password: true,\n *       },\n * })\n * ```\n *\n * In that case, user wants to omit the `password` but not `sanitizedPassword`.\n * Since `sanitizedPassword` can not be computed without `password`, we can not let\n * the engine handle omission in this case - we have to still query `password` from the\n * database and omit it on the client, after computing `sanitizedPassword`.\n *\n * This function removes the omission (thus, including the field into result set) if it is a dependency of\n * a non-omitted computed field. Client-side omission after we get a response is handled by `applyResultExtensions`\n *\n * @param omission\n * @param computedFields\n * @returns\n */\nexport function computeEngineSideOmissions(\n  omission: Omission,\n  computedFields: ComputedFieldsMap | undefined,\n): Omission {\n  if (!computedFields) {\n    return omission\n  }\n  const result = { ...omission }\n\n  for (const field of Object.values(computedFields)) {\n    if (omission[field.name]) {\n      continue\n    }\n\n    for (const dependency of field.needs) {\n      delete result[dependency]\n    }\n  }\n  return result\n}\n", "import { Param } from '../types/exported/Param'\n\nexport class ParamImpl<Type, Name extends string> implements Param<Type, Name> {\n  constructor(public readonly name: Name) {}\n}\n\nexport function isParam(value: unknown): value is Param<unknown, string> {\n  return value instanceof ParamImpl\n}\n\nexport function createParam(name: string): Param<unknown, string> {\n  return new ParamImpl(name)\n}\n", "import * as Extensions from './exported/Extensions'\nimport { OperationPayload } from './exported/Payload'\nimport * as Public from './exported/Public'\nimport * as Result from './exported/Result'\nimport * as Utils from './exported/Utils'\n\n/** Specific types */\nexport { Result }\nexport { Extensions }\nexport { Utils }\nexport { Public }\n\nexport { isSkip, Skip, skip } from './exported/Skip'\nexport { type UnknownTypedSql } from './exported/TypedSql'\n\n/** General types */\nexport { type OperationPayload as Payload }\n", "// private symbol that prevents direct construction of a class\nconst secret = Symbol()\n\nexport class Skip {\n  constructor(param?: symbol) {\n    if (param !== secret) {\n      throw new Error(`Skip instance can not be constructed directly`)\n    }\n  }\n\n  ifUndefined<T>(value: T | undefined): T | Skip {\n    if (value === undefined) {\n      return skip\n    }\n    return value\n  }\n}\n\nexport const skip = new Skip(secret)\n\nexport function isSkip(value: unknown): value is Skip {\n  return value instanceof Skip\n}\n", "import { Client } from '../../getPrismaClient'\nimport type { Metric, MetricHistogram, MetricHistogramBucket, Metrics } from '../engines'\nimport { PrismaClientValidationError } from '../errors/PrismaClientValidationError'\n\nexport type MetricsOptions = {\n  /**\n   * Labels to add to every metrics in key-value format\n   */\n  globalLabels?: Record<string, string>\n}\n\nfunction checkPreviewFeatureFlag(client: Client) {\n  if (!client._hasPreviewFlag('metrics')) {\n    throw new PrismaClientValidationError('`metrics` preview feature must be enabled in order to access metrics API', {\n      clientVersion: client._clientVersion,\n    })\n  }\n}\n\nexport class MetricsClient {\n  private _client: Client\n\n  constructor(client: Client) {\n    this._client = client\n  }\n\n  /**\n   * Returns all metrics gathered up to this point in prometheus format.\n   * Result of this call can be exposed directly to prometheus scraping endpoint\n   *\n   * @param options\n   * @returns\n   */\n  prometheus(options?: MetricsOptions): Promise<string> {\n    checkPreviewFeatureFlag(this._client)\n\n    return this._client._engine.metrics({ format: 'prometheus', ...options })\n  }\n\n  /**\n   * Returns all metrics gathered up to this point in prometheus format.\n   *\n   * @param options\n   * @returns\n   */\n  json(options?: MetricsOptions): Promise<Metrics> {\n    checkPreviewFeatureFlag(this._client)\n\n    return this._client._engine.metrics({ format: 'json', ...options })\n  }\n}\n\nexport type { Metric, MetricHistogram, MetricHistogramBucket, Metrics }\n", "import { BaseDMMF, lazyProperty, RuntimeDataModel } from '@prisma/client-common'\n\nexport function defineDmmfProperty(target: object, runtimeDataModel: RuntimeDataModel) {\n  const dmmfLazy = lazyProperty(() => runtimeDataModelToBaseDmmf(runtimeDataModel))\n\n  Object.defineProperty(target, 'dmmf', {\n    get: () => dmmfLazy.get(),\n  })\n}\n\nfunction runtimeDataModelToBaseDmmf(runtimeDataModel: RuntimeDataModel): BaseDMMF {\n  if (TARGET_BUILD_TYPE === 'wasm-engine-edge' || TARGET_BUILD_TYPE === 'wasm-compiler-edge') {\n    throw new Error('Prisma.dmmf is not available when running in edge runtimes.')\n  }\n\n  return {\n    datamodel: {\n      models: buildDMMFList(runtimeDataModel.models),\n      enums: buildDMMFList(runtimeDataModel.enums),\n      types: buildDMMFList(runtimeDataModel.types),\n    },\n  }\n}\n\nfunction buildDMMFList<T>(map: Record<string, T>): Array<T & { name: string }> {\n  return Object.entries(map).map(([name, props]) => ({ name, ...props }))\n}\n", "type TypedSqlInternal = {\n  sql: string\n  values: readonly unknown[]\n}\n\nconst internals = new WeakMap<TypedSql<any, any>, TypedSqlInternal>()\nconst TypedSqlMarker = '$$PrismaTypedSql'\n\nexport declare const PrivateResultType: unique symbol\n\nexport class TypedSql<Values extends readonly unknown[], Result> {\n  declare [PrivateResultType]: Result\n\n  constructor(sql: string, values: Values) {\n    internals.set(this, {\n      sql,\n      values,\n    })\n\n    Object.defineProperty(this, TypedSqlMarker, { value: TypedSqlMarker })\n  }\n\n  get sql(): string {\n    return internals.get(this)!.sql\n  }\n\n  get values(): Values {\n    return internals.get(this)!.values as Values\n  }\n}\n\nexport type UnknownTypedSql = TypedSql<unknown[], unknown>\n\nexport function makeTypedQueryFactory(sql: string) {\n  return (...values) => new TypedSql(sql, values)\n}\n\n// used so we could detect typed sql instances, created by different instance of runtime\n// or after hmr trigger\nexport function isTypedSql(value: unknown): value is UnknownTypedSql {\n  return value != null && value[TypedSqlMarker] === TypedSqlMarker\n}\n", "import type { Context } from '@opentelemetry/api'\nimport { GetPrismaClientConfig, RuntimeDataModel } from '@prisma/client-common'\nimport { clearLogs, Debug } from '@prisma/debug'\nimport type { SqlDriverAdapterFactory } from '@prisma/driver-adapter-utils'\nimport { version as enginesVersion } from '@prisma/engines-version/package.json'\nimport { ExtendedSpanOptions, logger, TracingHelper, tryLoadEnvs } from '@prisma/internals'\nimport { AsyncResource } from 'async_hooks'\nimport { EventEmitter } from 'events'\nimport fs from 'fs'\nimport path from 'path'\nimport { RawValue, Sql } from 'sql-template-tag'\n\nimport {\n  PrismaClientInitializationError,\n  PrismaClientKnownRequestError,\n  PrismaClientUnknownRequestError,\n  PrismaClientValidationError,\n} from '.'\nimport { addProperty, createCompositeProxy, removeProperties } from './core/compositeProxy'\nimport { BatchTransactionOptions, Engine, EngineConfig, Options } from './core/engines'\nimport { AccelerateEngineConfig } from './core/engines/accelerate/AccelerateEngine'\nimport { CustomDataProxyFetch } from './core/engines/common/Engine'\nimport { EngineEvent, LogEmitter } from './core/engines/common/types/Events'\nimport type * as Transaction from './core/engines/common/types/Transaction'\nimport { getBatchRequestPayload } from './core/engines/common/utils/getBatchRequestPayload'\nimport { prettyPrintArguments } from './core/errorRendering/prettyPrintArguments'\nimport { prismaGraphQLToJSError } from './core/errors/utils/prismaGraphQLToJSError'\nimport { $extends } from './core/extensions/$extends'\nimport { applyAllResultExtensions } from './core/extensions/applyAllResultExtensions'\nimport { applyQueryExtensions } from './core/extensions/applyQueryExtensions'\nimport { MergedExtensionsList } from './core/extensions/MergedExtensionsList'\nimport { checkPlatformCaching } from './core/init/checkPlatformCaching'\nimport { getDatasourceOverrides } from './core/init/getDatasourceOverrides'\nimport { getEngineInstance } from './core/init/getEngineInstance'\nimport { getPreviewFeatures } from './core/init/getPreviewFeatures'\nimport { resolveDatasourceUrl } from './core/init/resolveDatasourceUrl'\nimport { GlobalOmitOptions, serializeJsonQuery } from './core/jsonProtocol/serializeJsonQuery'\nimport { MetricsClient } from './core/metrics/MetricsClient'\nimport {\n  applyModelsAndClientExtensions,\n  unApplyModelsAndClientExtensions,\n} from './core/model/applyModelsAndClientExtensions'\nimport { rawCommandArgsMapper } from './core/raw-query/rawCommandArgsMapper'\nimport {\n  checkAlter,\n  rawQueryArgsMapper,\n  sqlMiddlewareArgsMapper,\n  templateStringMiddlewareArgsMapper,\n} from './core/raw-query/rawQueryArgsMapper'\nimport { createPrismaPromiseFactory } from './core/request/createPrismaPromise'\nimport {\n  PrismaPromise,\n  PrismaPromiseInteractiveTransaction,\n  PrismaPromiseTransaction,\n} from './core/request/PrismaPromise'\nimport { UserArgs } from './core/request/UserArgs'\nimport { getTracingHelper } from './core/tracing/TracingHelper'\nimport { getLockCountPromise } from './core/transaction/utils/createLockCountPromise'\nimport { itxClientDenyList } from './core/types/exported/itxClientDenyList'\nimport { JsInputValue } from './core/types/exported/JsApi'\nimport { RawQueryArgs } from './core/types/exported/RawQueryArgs'\nimport { UnknownTypedSql } from './core/types/exported/TypedSql'\nimport { getLogLevel } from './getLogLevel'\nimport type { QueryMiddleware, QueryMiddlewareParams } from './MiddlewareHandler'\nimport { MiddlewareHandler } from './MiddlewareHandler'\nimport { RequestHandler } from './RequestHandler'\nimport { CallSite, getCallSite } from './utils/CallSite'\nimport { clientVersion } from './utils/clientVersion'\nimport { validatePrismaClientOptions } from './utils/validatePrismaClientOptions'\nimport { waitForBatch } from './utils/waitForBatch'\n\nconst debug = Debug('prisma:client')\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var NODE_CLIENT: true\n  const TARGET_BUILD_TYPE:\n    | 'binary'\n    | 'library'\n    | 'edge'\n    | 'wasm-engine-edge'\n    | 'wasm-compiler-edge'\n    | 'react-native'\n    | 'client'\n}\n\n// used by esbuild for tree-shaking\ntypeof globalThis === 'object' ? (globalThis.NODE_CLIENT = true) : 0\n\nexport type ErrorFormat = 'pretty' | 'colorless' | 'minimal'\n\nexport type Datasource = { url?: string }\nexport type Datasources = { [name in string]: Datasource }\n\nexport type PrismaClientOptions = {\n  /**\n   * Overwrites the primary datasource url from your schema.prisma file\n   */\n  datasourceUrl?: string\n  /**\n   * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale.\n   */\n  adapter?: SqlDriverAdapterFactory | null\n\n  /**\n   * Overwrites the datasource url from your schema.prisma file\n   */\n  datasources?: Datasources\n\n  /**\n   * @default \"colorless\"\n   */\n  errorFormat?: ErrorFormat\n\n  /**\n   * The default values for Transaction options\n   * maxWait ?= 2000\n   * timeout ?= 5000\n   */\n  transactionOptions?: Transaction.Options\n\n  /**\n   * @example\n   * \\`\\`\\`\n   * // Defaults to stdout\n   * log: ['query', 'info', 'warn']\n   *\n   * // Emit as events\n   * log: [\n   *  { emit: 'stdout', level: 'query' },\n   *  { emit: 'stdout', level: 'info' },\n   *  { emit: 'stdout', level: 'warn' }\n   * ]\n   * \\`\\`\\`\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).\n   */\n  log?: Array<LogLevel | LogDefinition>\n\n  omit?: GlobalOmitOptions\n\n  /**\n   * @internal\n   * You probably don't want to use this. \\`__internal\\` is used by internal tooling.\n   */\n  __internal?: {\n    debug?: boolean\n    engine?: {\n      cwd?: string\n      binaryPath?: string\n      endpoint?: string\n      allowTriggerPanic?: boolean\n    }\n    /** This can be used for testing purposes */\n    configOverride?: (config: GetPrismaClientConfig) => GetPrismaClientConfig\n  }\n}\n\nexport type Unpacker = (data: any) => any\n\nexport type InternalRequestParams = {\n  /**\n   * The original client method being called.\n   * Even though the rootField / operation can be changed,\n   * this method stays as it is, as it's what the user's\n   * code looks like\n   */\n  clientMethod: string // TODO what is this\n  /**\n   * Name of js model that triggered the request. Might be used\n   * for warnings or error messages\n   */\n  jsModelName?: string\n  // Extra headers for data proxy.\n  callsite?: CallSite\n  transaction?: PrismaPromiseTransaction\n  unpacker?: Unpacker // TODO what is this\n  otelParentCtx?: Context\n  /** Used to \"desugar\" a user input into an \"expanded\" one */\n  argsMapper?: (args?: UserArgs) => UserArgs\n\n  /** Used to convert args for middleware and back */\n  middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>\n  /** Used for Accelerate client extension via Data Proxy */\n  customDataProxyFetch?: CustomDataProxyFetch\n} & Omit<QueryMiddlewareParams, 'runInTransaction'>\n\nexport type MiddlewareArgsMapper<RequestArgs, MiddlewareArgs> = {\n  requestArgsToMiddlewareArgs(requestArgs: RequestArgs): MiddlewareArgs\n  middlewareArgsToRequestArgs(middlewareArgs: MiddlewareArgs): RequestArgs\n}\n\nconst noopMiddlewareArgsMapper: MiddlewareArgsMapper<unknown, unknown> = {\n  requestArgsToMiddlewareArgs: (param) => param,\n  middlewareArgsToRequestArgs: (param) => param,\n}\n\n/* Types for Logging */\nexport type LogLevel = 'info' | 'query' | 'warn' | 'error'\nexport type LogDefinition = {\n  level: LogLevel\n  emit: 'stdout' | 'event'\n}\n\nexport type QueryEvent = {\n  timestamp: Date\n  query: string\n  params: string\n  duration: number\n  target: string\n}\n\nexport type LogEvent = {\n  timestamp: Date\n  message: string\n  target: string\n}\n/* End Types for Logging */\n\ntype ExtendedEventType = LogLevel | 'beforeExit'\ntype EventCallback<E extends ExtendedEventType> = [E] extends ['beforeExit']\n  ? () => Promise<void>\n  : [E] extends [LogLevel]\n  ? (event: EngineEvent<E>) => void\n  : never\n\nconst TX_ID = Symbol.for('prisma.client.transaction.id')\n\nconst BatchTxIdCounter = {\n  id: 0,\n  nextId() {\n    return ++this.id\n  },\n}\n\nexport type Client = ReturnType<typeof getPrismaClient> extends new () => infer T ? T : never\n\nexport function getPrismaClient(config: GetPrismaClientConfig) {\n  class PrismaClient {\n    _originalClient = this\n    _runtimeDataModel: RuntimeDataModel\n    _requestHandler: RequestHandler\n    _connectionPromise?: Promise<any>\n    _disconnectionPromise?: Promise<any>\n    _engineConfig: EngineConfig\n    _accelerateEngineConfig: AccelerateEngineConfig\n    _clientVersion: string\n    _errorFormat: ErrorFormat\n    _tracingHelper: TracingHelper\n    _middlewares = new MiddlewareHandler<QueryMiddleware>()\n    _previewFeatures: string[]\n    _activeProvider: string\n    _globalOmit?: GlobalOmitOptions\n    _extensions: MergedExtensionsList\n    /**\n     * @remarks This is used internally by Policy, do not rename or remove\n     */\n    _engine: Engine\n    /**\n     * A fully constructed/applied Client that references the parent\n     * PrismaClient. This is used for Client extensions only.\n     */\n    _appliedParent: PrismaClient\n    _createPrismaPromise = createPrismaPromiseFactory()\n\n    constructor(optionsArg?: PrismaClientOptions) {\n      config = optionsArg?.__internal?.configOverride?.(config) ?? config\n\n      checkPlatformCaching(config)\n\n      if (optionsArg) {\n        validatePrismaClientOptions(optionsArg, config)\n      }\n\n      // prevents unhandled error events when users do not explicitly listen to them\n      const logEmitter = new EventEmitter().on('error', () => {}) as LogEmitter\n\n      this._extensions = MergedExtensionsList.empty()\n      this._previewFeatures = getPreviewFeatures(config)\n      this._clientVersion = config.clientVersion ?? clientVersion\n      this._activeProvider = config.activeProvider\n      this._globalOmit = optionsArg?.omit\n      this._tracingHelper = getTracingHelper()\n      const envPaths = config.relativeEnvPaths && {\n        rootEnvPath:\n          config.relativeEnvPaths.rootEnvPath && path.resolve(config.dirname, config.relativeEnvPaths.rootEnvPath),\n        schemaEnvPath:\n          config.relativeEnvPaths.schemaEnvPath && path.resolve(config.dirname, config.relativeEnvPaths.schemaEnvPath),\n      }\n\n      /**\n       * Initialise and validate the Driver Adapter, if provided.\n       */\n\n      let adapter: SqlDriverAdapterFactory | undefined\n      if (optionsArg?.adapter) {\n        adapter = optionsArg.adapter\n\n        // Note:\n        // - `getConfig(..).datasources[0].provider` can be `postgresql`, `postgres`, `mysql`, or other known providers\n        // - `getConfig(..).datasources[0].activeProvider`, stored in `config.activeProvider`, can be `postgresql`, `mysql`, or other known providers\n        // - `adapter.provider` can be `postgres`, `mysql`, or `sqlite`, and changing this requires changes to Rust as well,\n        //    see https://github.com/prisma/prisma-engines/blob/d116c37d7d27aee74fdd840fc85ab2b45407e5ce/query-engine/driver-adapters/src/types.rs#L22-L23.\n        //\n        // TODO: Normalize these provider names once and for all in Prisma 6.\n        const expectedDriverAdapterProvider =\n          config.activeProvider === 'postgresql'\n            ? 'postgres'\n            : // CockroachDB is only accessible through Postgres driver adapters\n            config.activeProvider === 'cockroachdb'\n            ? 'postgres'\n            : config.activeProvider\n\n        if (adapter.provider !== expectedDriverAdapterProvider) {\n          throw new PrismaClientInitializationError(\n            `The Driver Adapter \\`${adapter.adapterName}\\`, based on \\`${adapter.provider}\\`, is not compatible with the provider \\`${expectedDriverAdapterProvider}\\` specified in the Prisma schema.`,\n            this._clientVersion,\n          )\n        }\n\n        if (optionsArg.datasources || optionsArg.datasourceUrl !== undefined) {\n          throw new PrismaClientInitializationError(\n            `Custom datasource configuration is not compatible with Prisma Driver Adapters. Please define the database connection string directly in the Driver Adapter configuration.`,\n            this._clientVersion,\n          )\n        }\n      }\n\n      const loadedEnv = // for node we load the env from files, for edge only via env injections\n        (NODE_CLIENT && !adapter && envPaths && tryLoadEnvs(envPaths, { conflictCheck: 'none' })) ||\n        config.injectableEdgeEnv?.()\n\n      try {\n        const options: PrismaClientOptions = optionsArg ?? {}\n        const internal = options.__internal ?? {}\n\n        const useDebug = internal.debug === true\n        if (useDebug) {\n          Debug.enable('prisma:client')\n        }\n\n        let cwd = path.resolve(config.dirname, config.relativePath)\n\n        // TODO this logic should not be needed anymore #findSync\n        if (!fs.existsSync(cwd)) {\n          cwd = config.dirname\n        }\n\n        debug('dirname', config.dirname)\n        debug('relativePath', config.relativePath)\n        debug('cwd', cwd)\n\n        const engineConfig = internal.engine || {}\n\n        if (options.errorFormat) {\n          this._errorFormat = options.errorFormat\n        } else if (process.env.NODE_ENV === 'production') {\n          this._errorFormat = 'minimal'\n        } else if (process.env.NO_COLOR) {\n          this._errorFormat = 'colorless'\n        } else {\n          this._errorFormat = 'colorless' // default errorFormat\n        }\n\n        this._runtimeDataModel = config.runtimeDataModel\n\n        this._engineConfig = {\n          cwd,\n          dirname: config.dirname,\n          enableDebugLogs: useDebug,\n          allowTriggerPanic: engineConfig.allowTriggerPanic,\n          prismaPath: engineConfig.binaryPath ?? undefined,\n          engineEndpoint: engineConfig.endpoint,\n          generator: config.generator,\n          showColors: this._errorFormat === 'pretty',\n          logLevel: options.log && (getLogLevel(options.log) as any), // TODO\n          logQueries:\n            options.log &&\n            Boolean(\n              typeof options.log === 'string'\n                ? options.log === 'query'\n                : options.log.find((o) => (typeof o === 'string' ? o === 'query' : o.level === 'query')),\n            ),\n          env: loadedEnv?.parsed ?? {},\n          flags: [],\n          engineWasm: config.engineWasm,\n          compilerWasm: config.compilerWasm,\n          clientVersion: config.clientVersion,\n          engineVersion: config.engineVersion,\n          previewFeatures: this._previewFeatures,\n          activeProvider: config.activeProvider,\n          inlineSchema: config.inlineSchema,\n          overrideDatasources: getDatasourceOverrides(options, config.datasourceNames),\n          inlineDatasources: config.inlineDatasources,\n          inlineSchemaHash: config.inlineSchemaHash,\n          tracingHelper: this._tracingHelper,\n          transactionOptions: {\n            maxWait: options.transactionOptions?.maxWait ?? 2000,\n            timeout: options.transactionOptions?.timeout ?? 5000,\n            isolationLevel: options.transactionOptions?.isolationLevel,\n          },\n          logEmitter,\n          isBundled: config.isBundled,\n          adapter,\n        }\n\n        this._accelerateEngineConfig = {\n          ...this._engineConfig,\n          // share runtime utils to accelerate\n          accelerateUtils: {\n            resolveDatasourceUrl,\n            getBatchRequestPayload,\n            prismaGraphQLToJSError,\n            PrismaClientUnknownRequestError,\n            PrismaClientInitializationError,\n            PrismaClientKnownRequestError,\n            debug: Debug('prisma:client:accelerateEngine'),\n            engineVersion: enginesVersion,\n            clientVersion: config.clientVersion,\n          },\n        }\n\n        debug('clientVersion', config.clientVersion)\n\n        this._engine = getEngineInstance(config, this._engineConfig)\n        this._requestHandler = new RequestHandler(this, logEmitter)\n\n        if (options.log) {\n          for (const log of options.log) {\n            const level = typeof log === 'string' ? log : log.emit === 'stdout' ? log.level : null\n            if (level) {\n              this.$on(level, (event) => {\n                logger.log(`${logger.tags[level] ?? ''}`, (event as LogEvent).message || (event as QueryEvent).query)\n              })\n            }\n          }\n        }\n      } catch (e: any) {\n        e.clientVersion = this._clientVersion\n        throw e\n      }\n\n      // the first client has no parent so it is its own parent client\n      // this is used for extensions to reference their parent client\n      return (this._appliedParent = applyModelsAndClientExtensions(this))\n      // this applied client is also a custom constructor return value\n    }\n\n    get [Symbol.toStringTag]() {\n      return 'PrismaClient'\n    }\n\n    /**\n     * Hook a middleware into the client\n     * @param middleware to hook\n     */\n    $use(middleware: QueryMiddleware) {\n      this._middlewares.use(middleware)\n    }\n\n    $on<E extends ExtendedEventType>(eventType: E, callback: EventCallback<E>): PrismaClient {\n      if (eventType === 'beforeExit') {\n        this._engine.onBeforeExit(callback as EventCallback<'beforeExit'>)\n      } else if (eventType) {\n        this._engineConfig.logEmitter.on(eventType, callback as EventCallback<LogLevel>)\n      }\n      return this\n    }\n\n    $connect() {\n      try {\n        return this._engine.start()\n      } catch (e: any) {\n        e.clientVersion = this._clientVersion\n        throw e\n      }\n    }\n\n    /**\n     * Disconnect from the database\n     */\n    async $disconnect() {\n      try {\n        await this._engine.stop()\n      } catch (e: any) {\n        e.clientVersion = this._clientVersion\n        throw e\n      } finally {\n        // Debug module keeps a list of last 100 logs regardless of environment\n        // variables. This can cause a memory leak. It's especially bad in jest\n        // environment where keeping an error in this list prevents jest sandbox\n        // from being GCed. Clearing logs on disconnect helps to avoid that\n        clearLogs()\n      }\n    }\n\n    /**\n     * Executes a raw query and always returns a number\n     */\n    $executeRawInternal(\n      transaction: PrismaPromiseTransaction | undefined,\n      clientMethod: string,\n      args: RawQueryArgs,\n      middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>,\n    ): Promise<number> {\n      const activeProvider = this._activeProvider\n\n      return this._request({\n        action: 'executeRaw',\n        args,\n        transaction,\n        clientMethod,\n        argsMapper: rawQueryArgsMapper({ clientMethod, activeProvider }),\n        callsite: getCallSite(this._errorFormat),\n        dataPath: [],\n        middlewareArgsMapper,\n      })\n    }\n\n    /**\n     * Executes a raw query provided through a safe tag function\n     * @see https://github.com/prisma/prisma/issues/7142\n     *\n     * @param query\n     * @param values\n     * @returns\n     */\n    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]) {\n      return this._createPrismaPromise((transaction) => {\n        if ((query as TemplateStringsArray).raw !== undefined || (query as Sql).sql !== undefined) {\n          const [sql, argsMapper] = toSql(query, values)\n          checkAlter(\n            this._activeProvider,\n            sql.text,\n            sql.values,\n            Array.isArray(query) ? 'prisma.$executeRaw`<SQL>`' : 'prisma.$executeRaw(sql`<SQL>`)',\n          )\n          return this.$executeRawInternal(transaction, '$executeRaw', sql, argsMapper)\n        }\n\n        throw new PrismaClientValidationError(\n          `\\`$executeRaw\\` is a tag function, please use it like the following:\n\\`\\`\\`\nconst result = await prisma.$executeRaw\\`UPDATE User SET cool = \\${true} WHERE email = \\${'user@email.com'};\\`\n\\`\\`\\`\n\nOr read our docs at https://www.prisma.io/docs/concepts/components/prisma-client/raw-database-access#executeraw\n`,\n          { clientVersion: this._clientVersion },\n        )\n      })\n    }\n\n    /**\n     * Unsafe counterpart of `$executeRaw` that is susceptible to SQL injections\n     * @see https://github.com/prisma/prisma/issues/7142\n     *\n     * @param query\n     * @param values\n     * @returns\n     */\n    $executeRawUnsafe(query: string, ...values: RawValue[]) {\n      return this._createPrismaPromise((transaction) => {\n        checkAlter(this._activeProvider, query, values, 'prisma.$executeRawUnsafe(<SQL>, [...values])')\n        return this.$executeRawInternal(transaction, '$executeRawUnsafe', [query, ...values])\n      })\n    }\n\n    /**\n     * Executes a raw command only for MongoDB\n     *\n     * @param command\n     * @returns\n     */\n    $runCommandRaw(command: Record<string, JsInputValue>) {\n      if (config.activeProvider !== 'mongodb') {\n        throw new PrismaClientValidationError(\n          `The ${config.activeProvider} provider does not support $runCommandRaw. Use the mongodb provider.`,\n          { clientVersion: this._clientVersion },\n        )\n      }\n\n      return this._createPrismaPromise((transaction) => {\n        return this._request({\n          args: command,\n          clientMethod: '$runCommandRaw',\n          dataPath: [],\n          action: 'runCommandRaw',\n          argsMapper: rawCommandArgsMapper,\n          callsite: getCallSite(this._errorFormat),\n          transaction: transaction,\n        })\n      })\n    }\n\n    /**\n     * Executes a raw query and returns selected data\n     */\n    async $queryRawInternal(\n      transaction: PrismaPromiseTransaction | undefined,\n      clientMethod: string,\n      args: RawQueryArgs,\n      middlewareArgsMapper?: MiddlewareArgsMapper<unknown, unknown>,\n    ) {\n      const activeProvider = this._activeProvider\n\n      return this._request({\n        action: 'queryRaw',\n        args,\n        transaction,\n        clientMethod,\n        argsMapper: rawQueryArgsMapper({ clientMethod, activeProvider }),\n        callsite: getCallSite(this._errorFormat),\n        dataPath: [],\n        middlewareArgsMapper,\n      })\n    }\n\n    /**\n     * Executes a raw query provided through a safe tag function\n     * @see https://github.com/prisma/prisma/issues/7142\n     *\n     * @param query\n     * @param values\n     * @returns\n     */\n    $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]) {\n      return this._createPrismaPromise((transaction) => {\n        if ((query as TemplateStringsArray).raw !== undefined || (query as Sql).sql !== undefined) {\n          return this.$queryRawInternal(transaction, '$queryRaw', ...toSql(query, values))\n        }\n\n        throw new PrismaClientValidationError(\n          `\\`$queryRaw\\` is a tag function, please use it like the following:\n\\`\\`\\`\nconst result = await prisma.$queryRaw\\`SELECT * FROM User WHERE id = \\${1} OR email = \\${'user@email.com'};\\`\n\\`\\`\\`\n\nOr read our docs at https://www.prisma.io/docs/concepts/components/prisma-client/raw-database-access#queryraw\n`,\n          { clientVersion: this._clientVersion },\n        )\n      })\n    }\n\n    /**\n     * Counterpart to $queryRaw, that returns strongly typed results\n     * @param typedSql\n     */\n    $queryRawTyped(typedSql: UnknownTypedSql) {\n      return this._createPrismaPromise((transaction) => {\n        if (!this._hasPreviewFlag('typedSql')) {\n          throw new PrismaClientValidationError(\n            '`typedSql` preview feature must be enabled in order to access $queryRawTyped API',\n            { clientVersion: this._clientVersion },\n          )\n        }\n        return this.$queryRawInternal(transaction, '$queryRawTyped', typedSql)\n      })\n    }\n\n    /**\n     * Unsafe counterpart of `$queryRaw` that is susceptible to SQL injections\n     * @see https://github.com/prisma/prisma/issues/7142\n     *\n     * @param query\n     * @param values\n     * @returns\n     */\n    $queryRawUnsafe(query: string, ...values: RawValue[]) {\n      return this._createPrismaPromise((transaction) => {\n        return this.$queryRawInternal(transaction, '$queryRawUnsafe', [query, ...values])\n      })\n    }\n\n    /**\n     * Execute a batch of requests in a transaction\n     * @param requests\n     * @param options\n     */\n    _transactionWithArray({\n      promises,\n      options,\n    }: {\n      promises: Array<PrismaPromise<any>>\n      options?: BatchTransactionOptions\n    }): Promise<any> {\n      const id = BatchTxIdCounter.nextId()\n      const lock = getLockCountPromise(promises.length)\n\n      const requests = promises.map((request, index) => {\n        if (request?.[Symbol.toStringTag] !== 'PrismaPromise') {\n          throw new Error(\n            `All elements of the array need to be Prisma Client promises. Hint: Please make sure you are not awaiting the Prisma client calls you intended to pass in the $transaction function.`,\n          )\n        }\n\n        const isolationLevel = options?.isolationLevel ?? this._engineConfig.transactionOptions.isolationLevel\n        const transaction = { kind: 'batch', id, index, isolationLevel, lock } as const\n        return request.requestTransaction?.(transaction) ?? request\n      })\n\n      return waitForBatch(requests)\n    }\n\n    /**\n     * Perform a long-running transaction\n     * @param callback\n     * @param options\n     * @returns\n     */\n    async _transactionWithCallback({\n      callback,\n      options,\n    }: {\n      callback: (client: Client) => Promise<unknown>\n      options?: Options\n    }) {\n      const headers = { traceparent: this._tracingHelper.getTraceParent() }\n\n      const optionsWithDefaults: Options = {\n        maxWait: options?.maxWait ?? this._engineConfig.transactionOptions.maxWait,\n        timeout: options?.timeout ?? this._engineConfig.transactionOptions.timeout,\n        isolationLevel: options?.isolationLevel ?? this._engineConfig.transactionOptions.isolationLevel,\n      }\n      const info = await this._engine.transaction('start', headers, optionsWithDefaults)\n\n      let result: unknown\n      try {\n        // execute user logic with a proxied the client\n        const transaction = { kind: 'itx', ...info } as const\n\n        result = await callback(this._createItxClient(transaction))\n\n        // it went well, then we commit the transaction\n        await this._engine.transaction('commit', headers, info)\n      } catch (e: any) {\n        // it went bad, then we rollback the transaction\n        await this._engine.transaction('rollback', headers, info).catch(() => {})\n\n        throw e // silent rollback, throw original error\n      }\n\n      return result\n    }\n\n    _createItxClient(transaction: PrismaPromiseInteractiveTransaction): Client {\n      return createCompositeProxy(\n        applyModelsAndClientExtensions(\n          createCompositeProxy(unApplyModelsAndClientExtensions(this), [\n            addProperty('_appliedParent', () => this._appliedParent._createItxClient(transaction)),\n            addProperty('_createPrismaPromise', () => createPrismaPromiseFactory(transaction)),\n            addProperty(TX_ID, () => transaction.id),\n          ]),\n        ),\n        [removeProperties(itxClientDenyList)],\n      )\n    }\n\n    /**\n     * Execute queries within a transaction\n     * @param input a callback or a query list\n     * @param options to set timeouts (callback)\n     * @returns\n     */\n    $transaction(input: any, options?: any) {\n      let callback: () => Promise<any>\n\n      // iTx - Interactive transaction\n      if (typeof input === 'function') {\n        if (this._engineConfig.adapter?.adapterName === '@prisma/adapter-d1') {\n          callback = () => {\n            throw new Error(\n              'Cloudflare D1 does not support interactive transactions. We recommend you to refactor your queries with that limitation in mind, and use batch transactions with `prisma.$transactions([])` where applicable.',\n            )\n          }\n        } else {\n          callback = () => this._transactionWithCallback({ callback: input, options })\n        }\n      } else {\n        // Batch transaction\n        callback = () => this._transactionWithArray({ promises: input, options })\n      }\n\n      const spanOptions = {\n        name: 'transaction',\n        attributes: { method: '$transaction' },\n      }\n\n      return this._tracingHelper.runInChildSpan(spanOptions, callback)\n    }\n\n    /**\n     * Runs the middlewares over params before executing a request\n     * @param internalParams\n     * @returns\n     */\n    _request(internalParams: InternalRequestParams): Promise<any> {\n      // this is the otel context that is active at the callsite\n      internalParams.otelParentCtx = this._tracingHelper.getActiveContext()\n      const middlewareArgsMapper = internalParams.middlewareArgsMapper ?? noopMiddlewareArgsMapper\n\n      // make sure that we don't leak extra properties to users\n      const params: QueryMiddlewareParams = {\n        args: middlewareArgsMapper.requestArgsToMiddlewareArgs(internalParams.args),\n        dataPath: internalParams.dataPath,\n        runInTransaction: Boolean(internalParams.transaction),\n        action: internalParams.action,\n        model: internalParams.model,\n      }\n\n      // span options for opentelemetry instrumentation\n      const spanOptions = {\n        middleware: {\n          name: 'middleware',\n          middleware: true,\n          attributes: { method: '$use' },\n          active: false,\n        } as ExtendedSpanOptions,\n        operation: {\n          name: 'operation',\n          attributes: {\n            method: params.action,\n            model: params.model,\n            name: params.model ? `${params.model}.${params.action}` : params.action,\n          },\n        } as ExtendedSpanOptions,\n      }\n\n      let index = -1\n      // prepare recursive fn that will pipe params through middlewares\n      const consumer = async (changedMiddlewareParams: QueryMiddlewareParams) => {\n        // if this `next` was called and there's some more middlewares\n        const nextMiddleware = this._middlewares.get(++index)\n\n        if (nextMiddleware) {\n          // we pass the modified params down to the next one, & repeat\n          // calling `next` calls the consumer again with the new params\n          return this._tracingHelper.runInChildSpan(spanOptions.middleware, (span) => {\n            // we call `span.end()` _before_ calling the next middleware\n            return nextMiddleware(changedMiddlewareParams, (p) => (span?.end(), consumer(p)))\n          })\n        }\n\n        // no middleware? then we just proceed with request execution\n        // before we send the execution request, we use the changed params\n        const { runInTransaction, args, ...changedRequestParams } = changedMiddlewareParams\n        const requestParams = {\n          ...internalParams,\n          ...changedRequestParams,\n        }\n\n        if (args) {\n          requestParams.args = middlewareArgsMapper.middlewareArgsToRequestArgs(args)\n        }\n\n        // if middleware switched off `runInTransaction`, unset `transaction`\n        // property on request as well so it will be executed outside of the tx\n        if (internalParams.transaction !== undefined && runInTransaction === false) {\n          delete requestParams.transaction // client extensions check for this\n        }\n\n        const result = await applyQueryExtensions(this, requestParams) // also executes the query\n        if (!requestParams.model) {\n          return result\n        }\n        return applyAllResultExtensions({\n          result,\n          modelName: requestParams.model,\n          args: requestParams.args,\n          extensions: this._extensions,\n          runtimeDataModel: this._runtimeDataModel,\n          globalOmit: this._globalOmit,\n        })\n      }\n\n      return this._tracingHelper.runInChildSpan(spanOptions.operation, () => {\n        if (NODE_CLIENT) {\n          // https://github.com/prisma/prisma/issues/3148 not for edge client\n          const asyncRes = new AsyncResource('prisma-client-request')\n          return asyncRes.runInAsyncScope(() => consumer(params))\n        }\n\n        return consumer(params)\n      })\n    }\n\n    async _executeRequest({\n      args,\n      clientMethod,\n      dataPath,\n      callsite,\n      action,\n      model,\n      argsMapper,\n      transaction,\n      unpacker,\n      otelParentCtx,\n      customDataProxyFetch,\n    }: InternalRequestParams) {\n      try {\n        // execute argument transformation before execution\n        args = argsMapper ? argsMapper(args) : args\n\n        const spanOptions: ExtendedSpanOptions = {\n          name: 'serialize',\n        }\n\n        const message = this._tracingHelper.runInChildSpan(spanOptions, () =>\n          serializeJsonQuery({\n            modelName: model,\n            runtimeDataModel: this._runtimeDataModel,\n            action,\n            args,\n            clientMethod,\n            callsite,\n            extensions: this._extensions,\n            errorFormat: this._errorFormat,\n            clientVersion: this._clientVersion,\n            previewFeatures: this._previewFeatures,\n            globalOmit: this._globalOmit,\n          }),\n        )\n\n        // as prettyPrintArguments takes a bit of compute\n        // we only want to do it, if debug is enabled for 'prisma-client'\n        if (Debug.enabled('prisma:client')) {\n          debug(`Prisma Client call:`)\n          debug(`prisma.${clientMethod}(${prettyPrintArguments(args)})`)\n          debug(`Generated request:`)\n          debug(JSON.stringify(message, null, 2) + '\\n')\n        }\n\n        if (transaction?.kind === 'batch') {\n          /** @see {@link getLockCountPromise} */\n          await transaction.lock\n        }\n\n        return this._requestHandler.request({\n          protocolQuery: message,\n          modelName: model,\n          action,\n          clientMethod,\n          dataPath,\n          callsite,\n          args,\n          extensions: this._extensions,\n          transaction,\n          unpacker,\n          otelParentCtx,\n          otelChildCtx: this._tracingHelper.getActiveContext(),\n          globalOmit: this._globalOmit,\n          customDataProxyFetch,\n        })\n      } catch (e) {\n        e.clientVersion = this._clientVersion\n        throw e\n      }\n    }\n\n    $metrics = new MetricsClient(this)\n\n    /**\n     * Shortcut for checking a preview flag\n     * @param feature preview flag\n     * @returns\n     */\n    _hasPreviewFlag(feature: string) {\n      return !!this._engineConfig.previewFeatures?.includes(feature)\n    }\n\n    $applyPendingMigrations(): Promise<void> {\n      return this._engine.applyPendingMigrations()\n    }\n\n    $extends = $extends\n  }\n\n  return PrismaClient\n}\n\nfunction toSql(query: TemplateStringsArray | Sql, values: unknown[]): [Sql, MiddlewareArgsMapper<unknown, unknown>] {\n  if (isTemplateStringArray(query)) {\n    return [new Sql(query, values), templateStringMiddlewareArgsMapper]\n  }\n\n  return [query, sqlMiddlewareArgsMapper]\n}\n\nfunction isTemplateStringArray(value: unknown): value is TemplateStringsArray {\n  return Array.isArray(value) && Array.isArray(value['raw'])\n}\n", "", "/**\n * Values supported by SQL engine.\n */\nexport type Value = unknown;\n\n/**\n * Supported value or SQL instance.\n */\nexport type RawValue = Value | Sql;\n\n/**\n * A SQL instance can be nested within each other to build SQL strings.\n */\nexport class Sql {\n  readonly values: Value[];\n  readonly strings: string[];\n\n  constructor(rawStrings: readonly string[], rawValues: readonly RawValue[]) {\n    if (rawStrings.length - 1 !== rawValues.length) {\n      if (rawStrings.length === 0) {\n        throw new TypeError(\"Expected at least 1 string\");\n      }\n\n      throw new TypeError(\n        `Expected ${rawStrings.length} strings to have ${\n          rawStrings.length - 1\n        } values`,\n      );\n    }\n\n    const valuesLength = rawValues.reduce<number>(\n      (len, value) => len + (value instanceof Sql ? value.values.length : 1),\n      0,\n    );\n\n    this.values = new Array(valuesLength);\n    this.strings = new Array(valuesLength + 1);\n\n    this.strings[0] = rawStrings[0];\n\n    // Iterate over raw values, strings, and children. The value is always\n    // positioned between two strings, e.g. `index + 1`.\n    let i = 0,\n      pos = 0;\n    while (i < rawValues.length) {\n      const child = rawValues[i++];\n      const rawString = rawStrings[i];\n\n      // Check for nested `sql` queries.\n      if (child instanceof Sql) {\n        // Append child prefix text to current string.\n        this.strings[pos] += child.strings[0];\n\n        let childIndex = 0;\n        while (childIndex < child.values.length) {\n          this.values[pos++] = child.values[childIndex++];\n          this.strings[pos] = child.strings[childIndex];\n        }\n\n        // Append raw string to current string.\n        this.strings[pos] += rawString;\n      } else {\n        this.values[pos++] = child;\n        this.strings[pos] = rawString;\n      }\n    }\n  }\n\n  get sql() {\n    const len = this.strings.length;\n    let i = 1;\n    let value = this.strings[0];\n    while (i < len) value += `?${this.strings[i++]}`;\n    return value;\n  }\n\n  get statement() {\n    const len = this.strings.length;\n    let i = 1;\n    let value = this.strings[0];\n    while (i < len) value += `:${i}${this.strings[i++]}`;\n    return value;\n  }\n\n  get text() {\n    const len = this.strings.length;\n    let i = 1;\n    let value = this.strings[0];\n    while (i < len) value += `$${i}${this.strings[i++]}`;\n    return value;\n  }\n\n  inspect() {\n    return {\n      sql: this.sql,\n      statement: this.statement,\n      text: this.text,\n      values: this.values,\n    };\n  }\n}\n\n/**\n * Create a SQL query for a list of values.\n */\nexport function join(\n  values: readonly RawValue[],\n  separator = \",\",\n  prefix = \"\",\n  suffix = \"\",\n) {\n  if (values.length === 0) {\n    throw new TypeError(\n      \"Expected `join([])` to be called with an array of multiple elements, but got an empty array\",\n    );\n  }\n\n  return new Sql(\n    [prefix, ...Array(values.length - 1).fill(separator), suffix],\n    values,\n  );\n}\n\n/**\n * Create a SQL query for a list of structured values.\n */\nexport function bulk(\n  data: ReadonlyArray<ReadonlyArray<RawValue>>,\n  separator = \",\",\n  prefix = \"\",\n  suffix = \"\",\n) {\n  const length = data.length && data[0].length;\n\n  if (length === 0) {\n    throw new TypeError(\n      \"Expected `bulk([][])` to be called with a nested array of multiple elements, but got an empty array\",\n    );\n  }\n\n  const values = data.map((item, index) => {\n    if (item.length !== length) {\n      throw new TypeError(\n        `Expected \\`bulk([${index}][])\\` to have a length of ${length}, but got ${item.length}`,\n      );\n    }\n\n    return new Sql([\"(\", ...Array(item.length - 1).fill(separator), \")\"], item);\n  });\n\n  return new Sql(\n    [prefix, ...Array(values.length - 1).fill(separator), suffix],\n    values,\n  );\n}\n\n/**\n * Create raw SQL statement.\n */\nexport function raw(value: string) {\n  return new Sql([value], []);\n}\n\n/**\n * Placeholder value for \"no text\".\n */\nexport const empty = raw(\"\");\n\n/**\n * Create a SQL object from a template string.\n */\nexport default function sql(\n  strings: readonly string[],\n  ...values: readonly RawValue[]\n) {\n  return new Sql(strings, values);\n}\n", "export { addObjectProperties as addObjectProperties } from './addObjectProperties'\nexport { addProperty } from './addProperty'\nexport { cacheProperties } from './cacheProperties'\nexport { type CompositeProxyLayer, createCompositeProxy } from './createCompositeProxy'\nexport { removeProperties } from './removeProperties'\n", "import type { CompositeProxyLayer } from './createCompositeProxy'\n\n/**\n * Composite proxy layer that forwards all reads\n * to provided object\n *\n * @param object\n * @returns\n */\nexport function addObjectProperties(object: object): CompositeProxyLayer {\n  return {\n    getKeys() {\n      return Object.keys(object)\n    },\n\n    getPropertyValue(key) {\n      return object[key]\n    },\n  }\n}\n", "import { CompositeProxyLayer } from './createCompositeProxy'\n\n/**\n * Composite proxy layer, that adds a single property to the target\n * @param key  the name of the property\n * @param factory the function that returns the value of the property\n * @returns\n */\nexport function addProperty(key: string | symbol, factory: () => unknown): CompositeProxyLayer {\n  return {\n    getKeys() {\n      return [key]\n    },\n\n    getPropertyValue() {\n      return factory()\n    },\n  }\n}\n", "import { Cache } from '@prisma/client-common'\n\nimport { CompositeProxyLayer } from './createCompositeProxy'\n\n/**\n * Composite proxy layer that adds caching to another\n * layer.\n *\n * @param baseLayer\n * @returns\n */\nexport function cacheProperties<KeyType extends string | symbol>(\n  baseLayer: CompositeProxyLayer<KeyType>,\n): CompositeProxyLayer<KeyType> {\n  const cache = new Cache<KeyType, unknown>()\n  return {\n    getKeys() {\n      return baseLayer.getKeys()\n    },\n\n    getPropertyValue(key) {\n      return cache.getOrCreate(key, () => baseLayer.getPropertyValue(key))\n    },\n\n    getPropertyDescriptor(key) {\n      return baseLayer.getPropertyDescriptor?.(key)\n    },\n  }\n}\n", "import { defaultPropertyDescriptor } from '../model/utils/defaultProxyHandlers'\n\nexport interface CompositeProxyLayer<KeyType extends string | symbol = string | symbol> {\n  /**\n   * Returns a list of keys, defined by a layer\n   */\n  getKeys(): ReadonlyArray<KeyType>\n\n  /**\n   * Returns a value for a property for a given key (one of the keys, returned\n   * from `getKeys`)\n   * @param key\n   */\n  getPropertyValue(key: KeyType): unknown\n\n  /**\n   * Gets a descriptor for given property. If not implemented or undefined is returned, { enumerable: true, writeable: true, configurable: true} is defaulted\n   * is used\n   * @param key\n   */\n  getPropertyDescriptor?(key: KeyType): PropertyDescriptor | undefined\n\n  /**\n   * Allows to override results for hasOwnProperty/in operator. If not implemented, returns true\n   * @param key\n   */\n  has?(key: KeyType): boolean\n}\n\nconst customInspect = Symbol.for('nodejs.util.inspect.custom')\n\n/**\n * Creates a proxy from a set of layers.\n * Each layer is a building for a proxy (potentially, reusable) that\n * can add or override property on top of the target.\n * When multiple layers define the same property, last one wins\n *\n * @param target\n * @param layers\n * @returns\n */\nexport function createCompositeProxy<T extends object>(target: T, layers: CompositeProxyLayer[]): T {\n  const keysToLayerMap = mapKeysToLayers(layers)\n  const overwrittenKeys = new Set<string | symbol>()\n\n  const proxy = new Proxy(target, {\n    get(target, prop) {\n      // explicit overwrites of a property have highest priority\n      if (overwrittenKeys.has(prop)) {\n        return target[prop]\n      }\n\n      // next, we see if property is defined in one of the layers\n      const layer = keysToLayerMap.get(prop)\n      if (layer) {\n        return layer.getPropertyValue(prop)\n      }\n\n      // finally, we read a prop from target\n      return target[prop]\n    },\n\n    has(target, prop) {\n      if (overwrittenKeys.has(prop)) {\n        return true\n      }\n      const layer = keysToLayerMap.get(prop)\n      if (layer) {\n        return layer.has?.(prop) ?? true\n      }\n\n      return Reflect.has(target, prop)\n    },\n\n    ownKeys(target) {\n      const targetKeys = getExistingKeys(Reflect.ownKeys(target), keysToLayerMap)\n      const layerKeys = getExistingKeys(Array.from(keysToLayerMap.keys()), keysToLayerMap)\n      return [...new Set([...targetKeys, ...layerKeys, ...overwrittenKeys])]\n    },\n\n    set(target, prop, value) {\n      const layer = keysToLayerMap.get(prop)\n      if (layer?.getPropertyDescriptor?.(prop)?.writable === false) {\n        return false\n      }\n      overwrittenKeys.add(prop)\n      return Reflect.set(target, prop, value)\n    },\n\n    getOwnPropertyDescriptor(target, prop) {\n      const original = Reflect.getOwnPropertyDescriptor(target, prop)\n      if (original && !original.configurable) {\n        // non-configurable properties can not change descriptors\n        return original\n      }\n\n      const layer = keysToLayerMap.get(prop)\n      if (layer) {\n        if (layer.getPropertyDescriptor) {\n          return {\n            ...defaultPropertyDescriptor,\n            ...layer?.getPropertyDescriptor(prop),\n          }\n        }\n        return defaultPropertyDescriptor\n      }\n\n      return original\n    },\n\n    defineProperty(target, property, attributes) {\n      overwrittenKeys.add(property)\n      return Reflect.defineProperty(target, property, attributes)\n    },\n\n    getPrototypeOf: () => Object.prototype,\n  })\n\n  proxy[customInspect] = function () {\n    // Default node.js console.log and util.inspect deliberately avoid triggering any proxy traps and log\n    // original target. This is not we want for our usecases: we want console.log to output the result as if\n    // the properties actually existed on the target. Using spread operator forces us to produce correct object\n    const toLog = { ...this }\n    delete toLog[customInspect]\n    return toLog\n  }\n  return proxy\n}\n\nfunction mapKeysToLayers(layers: CompositeProxyLayer[]) {\n  const keysToLayerMap = new Map<string | symbol, CompositeProxyLayer>()\n  for (const layer of layers) {\n    const keys = layer.getKeys()\n    for (const key of keys) {\n      keysToLayerMap.set(key, layer)\n    }\n  }\n  return keysToLayerMap\n}\n\nfunction getExistingKeys(keys: Array<string | symbol>, keysToLayerMap: Map<string | symbol, CompositeProxyLayer>) {\n  return keys.filter((key) => {\n    const layer = keysToLayerMap.get(key)\n    return layer?.has?.(key) ?? true\n  })\n}\n", "export const defaultPropertyDescriptor = {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n}\n\nexport function defaultProxyHandlers<T extends object>(ownKeys: (string | symbol)[]) {\n  const _ownKeys = new Set(ownKeys)\n  return {\n    getPrototypeOf: () => Object.prototype,\n    getOwnPropertyDescriptor: () => defaultPropertyDescriptor,\n    has: (target: T, prop: string | symbol) => _ownKeys.has(prop),\n    set: (target: T, prop: string | symbol, value: any) => {\n      return _ownKeys.add(prop) && Reflect.set(target, prop, value)\n    },\n    ownKeys: () => [..._ownKeys],\n  } as const\n}\n", "import { CompositeProxyLayer } from './createCompositeProxy'\n\nexport function removeProperties(keys: ReadonlyArray<string | symbol>): CompositeProxyLayer {\n  return {\n    getKeys() {\n      return keys\n    },\n\n    has() {\n      return false\n    },\n\n    getPropertyValue() {\n      return undefined\n    },\n  }\n}\n", "import { TransactionOptions } from '../Engine'\nimport { JsonQuery } from '../types/JsonProtocol'\nimport { QueryEngineBatchRequest } from '../types/QueryEngine'\n\nexport function getBatchRequestPayload(\n  batch: JsonQuery[],\n  transaction?: TransactionOptions<unknown>,\n): QueryEngineBatchRequest {\n  return {\n    batch,\n    transaction: transaction?.kind === 'batch' ? { isolationLevel: transaction.options.isolationLevel } : undefined,\n  }\n}\n", "import { Writer } from '@prisma/ts-builders'\n\nimport { JsArgs } from '../types/exported/JsApi'\nimport { buildArgumentsRenderingTree } from './ArgumentsRenderingTree'\nimport { inactiveColors } from './base'\n\nexport function prettyPrintArguments(args?: JsArgs): string {\n  if (args === undefined) {\n    return ''\n  }\n  const tree = buildArgumentsRenderingTree(args)\n  const writer = new Writer(0, { colors: inactiveColors })\n  return writer.write(tree).toString()\n}\n", "import { RequestError } from '../../engines/common/types/RequestError'\nimport { PrismaClientKnownRequestError } from '../PrismaClientKnownRequestError'\nimport { PrismaClientUnknownRequestError } from '../PrismaClientUnknownRequestError'\n\nconst TOO_MANY_CONNECTIONS_ERROR = 'P2037'\n\nexport function prismaGraphQLToJSError(\n  { error, user_facing_error }: RequestError,\n  clientVersion: string,\n  activeProvider: string,\n): PrismaClientKnownRequestError | PrismaClientUnknownRequestError {\n  if (user_facing_error.error_code) {\n    return new PrismaClientKnownRequestError(getKnownErrorMessage(user_facing_error, activeProvider), {\n      code: user_facing_error.error_code,\n      clientVersion,\n      meta: user_facing_error.meta,\n      batchRequestIdx: user_facing_error.batch_request_idx,\n    })\n  }\n\n  return new PrismaClientUnknownRequestError(error, {\n    clientVersion,\n    batchRequestIdx: user_facing_error.batch_request_idx,\n  })\n}\n\nfunction getKnownErrorMessage(userFacingError: RequestError['user_facing_error'], activeProvider: string) {\n  let message = userFacingError.message\n  if (\n    (activeProvider === 'postgresql' || activeProvider === 'postgres' || activeProvider === 'mysql') &&\n    userFacingError.error_code === TOO_MANY_CONNECTIONS_ERROR\n  ) {\n    message +=\n      '\\nPrisma Accelerate has built-in connection pooling to prevent such errors: https://pris.ly/client/error-accelerate'\n  }\n\n  return message\n}\n", "import { Client } from '../../getPrismaClient'\nimport { AccelerateEngine } from '../engines/accelerate/AccelerateEngine'\nimport { applyModelsAndClientExtensions } from '../model/applyModelsAndClientExtensions'\nimport { ExtensionArgs } from '../types/exported'\n\n/**\n * @param this\n */\nexport function $extends(this: Client, extension: ExtensionArgs | ((client: Client) => Client)): Client {\n  if (typeof extension === 'function') {\n    return extension(this)\n  }\n\n  if (extension.client?.__AccelerateEngine) {\n    const Engine = extension.client.__AccelerateEngine as typeof AccelerateEngine\n    this._originalClient._engine = new Engine(this._originalClient._accelerateEngineConfig)\n  }\n\n  const newClient = Object.create(this._originalClient, {\n    _extensions: { value: this._extensions.append(extension) },\n    _appliedParent: { value: this, configurable: true },\n    $use: { value: undefined },\n    $on: { value: undefined },\n  }) as Client\n\n  return applyModelsAndClientExtensions(newClient)\n}\n", "import type { Client } from '../../getPrismaClient'\nimport {\n  addObjectProperties,\n  addProperty,\n  cacheProperties,\n  CompositeProxyLayer,\n  createCompositeProxy,\n} from '../compositeProxy'\nimport { applyModel } from './applyModel'\nimport { dmmfToJSModelName } from './utils/dmmfToJSModelName'\nimport { jsToDMMFModelName } from './utils/jsToDMMFModelName'\n\n// symbol we use for storing raw, unproxied\n// client instance, so we later can retrieve it\n// via `unapplyModels` methods\nconst rawClient = Symbol()\n\n/**\n * Dynamically creates a model proxy interface for a give name. For each prop\n * accessed on this proxy, it will lookup the dmmf to find if that model exists.\n * If it is the case, it will create a proxy for that model via {@link applyModel}.\n * @param client to create the proxy around\n * @returns a proxy to access models\n */\nexport function applyModelsAndClientExtensions(client: Client) {\n  const layers = [\n    rootLayer(client),\n    modelsLayer(client),\n    addProperty(rawClient, () => client),\n    addProperty('$parent', () => client._appliedParent),\n  ]\n  const clientExtensions = client._extensions.getAllClientExtensions()\n  if (clientExtensions) {\n    layers.push(addObjectProperties(clientExtensions))\n  }\n  return createCompositeProxy(client, layers)\n}\n\nfunction rootLayer(client: Client): CompositeProxyLayer {\n  const prototype = Object.getPrototypeOf(client._originalClient)\n  const allKeys = [...new Set(Object.getOwnPropertyNames(prototype))]\n\n  return {\n    getKeys() {\n      return allKeys\n    },\n\n    getPropertyValue(prop) {\n      return client[prop]\n    },\n  }\n}\n\nfunction modelsLayer(client: Client): CompositeProxyLayer {\n  const dmmfModelKeys = Object.keys(client._runtimeDataModel.models)\n  const jsModelKeys = dmmfModelKeys.map(dmmfToJSModelName)\n  const allKeys = [...new Set(dmmfModelKeys.concat(jsModelKeys))]\n\n  return cacheProperties({\n    getKeys() {\n      return allKeys\n    },\n\n    getPropertyValue(prop) {\n      const dmmfModelName = jsToDMMFModelName(prop)\n      // creates a new model proxy on the fly and caches it\n      if (client._runtimeDataModel.models[dmmfModelName] !== undefined) {\n        return applyModel(client, dmmfModelName)\n      }\n\n      // above silently failed if model name is lower cased\n      if (client._runtimeDataModel.models[prop] !== undefined) {\n        return applyModel(client, prop)\n      }\n\n      return undefined\n    },\n\n    getPropertyDescriptor(key) {\n      if (!jsModelKeys.includes(key)) {\n        return { enumerable: false }\n      }\n\n      return undefined\n    },\n  })\n}\n\nexport function unApplyModelsAndClientExtensions(client: Client): Client {\n  if (client[rawClient]) {\n    return client[rawClient]\n  }\n  return client\n}\n", "import * as DMMF from '@prisma/dmmf'\nimport type { O } from 'ts-toolbelt'\n\nimport { type Client, type InternalRequestParams } from '../../getPrismaClient'\nimport { getCallSite } from '../../utils/CallSite'\nimport {\n  addObjectProperties,\n  addProperty,\n  cacheProperties,\n  CompositeProxyLayer,\n  createCompositeProxy,\n} from '../compositeProxy'\nimport type { PrismaPromise } from '../request/PrismaPromise'\nimport type { UserArgs } from '../request/UserArgs'\nimport { applyAggregates } from './applyAggregates'\nimport { applyFieldsProxy } from './applyFieldsProxy'\nimport { applyFluent } from './applyFluent'\nimport { dmmfToJSModelName } from './utils/dmmfToJSModelName'\n\nexport type ModelAction = (\n  paramOverrides: O.Optional<InternalRequestParams>,\n) => (userArgs?: UserArgs) => PrismaPromise<unknown>\n\nconst fluentProps = [\n  'findUnique',\n  'findUniqueOrThrow',\n  'findFirst',\n  'findFirstOrThrow',\n  'create',\n  'update',\n  'upsert',\n  'delete',\n] as const\nconst aggregateProps = ['aggregate', 'count', 'groupBy'] as const\n\n/**\n * Dynamically creates a model interface via a proxy.\n * @param client to trigger the request execution\n * @param dmmfModelName the dmmf name of the model\n * @returns\n */\nexport function applyModel(client: Client, dmmfModelName: string) {\n  const modelExtensions = client._extensions.getAllModelExtensions(dmmfModelName) ?? {}\n\n  const layers = [\n    modelActionsLayer(client, dmmfModelName),\n    fieldsPropertyLayer(client, dmmfModelName),\n    addObjectProperties(modelExtensions),\n    addProperty('name', () => dmmfModelName),\n    addProperty('$name', () => dmmfModelName),\n    addProperty('$parent', () => client._appliedParent),\n  ]\n\n  return createCompositeProxy({}, layers)\n}\n\n/**\n * Dynamically creates a model interface via a proxy.\n * @param client to trigger the request execution\n * @param dmmfModelName the dmmf name of the model\n * @returns\n */\nfunction modelActionsLayer(client: Client, dmmfModelName: string): CompositeProxyLayer<string> {\n  // we use the javascript model name for display purposes\n  const jsModelName = dmmfToJSModelName(dmmfModelName)\n  const ownKeys = Object.keys(DMMF.ModelAction).concat('count')\n\n  return {\n    getKeys() {\n      return ownKeys\n    },\n\n    getPropertyValue(key) {\n      const dmmfActionName = key as DMMF.ModelAction\n\n      // we return a function as the model action that we want to expose\n      // it takes user args and executes the request in a Prisma Promise\n      const action = (paramOverrides: O.Optional<InternalRequestParams>) => (userArgs?: UserArgs) => {\n        const callSite = getCallSite(client._errorFormat) // used for showing better errors\n\n        return client._createPrismaPromise(\n          (transaction) => {\n            const params: InternalRequestParams = {\n              // data and its dataPath for nested results\n              args: userArgs,\n              dataPath: [],\n\n              // action name and its related model\n              action: dmmfActionName,\n              model: dmmfModelName,\n\n              // method name for display only\n              clientMethod: `${jsModelName}.${key}`,\n              jsModelName,\n\n              // transaction information\n              transaction,\n\n              // stack trace\n              callsite: callSite,\n            }\n\n            return client._request({ ...params, ...paramOverrides })\n          },\n          {\n            action: dmmfActionName,\n            args: userArgs,\n            model: dmmfModelName,\n          },\n        )\n      }\n\n      // we give the control over action for building the fluent api\n      if ((fluentProps as readonly string[]).includes(dmmfActionName)) {\n        return applyFluent(client, dmmfModelName, action)\n      }\n\n      // we handle the edge case of aggregates that need extra steps\n      if (isValidAggregateName(key)) {\n        return applyAggregates(client, key, action)\n      }\n\n      return action({}) // and by default, don't override any params\n    },\n  }\n}\n\nfunction isValidAggregateName(action: string): action is (typeof aggregateProps)[number] {\n  return (aggregateProps as readonly string[]).includes(action)\n}\n\nfunction fieldsPropertyLayer(client: Client, dmmfModelName: string) {\n  return cacheProperties(\n    addProperty('fields', () => {\n      const model = client._runtimeDataModel.models[dmmfModelName]\n      return applyFieldsProxy(dmmfModelName, model)\n    }),\n  )\n}\n", "import { pathToPosix } from '@prisma/internals'\nimport * as stackTraceParser from 'stacktrace-parser'\n\nimport { ErrorFormat } from '../getPrismaClient'\n\ndeclare global {\n  /**\n   * a global variable that is injected by us via jest to make our snapshots\n   * work in clients that cannot read from disk (e.g. wasm or edge clients)\n   */\n  let $EnabledCallSite: typeof EnabledCallSite | undefined\n}\n\nexport type LocationInFile = {\n  fileName: string\n  lineNumber: number | null\n  columnNumber: number | null\n}\n\nexport interface CallSite {\n  getLocation(): LocationInFile | null\n}\n\nclass DisabledCallSite implements CallSite {\n  getLocation(): LocationInFile | null {\n    return null\n  }\n}\n\nexport class EnabledCallSite implements CallSite {\n  private _error: Error\n  constructor() {\n    this._error = new Error()\n  }\n  getLocation(): LocationInFile | null {\n    const stack = this._error.stack\n    if (!stack) {\n      return null\n    }\n    const stackFrames = stackTraceParser.parse(stack)\n    // TODO: more resilient logic to check that it's not relative to cwd\n    const frame = stackFrames.find((t) => {\n      // Here we are trying to find the location in the user's code which caused the error\n      if (!t.file) {\n        return false\n      }\n\n      // convert windows path to posix path\n      const posixFile = pathToPosix(t.file)\n      return (\n        posixFile !== '<anonymous>' && // Ignore as we can not read an <anonymous> file\n        !posixFile.includes('@prisma') && // Internal, unbundled code\n        !posixFile.includes('/packages/client/src/runtime/') && // Runtime sources when source maps are used\n        !posixFile.endsWith('/runtime/binary.js') && // Bundled runtimes\n        !posixFile.endsWith('/runtime/library.js') &&\n        !posixFile.endsWith('/runtime/edge.js') &&\n        !posixFile.endsWith('/runtime/edge-esm.js') &&\n        !posixFile.startsWith('internal/') && // We don't want internal nodejs files\n        !t.methodName.includes('new ') && // \"new CallSite\" call and maybe other constructors\n        !t.methodName.includes('getCallSite') && // getCallSite function from this module\n        !t.methodName.includes('Proxy.') && // Model proxies\n        t.methodName.split('.').length < 4\n      )\n    })\n\n    if (!frame || !frame.file) {\n      return null\n    }\n\n    return {\n      fileName: frame.file,\n      lineNumber: frame.lineNumber,\n      columnNumber: frame.column,\n    }\n  }\n}\n\nexport function getCallSite(errorFormat: ErrorFormat): CallSite {\n  if (\n    errorFormat === 'minimal' ||\n    TARGET_BUILD_TYPE === 'wasm-engine-edge' ||\n    TARGET_BUILD_TYPE === 'wasm-compiler-edge' ||\n    TARGET_BUILD_TYPE === 'edge'\n  ) {\n    if (typeof $EnabledCallSite === 'function' && errorFormat !== 'minimal') {\n      return new $EnabledCallSite()\n    } else {\n      return new DisabledCallSite()\n    }\n  } else {\n    return new EnabledCallSite()\n  }\n}\n", "var UNKNOWN_FUNCTION = '<unknown>';\n/**\n * This parses the different stack traces and puts them into one format\n * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)\n */\n\nfunction parse(stackString) {\n  var lines = stackString.split('\\n');\n  return lines.reduce(function (stack, line) {\n    var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);\n\n    if (parseResult) {\n      stack.push(parseResult);\n    }\n\n    return stack;\n  }, []);\n}\nvar chromeRe = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|rsc|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRe = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nfunction parseChrome(line) {\n  var parts = chromeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n\n  var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n  var submatch = chromeEvalRe.exec(parts[2]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line/column number\n    parts[2] = submatch[1]; // url\n\n    parts[3] = submatch[2]; // line\n\n    parts[4] = submatch[3]; // column\n  }\n\n  return {\n    file: !isNative ? parts[2] : null,\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: isNative ? [parts[2]] : [],\n    lineNumber: parts[3] ? +parts[3] : null,\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar winjsRe = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|rsc|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseWinjs(line) {\n  var parts = winjsRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar geckoRe = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|rsc|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRe = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nfunction parseGecko(line) {\n  var parts = geckoRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n  var submatch = geckoEvalRe.exec(parts[3]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line number\n    parts[3] = submatch[1];\n    parts[4] = submatch[2];\n    parts[5] = null; // no column when eval\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: parts[2] ? parts[2].split(',') : [],\n    lineNumber: parts[4] ? +parts[4] : null,\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar javaScriptCoreRe = /^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;\n\nfunction parseJSC(line) {\n  var parts = javaScriptCoreRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[4],\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar nodeRe = /^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseNode(line) {\n  var parts = nodeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nexport { parse };\n", "import type { Client } from '../../getPrismaClient'\nimport type { UserArgs } from '../request/UserArgs'\nimport { Action } from '../types/exported/JsApi'\nimport { aggregate } from './aggregates/aggregate'\nimport { count } from './aggregates/count'\nimport { groupBy } from './aggregates/groupBy'\nimport type { ModelAction } from './applyModel'\n\n/**\n * Dynamically returns the appropriate aggregate action for a given `action`.\n * With this, we are able to provide an aggregate api that has a better DX. In\n * short, we manipulate the user input which is designed to have DX to transform\n * it into something that the engines understand. Similarly, we take the engine\n * output for that input and produce something that is easier to work with.\n * @param action that tells which aggregate action to execute\n * @param modelAction a callback action that triggers request execution\n * @returns\n */\nexport function applyAggregates(client: Client, action: Action, modelAction: ModelAction) {\n  // we effectively take over the aggregate api to perform data changes\n  if (action === 'aggregate') return (userArgs?: UserArgs) => aggregate(userArgs, modelAction)\n  if (action === 'count') return (userArgs?: UserArgs) => count(userArgs, modelAction)\n  if (action === 'groupBy') return (userArgs?: UserArgs) => groupBy(userArgs, modelAction)\n\n  return undefined\n}\n", "import type { UserArgs } from '../../request/UserArgs'\nimport type { ModelAction } from '../applyModel'\nimport { aggregateMap } from './utils/aggregateMap'\n\n/**\n * Transforms the `userArgs` for the `.aggregate` shorthand. It is an API sugar\n * for not having to do things like: `{select: {_avg: {select: {age: true}}}}`.\n * The goal here is to desugar it into something that is understood by the QE.\n * @param args to transform\n * @returns\n */\nexport function desugarUserArgs(args: UserArgs = {}) {\n  const _args = desugarCountInUserArgs(args)\n  const userArgsEntries = Object.entries(_args)\n\n  return userArgsEntries.reduce(\n    (aggregateArgs, [key, value]) => {\n      if (aggregateMap[key] !== undefined) {\n        // if it's an aggregate, we re-wrap into select\n        aggregateArgs['select']![key] = { select: value }\n      } else {\n        aggregateArgs[key] = value // or leave it alone\n      }\n\n      return aggregateArgs\n    },\n    // eslint-disable-next-line @typescript-eslint/no-redundant-type-constituents\n    { select: {} } as UserArgs & { select: UserArgs },\n  )\n}\n\n/**\n * Desugar `userArgs` when it contains `{_count: true}`.\n * @param args the user input\n * @returns\n */\nfunction desugarCountInUserArgs(args: UserArgs = {}) {\n  if (typeof args['_count'] === 'boolean') {\n    return { ...args, _count: { _all: args['_count'] } }\n  }\n\n  return args\n}\n\n/**\n * Creates an unpacker that adds sugar to the basic result of the QE. An\n * unpacker helps to transform a result before returning it to the user.\n * @param args the user input\n * @returns\n */\nexport function createUnpacker(args: UserArgs = {}) {\n  return (data: object) => {\n    if (typeof args['_count'] === 'boolean') {\n      data['_count'] = data['_count']['_all']\n    }\n\n    return data\n  }\n}\n\n/**\n * Executes the `.aggregate` action on a model.\n * @see {desugarUserArgs}\n * @param args the user input to desugar\n * @param modelAction a callback action that triggers request execution\n * @returns\n */\nexport function aggregate(args: UserArgs, modelAction: ModelAction) {\n  const aggregateUnpacker = createUnpacker(args)\n\n  return modelAction({\n    action: 'aggregate',\n    unpacker: aggregateUnpacker,\n    argsMapper: desugarUserArgs,\n  })(args)\n}\n", "export const aggregateMap = {\n  _avg: true,\n  _count: true,\n  _sum: true,\n  _min: true,\n  _max: true,\n}\n", "import type { UserArgs } from '../../request/UserArgs'\nimport type { ModelAction } from '../applyModel'\nimport { createUnpacker as createUnpackerAggregate, desugarUserArgs as desugarUserArgsAggregate } from './aggregate'\n\n/**\n * Transforms the `userArgs` for the `.count` shorthand. It is an API sugar. It\n * reuses the logic from the `.aggregate` shorthand to add additional handling.\n * The goal here is to desugar it into something that is understood by the QE.\n * @param args to transform\n * @returns\n */\nfunction desugarUserArgs(args: UserArgs = {}) {\n  const { select, ..._args } = args // exclude select\n\n  if (typeof select === 'object') {\n    return desugarUserArgsAggregate({ ..._args, _count: select })\n  } else {\n    return desugarUserArgsAggregate({ ..._args, _count: { _all: true } })\n  }\n}\n\n/**\n * Creates an unpacker that adds sugar to the basic result of the QE. An\n * unpacker helps to transform a result before returning it to the user.\n * @param args the user input\n * @returns\n */\nexport function createUnpacker(args: UserArgs = {}) {\n  if (typeof args['select'] === 'object') {\n    return (data: object) => createUnpackerAggregate(args)(data)['_count']\n  } else {\n    return (data: object) => createUnpackerAggregate(args)(data)['_count']['_all']\n  }\n}\n\n/**\n * Executes the `.count` action on a model via {@link aggregate}.\n * @param args the user input to desugar\n * @param modelAction a callback action that triggers request execution\n * @returns\n */\nexport function count(args: UserArgs, modelAction: ModelAction) {\n  return modelAction({\n    action: 'count',\n    unpacker: createUnpacker(args),\n    argsMapper: desugarUserArgs,\n  })(args)\n}\n", "import type { UserArgs } from '../../request/UserArgs'\nimport type { ModelAction } from '../applyModel'\nimport { desugarUserArgs as desugarUserArgsAggregate } from './aggregate'\n\n/**\n * Transforms the `userArgs` for the `.groupBy` shorthand. It is an API sugar.\n * It reuses the logic from the `.aggregate` shorthand and adds additional\n * handling for the `by` clause. The goal here is to desugar it into something\n * that is understood by the QE.\n * @param args to transform\n * @returns\n */\nfunction desugarUserArgs(args: UserArgs = {}) {\n  const _args = desugarUserArgsAggregate(args)\n\n  // we desugar the array into { [key]: boolean }\n  if (Array.isArray(_args['by'])) {\n    for (const key of _args['by']) {\n      if (typeof key === 'string') {\n        _args['select'][key] = true\n      }\n    }\n  } else if (typeof _args['by'] === 'string') {\n    _args['select'][_args['by']] = true\n  }\n\n  return _args\n}\n\n/**\n * Creates an unpacker that adds sugar to the basic result of the QE. An\n * unpacker helps to transform a result before returning it to the user.\n * @param args the user input\n * @returns\n */\nexport function createUnpacker(args: UserArgs = {}) {\n  return (data: object[]) => {\n    if (typeof args?.['_count'] === 'boolean') {\n      data.forEach((row) => {\n        row['_count'] = row['_count']['_all']\n      })\n    }\n\n    return data\n  }\n}\n\n/**\n * Executes the `.groupBy` action on a model by reusing {@link aggregate}.\n * @param args the user input to desugar\n * @param modelAction a callback action that triggers request execution\n * @returns\n */\nexport function groupBy(args: UserArgs, modelAction: ModelAction) {\n  return modelAction({\n    action: 'groupBy',\n    unpacker: createUnpacker(args),\n    argsMapper: desugarUserArgs,\n  })(args)\n}\n", "import { keyBy, RuntimeModel } from '@prisma/client-common'\n\nimport { FieldRefImpl } from './FieldRef'\nimport { defaultProxyHandlers } from './utils/defaultProxyHandlers'\n\nexport type FieldProxy = {\n  readonly [key: string]: FieldRefImpl<string, string>\n}\n\nexport function applyFieldsProxy(modelName: string, model: RuntimeModel): FieldProxy {\n  const scalarFieldsList = model.fields.filter((field) => !field.relationName)\n  const scalarFields = keyBy(scalarFieldsList, 'name')\n  return new Proxy(\n    {},\n    {\n      get(target, prop) {\n        if (prop in target || typeof prop === 'symbol') {\n          return target[prop]\n        }\n        const dmmfField = scalarFields[prop]\n        if (dmmfField) {\n          return new FieldRefImpl(modelName, prop, dmmfField.type, dmmfField.isList, dmmfField.kind === 'enum')\n        }\n\n        return undefined\n      },\n      ...defaultProxyHandlers(Object.keys(scalarFields)),\n    },\n  )\n}\n", "import type * as DMMF from '@prisma/dmmf'\n\nimport type { Client } from '../../getPrismaClient'\nimport { getCallSite } from '../../utils/CallSite'\nimport { deepSet } from '../../utils/deep-set'\nimport type { UserArgs } from '../request/UserArgs'\nimport type { ModelAction } from './applyModel'\nimport { defaultProxyHandlers } from './utils/defaultProxyHandlers'\n\n/**\n * The fluent API makes that nested relations can be retrieved at once. It's a\n * helper for writing `select` statements on relations with a chaining api.\n * Because of this, we automatically add `select` statements to the query, that\n * also means that we need to provide a `dataPath` for unpacking nested values.\n * @see {getNextUserArgs}\n * @param dmmfModelName\n * @param prevDataPath\n * @returns\n */\nfunction getNextDataPath(fluentPropName?: string, prevDataPath?: string[]) {\n  if (fluentPropName === undefined || prevDataPath === undefined) return []\n\n  return [...prevDataPath, 'select', fluentPropName]\n}\n\n/**\n * @see {getNextDataPath} for introduction. The goal of the fluent API is to\n * make it easy to retrieve nested relations. For this, we construct the query\n * args that are necessary to retrieve the nested relations. It consists of\n * nesting `select` statements each time that we access a relation.\n * @param callArgs usually passed on the last call of the chaining api\n * @param prevArgs when multiple chaining occurs, they are the previous\n * @param nextDataPath path where to set `callArgs` in `prevArgs`\n * @example\n * ```ts\n * prisma.user.findUnique().link().user()\n *\n * // will end up with an args like this:\n * // args {\n * //   \"where\": {\n * //     \"email\": \"1639498523518@gmail.com\"\n * //   },\n * //   \"select\": {\n * //     \"link\": {\n * //       \"select\": {\n * //         \"user\": true\n * //       }\n * //     }\n * //   }\n * // }\n * ```\n */\nfunction getNextUserArgs(callArgs: UserArgs, prevArgs: UserArgs, nextDataPath: string[]): UserArgs {\n  if (prevArgs === undefined) return callArgs ?? {}\n\n  return deepSet(prevArgs, nextDataPath, callArgs || true)\n}\n\n/**\n * Dynamically creates a fluent API from a `modelAction` and a `dmmfModelName`.\n * We use the current `dmmfModelName` to determine what can be chained on next.\n * The fluent API allows to chain on model relations to provide an alternative\n * way to fetch and access nested data all at once. When triggered, it calls\n * `modelActions` after having accumulated `prevDataPath` and `prevUserArgs`\n * with the chaining. You can find an example of usage at {@link applyModel}.\n * @param client to provide dmmf information\n * @param dmmfModelName the dmmf name of the model to apply the api to\n * @param modelAction a callback action that triggers request execution\n * @param fluentPropName the name of the api link that was just called\n * @param prevDataPath the dataPath from the previous api link\n * @param prevUserArgs the userArgs from the previous api link\n * @remarks optional parameters are empty on the first call via\n * {@link applyModel}\n * @returns\n */\nexport function applyFluent(\n  client: Client,\n  dmmfModelName: string,\n  modelAction: ModelAction,\n  fluentPropName?: string,\n  prevDataPath?: string[],\n  prevUserArgs?: UserArgs,\n) {\n  // we retrieve the model that is described from the DMMF\n  const dmmfModel = client._runtimeDataModel.models[dmmfModelName]\n\n  // map[field.name] === field, basically for quick access\n  const dmmfModelFieldMap = dmmfModel.fields.reduce(\n    (acc, field) => ({ ...acc, [field.name]: field }),\n    {} as { [dmmfModelFieldName: string]: DMMF.Field },\n  )\n\n  // we return a regular model action but proxy its return\n  return (userArgs?: UserArgs) => {\n    const callsite = getCallSite(client._errorFormat)\n    // ! first call: nextDataPath => [], nextUserArgs => userArgs\n    const nextDataPath = getNextDataPath(fluentPropName, prevDataPath)\n    const nextUserArgs = getNextUserArgs(userArgs, prevUserArgs, nextDataPath)\n    const prismaPromise = modelAction({ dataPath: nextDataPath, callsite })(nextUserArgs)\n    // TODO: use an unpacker here instead of ClientFetcher logic\n    // TODO: once it's done we can deprecate the use of dataPath\n    const ownKeys = getOwnKeys(client, dmmfModelName)\n\n    // we take control of the return promise to allow chaining\n    return new Proxy(prismaPromise, {\n      get(target, prop: string) {\n        // fluent api only works on fields that are relational\n        if (!ownKeys.includes(prop)) return target[prop]\n\n        // here we are sure that prop is a field of type object\n        const dmmfModelName = dmmfModelFieldMap[prop].type\n        const modelArgs = [dmmfModelName, modelAction, prop] as const\n        const dataArgs = [nextDataPath, nextUserArgs] as const\n\n        // we allow for chaining more with this recursive call\n        return applyFluent(client, ...modelArgs, ...dataArgs)\n      },\n      ...defaultProxyHandlers([...ownKeys, ...Object.getOwnPropertyNames(prismaPromise)]),\n    })\n  }\n}\n\n// the only accessible fields are relations to be chained on\nfunction getOwnKeys(client: Client, dmmfModelName: string) {\n  return client._runtimeDataModel.models[dmmfModelName].fields\n    .filter((field) => field.kind === 'object') // relations\n    .map((field) => field.name)\n}\n", "// Taken from https://gist.github.com/LukeChannings/15c92cef5a016a8b21a0\n\n// ensure the keys being passed is an array of key paths\n// example: 'a.b' becomes ['a', 'b'] unless it was already ['a', 'b']\nconst keys = (ks: string | string[]) => (Array.isArray(ks) ? ks : ks.split('.'))\n\n// traverse the set of keys left to right,\n// returning the current value in each iteration.\n// if at any point the value for the current key does not exist,\n// return the default value\nexport const deepGet = (o, kp: string[]) => keys(kp).reduce((o, k) => o && o[k], o)\n\n// traverse the set of keys right to left,\n// returning a new object containing both properties from the object\n// we were originally passed and our new property.\n//\n// Example:\n// If o = { a: { b: { c: 1 } } }\n//\n// deepSet(o, ['a', 'b', 'c'], 2) will progress thus:\n// 1. c = Object.assign({}, {c: 1}, { c: 2 })\n// 2. b = Object.assign({}, { b: { c: 1 } }, { b: c })\n// 3. returned = Object.assign({}, { a: { b: { c: 1 } } }, { a: b })\nexport const deepSet = (o: any, kp: string | string[], v: any) =>\n  keys(kp).reduceRight((v, k, i, ks) => Object.assign({}, deepGet(o, ks.slice(0, i)), { [k]: v }), v)\n", "/**\n * Transforms a model name coming from the runtime to a DMMF model name.\n * @param name\n * @returns\n */\nexport function jsToDMMFModelName(name: string) {\n  return name.replace(/^./, (str) => str.toUpperCase())\n}\n", "import { RuntimeDataModel } from '@prisma/client-common'\n\nimport { GlobalOmitOptions } from '../jsonProtocol/serializeJsonQuery'\nimport { dmmfToJSModelName } from '../model/utils/dmmfToJSModelName'\nimport { JsArgs } from '../types/exported/JsApi'\nimport { applyResultExtensions } from './applyResultExtensions'\nimport { MergedExtensionsList } from './MergedExtensionsList'\nimport { visitQueryResult } from './visitQueryResult'\n\ntype ApplyAllResultExtensionsParams = {\n  result: object | null\n  modelName: string\n  args: JsArgs\n  extensions: MergedExtensionsList\n  runtimeDataModel: RuntimeDataModel\n  globalOmit?: GlobalOmitOptions\n}\n\n/**\n * Walks the result of the query and applies all possible result extensions\n * to all parts of it, including nested relations\n */\nexport function applyAllResultExtensions({\n  result,\n  modelName,\n  args,\n  extensions,\n  runtimeDataModel,\n  globalOmit,\n}: ApplyAllResultExtensionsParams) {\n  // We return the result directly (not applying result extensions) if\n  // - there is no extension to apply\n  // - result is `null`\n  // - result is not an object (e.g. `.count()`)\n  if (extensions.isEmpty() || result == null || typeof result !== 'object') {\n    return result\n  }\n  const model = runtimeDataModel.models[modelName]\n  if (!model) {\n    return result\n  }\n\n  return visitQueryResult({\n    result,\n    args: args ?? {},\n    modelName,\n    runtimeDataModel,\n    visitor: (value, dmmfModelName, args) => {\n      const jsName = dmmfToJSModelName(dmmfModelName)\n      return applyResultExtensions({\n        result: value,\n        modelName: jsName,\n        select: args.select,\n        // passing omit only if explicit select is not set - those 2 options are\n        // mutually exclusive\n        omit: args.select ? undefined : { ...globalOmit?.[jsName], ...args.omit },\n        extensions,\n      })\n    },\n  })\n}\n", "import { hasOwnProperty } from '@prisma/internals'\n\nimport {\n  addProperty,\n  cacheProperties,\n  CompositeProxyLayer,\n  createCompositeProxy,\n  removeProperties,\n} from '../compositeProxy'\nimport { Omission, Selection } from '../types/exported/JsApi'\nimport { MergedExtensionsList } from './MergedExtensionsList'\nimport { ComputedField } from './resultUtils'\n\ntype ApplyExtensionsArgs = {\n  result: object\n  select?: Selection\n  omit?: Omission\n  modelName: string\n  extensions: MergedExtensionsList\n}\n\n/**\n * Given a part of a query result, it's model name and a list of extension,\n * applies computed fields to the results. Fields are computed lazily on a first access,\n * after that the result of computation is cached. In case `select` is used, all dependencies\n * of the computed fields would be excluded from final result, unless they are also specified in the select.\n *\n * This function applies computed fields to a single object only: it does not traverse relationships.\n * For full functionality, it is meant to be combined with `visitQueryResult`.\n *\n * @param params\n * @returns\n */\nexport function applyResultExtensions({ result, modelName, select, omit, extensions }: ApplyExtensionsArgs) {\n  const computedFields = extensions.getAllComputedFields(modelName)\n  if (!computedFields) {\n    return result\n  }\n\n  const computedPropertiesLayers: CompositeProxyLayer[] = []\n  const maskingLayers: CompositeProxyLayer[] = []\n\n  for (const field of Object.values(computedFields)) {\n    if (omit) {\n      if (omit[field.name]) {\n        continue\n      }\n      const toMask = field.needs.filter((prop) => omit[prop])\n      if (toMask.length > 0) {\n        maskingLayers.push(removeProperties(toMask))\n      }\n    } else if (select) {\n      if (!select[field.name]) {\n        continue\n      }\n\n      const toMask = field.needs.filter((prop) => !select[prop])\n      if (toMask.length > 0) {\n        maskingLayers.push(removeProperties(toMask))\n      }\n    }\n\n    if (areNeedsMet(result, field.needs)) {\n      computedPropertiesLayers.push(\n        computedPropertyLayer(field, createCompositeProxy(result, computedPropertiesLayers)),\n      )\n    }\n  }\n\n  if (computedPropertiesLayers.length > 0 || maskingLayers.length > 0) {\n    return createCompositeProxy(result, [...computedPropertiesLayers, ...maskingLayers])\n  }\n  return result\n}\n\nfunction areNeedsMet(result: object, neededProperties: string[]) {\n  return neededProperties.every((property) => hasOwnProperty(result, property))\n}\n\nfunction computedPropertyLayer(field: ComputedField, result: object): CompositeProxyLayer {\n  return cacheProperties(addProperty(field.name, () => field.compute(result)))\n}\n", "import { RuntimeDataModel } from '@prisma/client-common'\n\nimport { isSkip } from '../types'\nimport { JsArgs, Selection } from '../types/exported/JsApi'\n\ntype ModelVisitor = (value: object, modelName: string, queryArgs: JsArgs) => object | undefined\n\ntype VisitParams = {\n  result: object\n  args: JsArgs\n  modelName: string\n  runtimeDataModel: RuntimeDataModel\n  visitor: ModelVisitor\n}\n\n/**\n * Function recursively walks through provided query response using `include` and `select`\n * query parameters and calls `visitor` callback for each model it encounters.\n * `visitor` receives the value of a particular response section, model it corresponds to and\n * the arguments used to query it. If visitor returns any non-undefined value that value will\n * replace corresponding part of the final result.\n *\n * @param params\n * @returns\n */\nexport function visitQueryResult({ visitor, result, args, runtimeDataModel, modelName }: VisitParams) {\n  if (Array.isArray(result)) {\n    for (let i = 0; i < result.length; i++) {\n      result[i] = visitQueryResult({\n        result: result[i],\n        args,\n        modelName,\n        runtimeDataModel,\n        visitor,\n      })\n    }\n    return result\n  }\n  const visitResult = visitor(result, modelName, args) ?? result\n  if (args.include) {\n    visitNested({\n      includeOrSelect: args.include,\n      result: visitResult,\n      parentModelName: modelName,\n      runtimeDataModel,\n      visitor,\n    })\n  }\n  if (args.select) {\n    visitNested({\n      includeOrSelect: args.select,\n      result: visitResult,\n      parentModelName: modelName,\n      runtimeDataModel,\n      visitor,\n    })\n  }\n  return visitResult\n}\n\ntype VisitNestedParams = {\n  includeOrSelect: Selection\n  result: object\n  parentModelName: string\n  runtimeDataModel: RuntimeDataModel\n  visitor: ModelVisitor\n}\n\nfunction visitNested({ includeOrSelect, result, parentModelName, runtimeDataModel, visitor }: VisitNestedParams) {\n  for (const [fieldName, subConfig] of Object.entries(includeOrSelect)) {\n    if (!subConfig || result[fieldName] == null || isSkip(subConfig)) {\n      continue\n    }\n    const parentModel = runtimeDataModel.models[parentModelName]\n    const field = parentModel.fields.find((field) => field.name === fieldName)\n    if (!field || field.kind !== 'object' || !field.relationName) {\n      continue\n    }\n    const args = typeof subConfig === 'object' ? subConfig : {}\n    result[fieldName] = visitQueryResult({\n      visitor,\n      result: result[fieldName],\n      args,\n      modelName: field.type,\n      runtimeDataModel,\n    })\n  }\n}\n", "import { Client, InternalRequestParams } from '../../getPrismaClient'\nimport { RequestParams } from '../../RequestHandler'\nimport { deepCloneArgs } from '../../utils/deepCloneArgs'\nimport { CustomDataProxyFetch } from '../engines'\nimport { QueryOptionsCb } from '../types/exported/ExtensionArgs'\nimport { BatchInternalParams, BatchQueryOptionsCb } from '../types/internal/ExtensionsInternalArgs'\n\nfunction iterateAndCallQueryCallbacks(\n  client: Client,\n  params: InternalRequestParams,\n  queryCbs: QueryOptionsCb[],\n  i = 0,\n) {\n  return client._createPrismaPromise((transaction) => {\n    // we need to keep track of the previous customDataProxyFetch\n    const prevCustomFetch = params.customDataProxyFetch\n\n    // allow query extensions to re-wrap in transactions\n    // this will automatically discard the prev batch tx\n    if ('transaction' in params && transaction !== undefined) {\n      if (params.transaction?.kind === 'batch') {\n        void params.transaction.lock.then() // discard\n      }\n      params.transaction = transaction\n    }\n\n    // if we are done recursing, we execute the request\n    if (i === queryCbs.length) {\n      return client._executeRequest(params)\n    }\n\n    // if not, call the next query cb and recurse query\n    return queryCbs[i]({\n      model: params.model,\n      operation: params.model ? params.action : params.clientMethod,\n      args: deepCloneArgs(params.args ?? {}),\n      // @ts-expect-error because not part of public API\n      __internalParams: params,\n      query: (args, __internalParams = params) => {\n        // we need to keep track of the current customDataProxyFetch\n        // this is to cascade customDataProxyFetch like a middleware\n        const currCustomFetch = __internalParams.customDataProxyFetch\n        __internalParams.customDataProxyFetch = composeCustomDataProxyFetch(prevCustomFetch, currCustomFetch)\n        __internalParams.args = args\n\n        return iterateAndCallQueryCallbacks(client, __internalParams, queryCbs, i + 1)\n      },\n    })\n  })\n}\n\nexport function applyQueryExtensions(client: Client, params: InternalRequestParams): Promise<any> {\n  const { jsModelName, action, clientMethod } = params\n  const operation = jsModelName ? action : clientMethod\n\n  // query extensions only apply to model-bound operations\n  if (client._extensions.isEmpty()) {\n    return client._executeRequest(params)\n  }\n\n  // get the cached query cbs for a given model and action\n  const cbs = client._extensions.getAllQueryCallbacks(jsModelName ?? '$none', operation)\n\n  return iterateAndCallQueryCallbacks(client, params, cbs)\n}\n\ntype BatchExecuteCallback = (params: BatchInternalParams) => Promise<unknown[]>\n\nexport function createApplyBatchExtensionsFunction(executeBatch: BatchExecuteCallback) {\n  return (requests: RequestParams[]) => {\n    const params = { requests }\n    const callbacks = requests[0].extensions.getAllBatchQueryCallbacks()\n    if (!callbacks.length) {\n      return executeBatch(params)\n    }\n\n    return iterateAndCallBatchCallbacks(params, callbacks, 0, executeBatch)\n  }\n}\n\nexport function iterateAndCallBatchCallbacks(\n  params: BatchInternalParams,\n  callbacks: BatchQueryOptionsCb[],\n  i: number,\n  executeBatch: BatchExecuteCallback,\n) {\n  if (i === callbacks.length) {\n    return executeBatch(params)\n  }\n\n  const prevFetch = params.customDataProxyFetch\n  const transaction = params.requests[0].transaction\n  return callbacks[i]({\n    args: {\n      queries: params.requests.map((request) => ({\n        model: request.modelName,\n        operation: request.action,\n        args: request.args,\n      })),\n      transaction: transaction\n        ? {\n            isolationLevel: transaction.kind === 'batch' ? transaction.isolationLevel : undefined,\n          }\n        : undefined,\n    },\n    __internalParams: params,\n    query(_args, __internalParams = params) {\n      const nextFetch = __internalParams.customDataProxyFetch\n      __internalParams.customDataProxyFetch = composeCustomDataProxyFetch(prevFetch, nextFetch)\n      return iterateAndCallBatchCallbacks(__internalParams, callbacks, i + 1, executeBatch)\n    },\n  })\n}\n\nconst noopFetch: CustomDataProxyFetch = (f) => f\nfunction composeCustomDataProxyFetch(prevFetch = noopFetch, nextFetch = noopFetch): CustomDataProxyFetch {\n  return (f) => prevFetch(nextFetch(f))\n}\n", "import { assertNever } from '@prisma/internals'\nimport Decimal from 'decimal.js'\nimport { Sql } from 'sql-template-tag'\n\nimport { isFieldRef } from '../core/model/FieldRef'\nimport { isTypedSql, TypedSql, UnknownTypedSql } from '../core/types/exported'\nimport { JsArgs, JsInputValue } from '../core/types/exported/JsApi'\nimport { ObjectEnumValue } from '../core/types/exported/ObjectEnums'\nimport { RawQueryArgs } from '../core/types/exported/RawQueryArgs'\nimport { isDate } from './date'\nimport { isDecimalJsLike } from './decimalJsLike'\n\nexport function deepCloneArgs(args: JsArgs | RawQueryArgs): JsArgs | RawQueryArgs {\n  if (args instanceof Sql) {\n    return cloneSql(args)\n  }\n\n  if (isTypedSql(args)) {\n    return cloneTypedSql(args)\n  }\n\n  if (Array.isArray(args)) {\n    const clone: RawQueryArgs = [args[0]]\n\n    for (let i = 1; i < args.length; i++) {\n      clone[i] = deepCloneValue(args[i] as JsInputValue)\n    }\n\n    return clone\n  }\n  const clone: JsArgs = {}\n  for (const k in args) {\n    clone[k] = deepCloneValue(args[k])\n  }\n  return clone\n}\n\nfunction cloneSql(rawParam: Sql): Sql {\n  return new Sql(rawParam.strings, rawParam.values)\n}\n\nfunction cloneTypedSql(rawParam: UnknownTypedSql): UnknownTypedSql {\n  return new TypedSql(rawParam.sql, rawParam.values)\n}\n\n// based on https://github.com/lukeed/klona/blob/v2.0.6/src/index.js\nfunction deepCloneValue(x: JsInputValue): JsInputValue {\n  if (typeof x !== 'object' || x == null || x instanceof ObjectEnumValue || isFieldRef(x)) {\n    return x\n  }\n\n  if (isDecimalJsLike(x)) {\n    return new Decimal(x.toFixed())\n  }\n\n  if (isDate(x)) {\n    return new Date(+x)\n  }\n\n  if (ArrayBuffer.isView(x)) {\n    return x.slice(0)\n  }\n\n  if (Array.isArray(x)) {\n    let k = x.length\n    let copy\n    for (copy = Array(k); k--; ) {\n      copy[k] = deepCloneValue(x[k])\n    }\n    return copy\n  }\n\n  if (typeof x === 'object') {\n    const copy = {}\n    for (const k in x) {\n      if (k === '__proto__') {\n        Object.defineProperty(copy, k, {\n          value: deepCloneValue(x[k]),\n          configurable: true,\n          enumerable: true,\n          writable: true,\n        })\n      } else {\n        copy[k] = deepCloneValue(x[k])\n      }\n    }\n    return copy\n  }\n\n  assertNever(x, 'Unknown value')\n}\n", "const denylist = ['$connect', '$disconnect', '$on', '$transaction', '$use', '$extends'] as const\n\nexport const itxClientDenyList = denylist as ReadonlyArray<string | symbol>\n\nexport type ITXClientDenyList = (typeof denylist)[number]\n", "import { GetPrismaClientConfig } from '@prisma/client-common'\nimport { Debug } from '@prisma/debug'\n\nimport { PrismaClientInitializationError } from '../errors/PrismaClientInitializationError'\n\nconst debug = Debug('prisma:client')\n\n/**\n * Known platforms that have caching issues. Updating this list will also update\n * the error message and the link to the docs, so add docs/links as needed. The\n * key from this map comes from the `ciName` property of the `ci-info` package.\n */\nconst cachingPlatforms = {\n  Vercel: 'vercel',\n  'Netlify CI': 'netlify',\n} as const\n\ntype Config = Pick<GetPrismaClientConfig, 'postinstall' | 'ciName' | 'clientVersion'>\n\n/**\n * Throws an error if the client has been generated via auto-install and the\n * platform is known to have caching issues. In that case, we will display a\n * useful error message, and ask the user to run `prisma generate` manually.\n * @returns\n */\nexport function checkPlatformCaching({ postinstall, ciName, clientVersion }: Config) {\n  debug('checkPlatformCaching:postinstall', postinstall)\n  debug('checkPlatformCaching:ciName', ciName)\n\n  // if client was not generated manually\n  if (postinstall !== true) return\n\n  // and we generated on one a caching CI\n  if (ciName && ciName in cachingPlatforms) {\n    const message = `Prisma has detected that this project was built on ${ciName}, which caches dependencies. This leads to an outdated Prisma Client because Prisma's auto-generation isn't triggered. To fix this, make sure to run the \\`prisma generate\\` command during the build process.\n\nLearn how: https://pris.ly/d/${cachingPlatforms[ciName]}-build`\n\n    console.error(message) // display a nice and visible error message\n\n    // also throw an error so that the user can catch it and handle it\n    throw new PrismaClientInitializationError(message, clientVersion)\n  }\n}\n", "import { Datasources, PrismaClientOptions } from '../../getPrismaClient'\n\nexport function getDatasourceOverrides(\n  options: PrismaClientOptions | undefined,\n  datasourceNames: string[],\n): Datasources {\n  if (!options) {\n    return {}\n  }\n\n  if (options.datasources) {\n    return options.datasources\n  }\n\n  if (options.datasourceUrl) {\n    const primaryDatasource = datasourceNames[0]\n    return { [primaryDatasource]: { url: options.datasourceUrl } }\n  }\n  return {}\n}\n", "import { GetPrismaClientConfig } from '@prisma/client-common'\nimport { ClientEngineType, getClientEngineType, warnOnce } from '@prisma/internals'\n\nimport { getRuntime } from '../../utils/getRuntime'\nimport { BinaryEngine, ClientEngine, DataProxyEngine, EngineConfig, LibraryEngine } from '../engines'\nimport { AccelerateEngine } from '../engines/accelerate/AccelerateEngine'\nimport { PrismaClientValidationError } from '../errors/PrismaClientValidationError'\nimport { resolveDatasourceUrl } from './resolveDatasourceUrl'\nimport { validateEngineInstanceConfig } from './validateEngineInstanceConfig'\n\n/**\n * Get the engine instance based on the engine type and the target engine type\n * (binary, library, data proxy). If the URL is a prisma:// URL, it will always\n * use the DataProxyEngine. Basically decides which engine to load.\n * @param clientConfig\n * @param engineConfig\n * @returns\n */\nexport function getEngineInstance({ copyEngine = true }: GetPrismaClientConfig, engineConfig: EngineConfig) {\n  let url: string | undefined\n\n  try {\n    url = resolveDatasourceUrl({\n      inlineDatasources: engineConfig.inlineDatasources,\n      overrideDatasources: engineConfig.overrideDatasources,\n      env: { ...engineConfig.env, ...process.env },\n      clientVersion: engineConfig.clientVersion,\n    })\n  } catch {\n    // the error does not matter, but that means we don't have a valid url which\n    // means we can't use the DataProxyEngine and will default to LibraryEngine\n  }\n\n  const { ok, isUsing, diagnostics } = validateEngineInstanceConfig({\n    url,\n    adapter: engineConfig.adapter,\n    copyEngine,\n    targetBuildType: TARGET_BUILD_TYPE,\n  })\n\n  for (const warning of diagnostics.warnings) {\n    warnOnce(...warning.value)\n  }\n\n  if (!ok) {\n    const error = diagnostics.errors[0]\n    throw new PrismaClientValidationError(error.value, { clientVersion: engineConfig.clientVersion })\n  }\n\n  const engineType = getClientEngineType(engineConfig.generator!)\n\n  const libraryEngineConfigured = engineType === ClientEngineType.Library\n  const binaryEngineConfigured = engineType === ClientEngineType.Binary\n  const clientEngineConfigured = engineType === ClientEngineType.Client\n\n  // TODO: one day we may want to completely deprecate `@prisma/client/edge` in favor of wasm build\n  // TODO: After having moved the DataProxyEngine to Accelerate\n  // - Replace DataProxyEngine with AccelerateEngine via `@prisma/extension-accelerate`\n  // - Delete DataProxyEngine and all related files\n  // - Update the DataProxy tests to use the /wasm endpoint, but keep ecosystem-tests as they are\n\n  // When a local driver adapter is configured, the URL from the datasource\n  // block in the Prisma schema is no longer relevant as driver adapters don't\n  // use it. Therefore, a configured driver adapter takes precedence over the\n  // Accelerate or PPg URL in the schema file.\n  const clientEngineUsesRemoteExecutor = (isUsing.accelerate || isUsing.ppg) && !isUsing.driverAdapters\n\n  if (TARGET_BUILD_TYPE === 'react-native') return new LibraryEngine(engineConfig)\n  else if (clientEngineConfigured && TARGET_BUILD_TYPE === 'client')\n    return new ClientEngine(engineConfig, clientEngineUsesRemoteExecutor)\n  else if (clientEngineConfigured && TARGET_BUILD_TYPE === 'wasm-compiler-edge')\n    return new ClientEngine(engineConfig, clientEngineUsesRemoteExecutor)\n  else if (isUsing.accelerate && TARGET_BUILD_TYPE !== 'wasm-engine-edge') return new DataProxyEngine(engineConfig)\n  else if (isUsing.driverAdapters && TARGET_BUILD_TYPE === 'wasm-engine-edge') return new LibraryEngine(engineConfig)\n  else if (libraryEngineConfigured && TARGET_BUILD_TYPE === 'library') return new LibraryEngine(engineConfig)\n  else if (binaryEngineConfigured && TARGET_BUILD_TYPE === 'binary') return new BinaryEngine(engineConfig)\n  else if (isUsing.accelerate && TARGET_BUILD_TYPE === 'wasm-engine-edge') return new AccelerateEngine(engineConfig)\n  // reasonable fallbacks in case the conditions above aren't met, we should still try the correct engine\n  else if (TARGET_BUILD_TYPE === 'edge') return new DataProxyEngine(engineConfig)\n  else if (TARGET_BUILD_TYPE === 'library') return new LibraryEngine(engineConfig)\n  else if (TARGET_BUILD_TYPE === 'binary') return new BinaryEngine(engineConfig)\n  else if (TARGET_BUILD_TYPE === 'client') return new ClientEngine(engineConfig, clientEngineUsesRemoteExecutor)\n  // if either accelerate or wasm library could not be loaded for some reason, we throw an error\n  else if (TARGET_BUILD_TYPE === 'wasm-engine-edge' || TARGET_BUILD_TYPE === 'wasm-compiler-edge') {\n    const message = [\n      `PrismaClient failed to initialize because it wasn't configured to run in this environment (${\n        getRuntime().prettyName\n      }).`,\n      'In order to run Prisma Client in an edge runtime, you will need to configure one of the following options:',\n      '- Enable Driver Adapters: https://pris.ly/d/driver-adapters',\n      '- Enable Accelerate: https://pris.ly/d/accelerate',\n    ]\n\n    throw new PrismaClientValidationError(message.join('\\n'), {\n      clientVersion: engineConfig.clientVersion,\n    })\n  }\n\n  return TARGET_BUILD_TYPE satisfies never\n}\n", "// https://runtime-keys.proposal.wintercg.org/\nexport type RuntimeName = 'workerd' | 'deno' | 'netlify' | 'node' | 'bun' | 'edge-light' | '' /* unknown */\n\n/**\n * Indicates if running in Node.js or a Node.js compatible runtime.\n *\n * **Note:** When running code in Bun and Deno with Node.js compatibility mode, `isNode` flag will be also `true`, indicating running in a Node.js compatible runtime.\n */\nconst isNode = () => globalThis.process?.release?.name === 'node'\n\n/**\n * Indicates if running in Bun runtime.\n */\nconst isBun = () => !!globalThis.Bun || !!globalThis.process?.versions?.bun\n\n/**\n * Indicates if running in Deno runtime.\n */\nconst isDeno = () => !!globalThis.Deno\n\n/**\n * Indicates if running in Netlify runtime.\n */\nconst isNetlify = () => typeof globalThis.Netlify === 'object'\n\n/**\n * Indicates if running in EdgeLight (Vercel Edge) runtime.\n */\nconst isEdgeLight = () => typeof globalThis.EdgeRuntime === 'object'\n\n/**\n * Indicates if running in Cloudflare Workers runtime.\n * See: https://developers.cloudflare.com/workers/runtime-apis/web-standards/#navigatoruseragent\n */\nconst isWorkerd = () => globalThis.navigator?.userAgent === 'Cloudflare-Workers'\n\nfunction detectRuntime(): RuntimeName {\n  // Note: we're currently not taking 'fastly' into account. Why?\n  const runtimeChecks = [\n    [isNetlify, 'netlify'],\n    [isEdgeLight, 'edge-light'],\n    [isWorkerd, 'workerd'],\n    [isDeno, 'deno'],\n    [isBun, 'bun'],\n    [isNode, 'node'],\n  ] as const\n\n  const detectedRuntime =\n    runtimeChecks\n      // TODO: Transforming destructuring to the configured target environment ('chrome58', 'edge16', 'firefox57', 'safari11') is not supported yet,\n      // so we can't write the following code yet:\n      // ```\n      // .flatMap(([isCurrentRuntime, runtime]) => isCurrentRuntime() ? [runtime] : [])\n      // ```\n      .flatMap((check) => (check[0]() ? [check[1]] : []))\n      .at(0) ?? ''\n\n  return detectedRuntime\n}\n\nconst runtimesPrettyNames = {\n  node: 'Node.js',\n  workerd: 'Cloudflare Workers',\n  deno: 'Deno and Deno Deploy',\n  netlify: 'Netlify Edge Functions',\n  'edge-light':\n    'Edge Runtime (Vercel Edge Functions, Vercel Edge Middleware, Next.js (Pages Router) Edge API Routes, Next.js (App Router) Edge Route Handlers or Next.js Middleware)',\n} as const\n\ntype GetRuntimeOutput = {\n  id: RuntimeName\n  prettyName: string\n  isEdge: boolean\n}\n\nexport function getRuntime(): GetRuntimeOutput {\n  const runtimeId = detectRuntime()\n\n  return {\n    id: runtimeId,\n    // Fallback to the runtimeId if the runtime is not in the list\n    prettyName: runtimesPrettyNames[runtimeId] || runtimeId,\n    isEdge: ['workerd', 'deno', 'netlify', 'edge-light'].includes(runtimeId),\n  }\n}\n", "export { BinaryEngine } from './binary/BinaryEngine'\nexport { ClientEngine } from './client/ClientEngine'\nexport {\n  type BatchTransactionOptions,\n  type CustomDataProxyFetch,\n  type Engine,\n  type EngineConfig,\n  type GraphQLQuery,\n  type InteractiveTransactionOptions,\n  type TransactionOptions,\n} from './common/Engine'\nexport * from './common/types/EngineValidationError'\nexport type { LogEmitter } from './common/types/Events'\nexport * from './common/types/JsonProtocol'\nexport type { Metric, MetricHistogram, MetricHistogramBucket, Metrics } from './common/types/Metrics'\nexport type { IsolationLevel, Options, TransactionHeaders } from './common/types/Transaction'\nexport { DataProxyEngine } from './data-proxy/DataProxyEngine'\nexport { LibraryEngine } from './library/LibraryEngine'\nexport * as NodeAPILibraryTypes from './library/types/Library'\n", "{\n  \"name\": \"@prisma/client\",\n  \"version\": \"6.12.0\",\n  \"description\": \"Prisma Client is an auto-generated, type-safe and modern JavaScript/TypeScript ORM for Node.js that's tailored to your data. Supports PostgreSQL, CockroachDB, MySQL, MariaDB, SQL Server, SQLite & MongoDB databases.\",\n  \"keywords\": [\n    \"ORM\",\n    \"Prisma\",\n    \"prisma2\",\n    \"Prisma Client\",\n    \"client\",\n    \"query\",\n    \"query-builder\",\n    \"database\",\n    \"db\",\n    \"JavaScript\",\n    \"JS\",\n    \"TypeScript\",\n    \"TS\",\n    \"SQL\",\n    \"SQLite\",\n    \"pg\",\n    \"Postgres\",\n    \"PostgreSQL\",\n    \"CockroachDB\",\n    \"MySQL\",\n    \"MariaDB\",\n    \"MSSQL\",\n    \"SQL Server\",\n    \"SQLServer\",\n    \"MongoDB\",\n    \"react-native\"\n  ],\n  \"main\": \"default.js\",\n  \"types\": \"default.d.ts\",\n  \"browser\": \"index-browser.js\",\n  \"exports\": {\n    \"./package.json\": \"./package.json\",\n    \".\": {\n      \"require\": {\n        \"types\": \"./default.d.ts\",\n        \"node\": \"./default.js\",\n        \"edge-light\": \"./default.js\",\n        \"workerd\": \"./default.js\",\n        \"worker\": \"./default.js\",\n        \"browser\": \"./index-browser.js\"\n      },\n      \"import\": {\n        \"types\": \"./default.d.ts\",\n        \"node\": \"./default.js\",\n        \"edge-light\": \"./default.js\",\n        \"workerd\": \"./default.js\",\n        \"worker\": \"./default.js\",\n        \"browser\": \"./index-browser.js\"\n      },\n      \"default\": \"./default.js\"\n    },\n    \"./edge\": {\n      \"types\": \"./edge.d.ts\",\n      \"require\": \"./edge.js\",\n      \"import\": \"./edge.js\",\n      \"default\": \"./edge.js\"\n    },\n    \"./react-native\": {\n      \"types\": \"./react-native.d.ts\",\n      \"require\": \"./react-native.js\",\n      \"import\": \"./react-native.js\",\n      \"default\": \"./react-native.js\"\n    },\n    \"./extension\": {\n      \"types\": \"./extension.d.ts\",\n      \"require\": \"./extension.js\",\n      \"import\": \"./extension.js\",\n      \"default\": \"./extension.js\"\n    },\n    \"./index-browser\": {\n      \"types\": \"./index.d.ts\",\n      \"require\": \"./index-browser.js\",\n      \"import\": \"./index-browser.js\",\n      \"default\": \"./index-browser.js\"\n    },\n    \"./index\": {\n      \"types\": \"./index.d.ts\",\n      \"require\": \"./index.js\",\n      \"import\": \"./index.js\",\n      \"default\": \"./index.js\"\n    },\n    \"./wasm\": {\n      \"types\": \"./wasm.d.ts\",\n      \"require\": \"./wasm.js\",\n      \"import\": \"./wasm.mjs\",\n      \"default\": \"./wasm.mjs\"\n    },\n    \"./runtime/client\": {\n      \"types\": \"./runtime/client.d.ts\",\n      \"node\": {\n        \"require\": \"./runtime/client.js\",\n        \"default\": \"./runtime/client.js\"\n      },\n      \"require\": \"./runtime/client.js\",\n      \"import\": \"./runtime/client.mjs\",\n      \"default\": \"./runtime/client.mjs\"\n    },\n    \"./runtime/library\": {\n      \"types\": \"./runtime/library.d.ts\",\n      \"require\": \"./runtime/library.js\",\n      \"import\": \"./runtime/library.mjs\",\n      \"default\": \"./runtime/library.mjs\"\n    },\n    \"./runtime/binary\": {\n      \"types\": \"./runtime/binary.d.ts\",\n      \"require\": \"./runtime/binary.js\",\n      \"import\": \"./runtime/binary.mjs\",\n      \"default\": \"./runtime/binary.mjs\"\n    },\n    \"./runtime/wasm-engine-edge\": {\n      \"types\": \"./runtime/wasm-engine-edge.d.ts\",\n      \"require\": \"./runtime/wasm-engine-edge.js\",\n      \"import\": \"./runtime/wasm-engine-edge.mjs\",\n      \"default\": \"./runtime/wasm-engine-edge.mjs\"\n    },\n    \"./runtime/wasm-compiler-edge\": {\n      \"types\": \"./runtime/wasm-compiler-edge.d.ts\",\n      \"require\": \"./runtime/wasm-compiler-edge.js\",\n      \"import\": \"./runtime/wasm-compiler-edge.mjs\",\n      \"default\": \"./runtime/wasm-compiler-edge.mjs\"\n    },\n    \"./runtime/edge\": {\n      \"types\": \"./runtime/edge.d.ts\",\n      \"require\": \"./runtime/edge.js\",\n      \"import\": \"./runtime/edge-esm.js\",\n      \"default\": \"./runtime/edge-esm.js\"\n    },\n    \"./runtime/react-native\": {\n      \"types\": \"./runtime/react-native.d.ts\",\n      \"require\": \"./runtime/react-native.js\",\n      \"import\": \"./runtime/react-native.js\",\n      \"default\": \"./runtime/react-native.js\"\n    },\n    \"./generator-build\": {\n      \"require\": \"./generator-build/index.js\",\n      \"import\": \"./generator-build/index.js\",\n      \"default\": \"./generator-build/index.js\"\n    },\n    \"./sql\": {\n      \"require\": {\n        \"types\": \"./sql.d.ts\",\n        \"node\": \"./sql.js\",\n        \"default\": \"./sql.js\"\n      },\n      \"import\": {\n        \"types\": \"./sql.d.ts\",\n        \"node\": \"./sql.mjs\",\n        \"default\": \"./sql.mjs\"\n      },\n      \"default\": \"./sql.js\"\n    },\n    \"./*\": \"./*\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"engines\": {\n    \"node\": \">=18.18\"\n  },\n  \"homepage\": \"https://www.prisma.io\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/prisma/prisma.git\",\n    \"directory\": \"packages/client\"\n  },\n  \"author\": \"Tim Suchanek <suchanek@prisma.io>\",\n  \"bugs\": \"https://github.com/prisma/prisma/issues\",\n  \"scripts\": {\n    \"dev\": \"DEV=true tsx helpers/build.ts\",\n    \"build\": \"tsx helpers/build.ts\",\n    \"test\": \"dotenv -e ../../.db.env -- jest --silent\",\n    \"test:e2e\": \"dotenv -e ../../.db.env -- tsx tests/e2e/_utils/run.ts\",\n    \"test:functional\": \"dotenv -e ../../.db.env -- tsx helpers/functional-test/run-tests.ts\",\n    \"test:functional:client\": \"pnpm run test:functional --client-runtime client --preview-features driverAdapters,queryCompiler --engine-type client --runInBand --json --outputFile tests/functional/results.json\",\n    \"test:memory\": \"dotenv -e ../../.db.env -- tsx helpers/memory-tests.ts\",\n    \"test:functional:code\": \"dotenv -e ../../.db.env -- tsx helpers/functional-test/run-tests.ts --no-types\",\n    \"test:functional:types\": \"dotenv -e ../../.db.env -- tsx helpers/functional-test/run-tests.ts --types-only\",\n    \"test:knownQueryCompilerFailures:check\": \"tsx helpers/functional-test/check-known-failures.ts\",\n    \"test:knownQueryCompilerFailures:record\": \"tsx helpers/functional-test/check-known-failures.ts --record\",\n    \"test-notypes\": \"dotenv -e ../../.db.env -- jest --testPathIgnorePatterns src/__tests__/types/types.test.ts\",\n    \"generate\": \"node scripts/postinstall.js\",\n    \"postinstall\": \"node scripts/postinstall.js\",\n    \"prepublishOnly\": \"pnpm run build\",\n    \"new-test\": \"tsx ./helpers/new-test/new-test.ts\"\n  },\n  \"files\": [\n    \"README.md\",\n    \"runtime\",\n    \"scripts\",\n    \"generator-build\",\n    \"edge.js\",\n    \"edge.d.ts\",\n    \"wasm.js\",\n    \"wasm.d.ts\",\n    \"index.js\",\n    \"index.d.ts\",\n    \"react-native.js\",\n    \"react-native.d.ts\",\n    \"default.js\",\n    \"default.d.ts\",\n    \"index-browser.js\",\n    \"extension.js\",\n    \"extension.d.ts\",\n    \"sql.d.ts\",\n    \"sql.js\",\n    \"sql.mjs\"\n  ],\n  \"devDependencies\": {\n    \"@cloudflare/workers-types\": \"4.20250214.0\",\n    \"@codspeed/benchmark.js-plugin\": \"4.0.0\",\n    \"@faker-js/faker\": \"9.6.0\",\n    \"@fast-check/jest\": \"2.0.3\",\n    \"@inquirer/prompts\": \"7.3.3\",\n    \"@jest/create-cache-key-function\": \"29.7.0\",\n    \"@jest/globals\": \"29.7.0\",\n    \"@jest/test-sequencer\": \"29.7.0\",\n    \"@libsql/client\": \"0.8.0\",\n    \"@neondatabase/serverless\": \"0.10.2\",\n    \"@opentelemetry/api\": \"1.9.0\",\n    \"@opentelemetry/context-async-hooks\": \"2.0.0\",\n    \"@opentelemetry/instrumentation\": \"0.57.2\",\n    \"@opentelemetry/resources\": \"1.30.1\",\n    \"@opentelemetry/sdk-trace-base\": \"1.30.1\",\n    \"@opentelemetry/semantic-conventions\": \"1.30.0\",\n    \"@planetscale/database\": \"1.19.0\",\n    \"@prisma/adapter-better-sqlite3\": \"workspace:*\",\n    \"@prisma/adapter-d1\": \"workspace:*\",\n    \"@prisma/adapter-libsql\": \"workspace:*\",\n    \"@prisma/adapter-mariadb\": \"workspace:*\",\n    \"@prisma/adapter-mssql\": \"workspace:*\",\n    \"@prisma/adapter-neon\": \"workspace:*\",\n    \"@prisma/adapter-pg\": \"workspace:*\",\n    \"@prisma/adapter-planetscale\": \"workspace:*\",\n    \"@prisma/client-common\": \"workspace:*\",\n    \"@prisma/client-engine-runtime\": \"workspace:*\",\n    \"@prisma/client-generator-js\": \"workspace:*\",\n    \"@prisma/client-generator-ts\": \"workspace:*\",\n    \"@prisma/config\": \"workspace:*\",\n    \"@prisma/debug\": \"workspace:*\",\n    \"@prisma/dmmf\": \"workspace:*\",\n    \"@prisma/driver-adapter-utils\": \"workspace:*\",\n    \"@prisma/engines\": \"workspace:*\",\n    \"@prisma/engines-version\": \"6.12.0-15.8047c96bbd92db98a2abc7c9323ce77c02c89dbc\",\n    \"@prisma/fetch-engine\": \"workspace:*\",\n    \"@prisma/generator\": \"workspace:*\",\n    \"@prisma/generator-helper\": \"workspace:*\",\n    \"@prisma/get-platform\": \"workspace:*\",\n    \"@prisma/instrumentation\": \"workspace:*\",\n    \"@prisma/internals\": \"workspace:*\",\n    \"@prisma/migrate\": \"workspace:*\",\n    \"@prisma/mini-proxy\": \"0.9.5\",\n    \"@prisma/query-compiler-wasm\": \"6.12.0-15.8047c96bbd92db98a2abc7c9323ce77c02c89dbc\",\n    \"@prisma/query-engine-wasm\": \"6.12.0-15.8047c96bbd92db98a2abc7c9323ce77c02c89dbc\",\n    \"@prisma/ts-builders\": \"workspace:*\",\n    \"@snaplet/copycat\": \"6.0.0\",\n    \"@swc-node/register\": \"1.10.9\",\n    \"@swc/core\": \"1.11.5\",\n    \"@swc/jest\": \"0.2.37\",\n    \"@timsuchanek/copy\": \"1.4.5\",\n    \"@types/debug\": \"4.1.12\",\n    \"@types/fs-extra\": \"11.0.4\",\n    \"@types/jest\": \"29.5.14\",\n    \"@types/js-levenshtein\": \"1.1.3\",\n    \"@types/mssql\": \"9.1.5\",\n    \"@types/node\": \"18.19.76\",\n    \"@types/pg\": \"8.11.11\",\n    \"arg\": \"5.0.2\",\n    \"benchmark\": \"2.1.4\",\n    \"cookie-es\": \"2.0.0\",\n    \"decimal.js\": \"10.5.0\",\n    \"esbuild\": \"0.25.5\",\n    \"execa\": \"5.1.1\",\n    \"expect-type\": \"1.2.0\",\n    \"fs-extra\": \"11.3.0\",\n    \"get-stream\": \"6.0.1\",\n    \"globby\": \"11.1.0\",\n    \"indent-string\": \"4.0.0\",\n    \"jest\": \"29.7.0\",\n    \"jest-extended\": \"4.0.2\",\n    \"jest-junit\": \"16.0.0\",\n    \"jest-serializer-ansi-escapes\": \"4.0.0\",\n    \"jest-snapshot\": \"29.7.0\",\n    \"js-levenshtein\": \"1.1.6\",\n    \"kleur\": \"4.1.5\",\n    \"klona\": \"2.0.6\",\n    \"mariadb\": \"3.4.0\",\n    \"memfs\": \"4.17.2\",\n    \"mssql\": \"11.0.1\",\n    \"new-github-issue-url\": \"0.2.1\",\n    \"p-retry\": \"4.6.2\",\n    \"pg\": \"8.14.1\",\n    \"resolve\": \"1.22.10\",\n    \"rimraf\": \"6.0.1\",\n    \"simple-statistics\": \"7.8.8\",\n    \"sort-keys\": \"5.1.0\",\n    \"source-map-support\": \"0.5.21\",\n    \"sql-template-tag\": \"5.2.1\",\n    \"stacktrace-parser\": \"0.1.11\",\n    \"strip-ansi\": \"6.0.1\",\n    \"strip-indent\": \"4.0.0\",\n    \"tempy\": \"3.0.0\",\n    \"ts-node\": \"10.9.2\",\n    \"ts-pattern\": \"5.6.2\",\n    \"tsd\": \"0.31.2\",\n    \"typescript\": \"5.4.5\",\n    \"undici\": \"7.4.0\",\n    \"wrangler\": \"3.111.0\",\n    \"zx\": \"8.4.1\"\n  },\n  \"peerDependencies\": {\n    \"prisma\": \"*\",\n    \"typescript\": \">=5.1.0\"\n  },\n  \"peerDependenciesMeta\": {\n    \"prisma\": {\n      \"optional\": true\n    },\n    \"typescript\": {\n      \"optional\": true\n    }\n  },\n  \"sideEffects\": false\n}", "import { isPrismaPostgresDev, PRISMA_POSTGRES_PROTOCOL } from '@prisma/internals'\n\nimport { resolveDatasourceUrl } from '../../../init/resolveDatasourceUrl'\nimport { InvalidDatasourceError } from '../../data-proxy/errors/InvalidDatasourceError'\nimport { EngineConfig } from '../Engine'\n\nexport interface GetUrlAndApiKeyOptions {\n  clientVersion: string\n  inlineDatasources: EngineConfig['inlineDatasources']\n  overrideDatasources: EngineConfig['overrideDatasources']\n  env: Record<string, string | undefined>\n}\n\nexport interface UrlAndApiKey {\n  url: HttpUrl\n  apiKey: string\n}\n\nexport type HttpUrl = URL & { protocol: 'http' | 'https' }\n\nexport function getUrlAndApiKey(options: GetUrlAndApiKeyOptions): UrlAndApiKey {\n  const errorInfo = { clientVersion: options.clientVersion }\n  const dsName = Object.keys(options.inlineDatasources)[0]\n  const serviceURL = resolveDatasourceUrl({\n    inlineDatasources: options.inlineDatasources,\n    overrideDatasources: options.overrideDatasources,\n    clientVersion: options.clientVersion,\n    env: { ...options.env, ...(typeof process !== 'undefined' ? process.env : {}) },\n  })\n\n  let url: URL\n  try {\n    url = new URL(serviceURL)\n  } catch {\n    throw new InvalidDatasourceError(\n      `Error validating datasource \\`${dsName}\\`: the URL must start with the protocol \\`prisma://\\``,\n      errorInfo,\n    )\n  }\n\n  const { protocol, searchParams } = url\n\n  if (protocol !== 'prisma:' && protocol !== PRISMA_POSTGRES_PROTOCOL) {\n    throw new InvalidDatasourceError(\n      `Error validating datasource \\`${dsName}\\`: the URL must start with the protocol \\`prisma://\\` or \\`prisma+postgres://\\``,\n      errorInfo,\n    )\n  }\n\n  const apiKey = searchParams.get('api_key')\n  if (apiKey === null || apiKey.length < 1) {\n    throw new InvalidDatasourceError(\n      `Error validating datasource \\`${dsName}\\`: the URL must contain a valid API key`,\n      errorInfo,\n    )\n  }\n\n  // To simplify things, `prisma dev`, for now, will not support HTTPS.\n  // In the future, if HTTPS for `prisma dev` becomes a thing, we'll need this line to be dynamic.\n  const httpScheme = isPrismaPostgresDev(url) ? 'http:' : 'https:'\n\n  // Switching from `prisma:` or `prisma+postgres:` to `http:` or `https:` by\n  // assigning to the `protocol` property is not allowed by the WHATWG URL API,\n  // it would be silently ignored without throwing an error. We have to manually\n  // update the protocol via string replacement.\n  const httpUrl = new URL(url.href.replace(protocol, httpScheme)) as HttpUrl\n\n  return { apiKey, url: httpUrl }\n}\n", "import { GetPrismaClientConfig } from '@prisma/client-common'\n\nimport { Datasources } from '../../getPrismaClient'\nimport { getRuntime } from '../../utils/getRuntime'\nimport { PrismaClientInitializationError } from '../errors/PrismaClientInitializationError'\n\nexport function resolveDatasourceUrl({\n  inlineDatasources,\n  overrideDatasources,\n  env,\n  clientVersion,\n}: {\n  inlineDatasources: GetPrismaClientConfig['inlineDatasources']\n  overrideDatasources: Datasources\n  env: Record<string, string | undefined>\n  clientVersion: string\n}) {\n  let resolvedUrl: string | undefined\n  const datasourceName = Object.keys(inlineDatasources)[0]\n  const datasourceUrl = inlineDatasources[datasourceName]?.url\n  const overrideUrl = overrideDatasources[datasourceName]?.url\n\n  if (datasourceName === undefined) {\n    resolvedUrl = undefined\n  } else if (overrideUrl) {\n    resolvedUrl = overrideUrl\n  } else if (datasourceUrl?.value) {\n    resolvedUrl = datasourceUrl.value\n  } else if (datasourceUrl?.fromEnvVar) {\n    resolvedUrl = env[datasourceUrl.fromEnvVar]\n  }\n\n  // env var is set for use but url is undefined\n  if (datasourceUrl?.fromEnvVar !== undefined && resolvedUrl === undefined) {\n    if (\n      (TARGET_BUILD_TYPE === 'edge' ||\n        TARGET_BUILD_TYPE === 'wasm-engine-edge' ||\n        TARGET_BUILD_TYPE === 'wasm-compiler-edge') &&\n      getRuntime().id === 'workerd'\n    ) {\n      throw new PrismaClientInitializationError(\n        `error: Environment variable not found: ${datasourceUrl.fromEnvVar}.\n\nIn Cloudflare module Workers, environment variables are available only in the Worker's \\`env\\` parameter of \\`fetch\\`.\nTo solve this, provide the connection string directly: https://pris.ly/d/cloudflare-datasource-url`,\n        clientVersion,\n      )\n    }\n\n    // error matches as much as possible the usual engine error\n    throw new PrismaClientInitializationError(\n      `error: Environment variable not found: ${datasourceUrl.fromEnvVar}.`,\n      clientVersion,\n    )\n  }\n\n  // should not happen: no override, no env, no direct value\n  if (resolvedUrl === undefined) {\n    throw new PrismaClientInitializationError(\n      `error: Missing URL environment variable, value, or override.`,\n      clientVersion,\n    )\n  }\n\n  return resolvedUrl\n}\n", "import { setClassName } from '@prisma/internals'\n\nimport type { DataProxyErrorInfo } from './DataProxyError'\nimport { DataProxyError } from './DataProxyError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface InvalidDatasourceErrorInfo extends DataProxyErrorInfo {}\nexport class InvalidDatasourceError extends DataProxyError {\n  public name = 'InvalidDatasourceError'\n  public code = 'P6001'\n\n  constructor(message: string, info: InvalidDatasourceErrorInfo) {\n    super(message, setRetryable(info, false))\n  }\n}\nsetClassName(InvalidDatasourceError, 'InvalidDatasourceError')\n", "import { PrismaClientError, type PrismaClientErrorInfo } from '../../../errors/PrismaClientError'\n\nexport interface DataProxyErrorInfo extends PrismaClientErrorInfo {\n  isRetryable?: boolean\n}\n\nexport abstract class DataProxyError extends PrismaClientError {\n  isRetryable: boolean\n\n  constructor(message: string, info: DataProxyErrorInfo) {\n    super(message, info)\n\n    this.isRetryable = info.isRetryable ?? true\n  }\n}\n", "export interface PrismaClientErrorInfo {\n  clientVersion: string\n  cause?: Error\n}\n\nexport abstract class PrismaClientError extends Error {\n  public abstract name: string\n  public abstract code: string\n  public clientVersion: string\n  public cause?: Error // like https://github.com/es-shims/error-cause\n\n  constructor(message: string, info: PrismaClientErrorInfo) {\n    super(message)\n\n    this.clientVersion = info.clientVersion\n    this.cause = info.cause\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.name\n  }\n}\n", "export function setRetryable<T>(info: T, retryable: boolean) {\n  return {\n    ...info,\n    isRetryable: retryable,\n  }\n}\n", "import type { QueryEngineLogLevel } from '@prisma/client-common'\nimport { enginesVersion } from '@prisma/engines-version'\nimport type { TracingHelper } from '@prisma/internals'\n\nexport type AccelerateHeaders = {\n  'Content-Type': string\n  'Prisma-Engine-Hash': string\n  'Prisma-Engine-Version': string\n  'X-Capture-Telemetry'?: string\n  'X-Transaction-Id'?: string\n  Accept: string\n  Authorization: string\n  traceparent?: string\n}\n\ntype HeaderBuilderOptions = {\n  traceparent?: string\n  transactionId?: string\n}\n\nexport class HeaderBuilder {\n  readonly apiKey: string\n  readonly tracingHelper: TracingHelper\n  readonly logLevel: QueryEngineLogLevel\n  readonly logQueries: boolean | undefined\n  readonly engineHash: string\n\n  constructor({\n    apiKey,\n    tracingHelper,\n    logLevel,\n    logQueries,\n    engineHash,\n  }: {\n    apiKey: string\n    tracingHelper: TracingHelper\n    logLevel: QueryEngineLogLevel\n    logQueries: boolean | undefined\n    engineHash: string\n  }) {\n    this.apiKey = apiKey\n    this.tracingHelper = tracingHelper\n    this.logLevel = logLevel\n    this.logQueries = logQueries\n    this.engineHash = engineHash\n  }\n\n  build({ traceparent, transactionId }: HeaderBuilderOptions = {}): AccelerateHeaders {\n    const headers: AccelerateHeaders = {\n      Accept: 'application/json',\n      Authorization: `Bearer ${this.apiKey}`,\n      'Content-Type': 'application/json',\n      'Prisma-Engine-Hash': this.engineHash,\n      'Prisma-Engine-Version': enginesVersion,\n    }\n\n    if (this.tracingHelper.isEnabled()) {\n      headers.traceparent = traceparent ?? this.tracingHelper.getTraceParent()\n    }\n\n    if (transactionId) {\n      headers['X-Transaction-Id'] = transactionId\n    }\n\n    const captureTelemetry = this.#buildCaptureSettings()\n\n    if (captureTelemetry.length > 0) {\n      headers['X-Capture-Telemetry'] = captureTelemetry.join(', ')\n    }\n\n    return headers\n  }\n\n  #buildCaptureSettings(): string[] {\n    const captureTelemetry: string[] = []\n\n    if (this.tracingHelper.isEnabled()) {\n      captureTelemetry.push('tracing')\n    }\n\n    if (this.logLevel) {\n      captureTelemetry.push(this.logLevel)\n    }\n\n    if (this.logQueries) {\n      captureTelemetry.push('query')\n    }\n\n    return captureTelemetry\n  }\n}\n", "export type EngineTimestamp = [seconds: number, nanoseconds: number]\n\n/**\n * Converts engine timestamp to JS timestamp, as accepted by `Date` constructor\n */\nexport function convertEngineTimestamp(timestamp: EngineTimestamp): number {\n  return timestamp[0] * 1e3 + timestamp[1] / 1e6\n}\n\n/**\n * Parses a `Date` from engine timestamp\n */\nexport function dateFromEngineTimestamp(timestamp: EngineTimestamp): Date {\n  return new Date(convertEngineTimestamp(timestamp))\n}\n", "import { Debug } from '@prisma/debug'\nimport { TracingHelper } from '@prisma/internals'\n\nimport { PrismaClientKnownRequestError } from '../../errors/PrismaClientKnownRequestError'\nimport { PrismaClientUnknownRequestError } from '../../errors/PrismaClientUnknownRequestError'\nimport { prismaGraphQLToJSError } from '../../errors/utils/prismaGraphQLToJSError'\nimport { getUrlAndApiKey } from '../common/accelerate/getUrlAndApiKey'\nimport { HeaderBuilder } from '../common/accelerate/HeaderBuilder'\nimport type {\n  BatchQueryEngineResult,\n  CustomDataProxyFetch,\n  EngineConfig,\n  InteractiveTransactionOptions,\n  RequestBatchOptions,\n  RequestOptions,\n} from '../common/Engine'\nimport { Engine } from '../common/Engine'\nimport type { LogEmitter } from '../common/types/Events'\nimport { JsonQuery } from '../common/types/JsonProtocol'\nimport { Metrics, MetricsOptionsJson, MetricsOptionsPrometheus } from '../common/types/Metrics'\nimport {\n  QueryEngineBatchResult,\n  QueryEngineResult,\n  QueryEngineResultData,\n  QueryEngineResultExtensions,\n} from '../common/types/QueryEngine'\nimport { RequestError } from '../common/types/RequestError'\nimport type * as Tx from '../common/types/Transaction'\nimport { getBatchRequestPayload } from '../common/utils/getBatchRequestPayload'\nimport { DataProxyError } from './errors/DataProxyError'\nimport { ForcedRetryError } from './errors/ForcedRetryError'\nimport { NotImplementedYetError } from './errors/NotImplementedYetError'\nimport { SchemaMissingError } from './errors/SchemaMissingError'\nimport { responseToError } from './errors/utils/responseToError'\nimport { backOff } from './utils/backOff'\nimport { toBase64 } from './utils/base64'\nimport { checkForbiddenMetrics } from './utils/checkForbiddenMetrics'\nimport { dateFromEngineTimestamp } from './utils/EngineTimestamp'\nimport { getClientVersion } from './utils/getClientVersion'\nimport { request } from './utils/request'\n\nconst MAX_RETRIES = 3\n\nconst debug = Debug('prisma:client:dataproxyEngine')\n\ntype DataProxyTxInfoPayload = {\n  endpoint: string\n}\n\ntype DataProxyTxInfo = Tx.InteractiveTransactionInfo<DataProxyTxInfoPayload>\n\ntype RequestInternalOptions = {\n  body: Record<string, unknown>\n  customDataProxyFetch?: CustomDataProxyFetch\n  traceparent?: string\n  interactiveTransaction?: InteractiveTransactionOptions<DataProxyTxInfoPayload>\n}\n\ntype StartTransactionResult = {\n  id: string\n  'data-proxy': {\n    endpoint: string\n  }\n  extensions?: QueryEngineResultExtensions\n}\n\ntype CloseTransactionResult = {\n  extensions?: QueryEngineResultExtensions\n}\n\nexport class DataProxyEngine implements Engine<DataProxyTxInfoPayload> {\n  name = 'DataProxyEngine' as const\n\n  private inlineSchema: string\n  readonly inlineSchemaHash: string\n  private inlineDatasources: EngineConfig['inlineDatasources']\n  private config: EngineConfig\n  private logEmitter: LogEmitter\n  private env: { [k in string]?: string }\n\n  private clientVersion: string\n  private engineHash: string\n  private tracingHelper: TracingHelper\n  private remoteClientVersion!: string\n  private host!: string\n  private headerBuilder!: HeaderBuilder\n  private startPromise?: Promise<void>\n  private protocol!: 'http' | 'https'\n\n  constructor(config: EngineConfig) {\n    checkForbiddenMetrics(config)\n\n    this.config = config\n    this.env = config.env\n    // TODO (perf) schema should be uploaded as-is\n    this.inlineSchema = toBase64(config.inlineSchema)\n    this.inlineDatasources = config.inlineDatasources\n    this.inlineSchemaHash = config.inlineSchemaHash\n    this.clientVersion = config.clientVersion\n    this.engineHash = config.engineVersion\n    this.logEmitter = config.logEmitter\n    this.tracingHelper = config.tracingHelper\n  }\n\n  apiKey(): string {\n    return this.headerBuilder.apiKey\n  }\n\n  // The version is the engine hash\n  // that we expect to have on the remote QE\n  version() {\n    return this.engineHash\n  }\n\n  /**\n   * This is not a real \"start\" method, but rather a deferred initialization. We\n   * will only parse the URL on the first request to match the behavior of other\n   * engines, they will only throw errors on their very first request. This is\n   * needed in case the URL is misconfigured.\n   */\n  async start() {\n    if (this.startPromise !== undefined) {\n      await this.startPromise\n    }\n\n    this.startPromise = (async () => {\n      const { apiKey, url } = this.getURLAndAPIKey()\n\n      this.host = url.host\n      this.protocol = url.protocol\n      this.headerBuilder = new HeaderBuilder({\n        apiKey,\n        tracingHelper: this.tracingHelper,\n        logLevel: this.config.logLevel ?? 'error',\n        logQueries: this.config.logQueries,\n        engineHash: this.engineHash,\n      })\n\n      this.remoteClientVersion = await getClientVersion(this.host, this.config)\n\n      debug('host', this.host)\n      debug('protocol', this.protocol)\n    })()\n\n    await this.startPromise\n  }\n\n  async stop() {}\n\n  private propagateResponseExtensions(extensions: QueryEngineResultExtensions): void {\n    if (extensions?.logs?.length) {\n      extensions.logs.forEach((log) => {\n        switch (log.level) {\n          case 'debug':\n          case 'trace':\n            debug(log)\n            break\n\n          case 'error':\n          case 'warn':\n          case 'info': {\n            this.logEmitter.emit(log.level, {\n              timestamp: dateFromEngineTimestamp(log.timestamp),\n              message: log.attributes.message ?? '',\n              target: log.target,\n            })\n            break\n          }\n\n          case 'query': {\n            this.logEmitter.emit('query', {\n              query: log.attributes.query ?? '',\n              // first part is in seconds, second is in nanoseconds, we need to convert both to milliseconds\n              timestamp: dateFromEngineTimestamp(log.timestamp),\n              duration: log.attributes.duration_ms ?? 0,\n              params: log.attributes.params ?? '',\n              target: log.target,\n            })\n\n            break\n          }\n\n          default:\n            log.level satisfies never\n        }\n      })\n    }\n\n    if (extensions?.traces?.length) {\n      this.tracingHelper.dispatchEngineSpans(extensions.traces)\n    }\n  }\n\n  onBeforeExit() {\n    throw new Error('\"beforeExit\" hook is not applicable to the remote query engine')\n  }\n\n  private async url(action: string) {\n    await this.start()\n\n    return `${this.protocol}//${this.host}/${this.remoteClientVersion}/${this.inlineSchemaHash}/${action}`\n  }\n\n  private async uploadSchema() {\n    const spanOptions = {\n      name: 'schemaUpload',\n      internal: true,\n    }\n\n    return this.tracingHelper.runInChildSpan(spanOptions, async () => {\n      const response = await request(await this.url('schema'), {\n        method: 'PUT',\n        headers: this.headerBuilder.build(),\n        body: this.inlineSchema,\n        clientVersion: this.clientVersion,\n      })\n\n      if (!response.ok) {\n        debug('schema response status', response.status)\n      }\n\n      const error = await responseToError(response, this.clientVersion)\n\n      if (error) {\n        this.logEmitter.emit('warn', {\n          message: `Error while uploading schema: ${error.message}`,\n          timestamp: new Date(),\n          target: '',\n        })\n        throw error\n      } else {\n        this.logEmitter.emit('info', {\n          message: `Schema (re)uploaded (hash: ${this.inlineSchemaHash})`,\n          timestamp: new Date(),\n          target: '',\n        })\n      }\n    })\n  }\n\n  request<T>(\n    query: JsonQuery,\n    { traceparent, interactiveTransaction, customDataProxyFetch }: RequestOptions<DataProxyTxInfoPayload>,\n  ) {\n    return this.requestInternal<T>({\n      body: query,\n      traceparent,\n      interactiveTransaction,\n      customDataProxyFetch,\n    })\n  }\n\n  async requestBatch<T>(\n    queries: JsonQuery[],\n    { traceparent, transaction, customDataProxyFetch }: RequestBatchOptions<DataProxyTxInfoPayload>,\n  ): Promise<BatchQueryEngineResult<T>[]> {\n    const interactiveTransaction = transaction?.kind === 'itx' ? transaction.options : undefined\n\n    const body = getBatchRequestPayload(queries, transaction)\n\n    const batchResult = await this.requestInternal<T, true>({\n      body,\n      customDataProxyFetch,\n      interactiveTransaction,\n      traceparent,\n    })\n\n    return batchResult.map((result) => {\n      if (result.extensions) {\n        this.propagateResponseExtensions(result.extensions)\n      }\n\n      if ('errors' in result) {\n        return this.convertProtocolErrorsToClientError(result.errors)\n      }\n\n      return result\n    })\n  }\n\n  private requestInternal<T, Batch extends boolean = false>({\n    body,\n    traceparent,\n    customDataProxyFetch,\n    interactiveTransaction,\n  }: RequestInternalOptions): Promise<Batch extends true ? QueryEngineResult<T>[] : QueryEngineResultData<T>> {\n    return this.withRetry({\n      actionGerund: 'querying',\n      callback: async ({ logHttpCall }) => {\n        const url = interactiveTransaction\n          ? `${interactiveTransaction.payload.endpoint}/graphql`\n          : await this.url('graphql')\n\n        logHttpCall(url)\n\n        const response = await request(\n          url,\n          {\n            method: 'POST',\n            headers: this.headerBuilder.build({ traceparent, transactionId: interactiveTransaction?.id }),\n            body: JSON.stringify(body),\n            clientVersion: this.clientVersion,\n          },\n          customDataProxyFetch,\n        )\n\n        if (!response.ok) {\n          debug('graphql response status', response.status)\n        }\n\n        await this.handleError(await responseToError(response, this.clientVersion))\n\n        const result = (await response.json()) as Batch extends true ? QueryEngineBatchResult<T> : QueryEngineResult<T>\n\n        if (result.extensions) {\n          this.propagateResponseExtensions(result.extensions)\n        }\n\n        if ('errors' in result) {\n          throw this.convertProtocolErrorsToClientError(result.errors)\n        }\n\n        if ('batchResult' in result) {\n          // TODO: TypeScript 5.8+ should be able to narrow the expected result type correctly,\n          // so this will be assignable (https://github.com/microsoft/TypeScript/pull/56941).\n          // Since these are internal types, we should be able to rely on it once TypeScript 5.8\n          // is released, and change this to just `return result.batchResult`.\n          return result.batchResult as QueryEngineResult<T>[] as Batch extends true\n            ? QueryEngineResult<T>[]\n            : QueryEngineResultData<T>\n        }\n\n        // TODO: TypeScript 5.8+ should be able to narrow the expected result type correctly,\n        // so this will be assignable (https://github.com/microsoft/TypeScript/pull/56941).\n        // Since these are internal types, we should be able to rely on it once TypeScript 5.8\n        // is released, and change this to just `return result`.\n        return result as QueryEngineResultData<T> as Batch extends true\n          ? QueryEngineResult<T>[]\n          : QueryEngineResultData<T>\n      },\n    })\n  }\n\n  /**\n   * Send START, COMMIT, or ROLLBACK to the Query Engine\n   * @param action START, COMMIT, or ROLLBACK\n   * @param headers headers for tracing\n   * @param options to change the default timeouts\n   * @param info transaction information for the QE\n   */\n  transaction(action: 'start', headers: Tx.TransactionHeaders, options: Tx.Options): Promise<DataProxyTxInfo>\n  transaction(action: 'commit', headers: Tx.TransactionHeaders, info: DataProxyTxInfo): Promise<undefined>\n  transaction(action: 'rollback', headers: Tx.TransactionHeaders, info: DataProxyTxInfo): Promise<undefined>\n  async transaction(action: any, headers: Tx.TransactionHeaders, arg?: any) {\n    const actionToGerund = {\n      start: 'starting',\n      commit: 'committing',\n      rollback: 'rolling back',\n    }\n\n    return this.withRetry({\n      actionGerund: `${actionToGerund[action]} transaction`,\n      callback: async ({ logHttpCall }) => {\n        if (action === 'start') {\n          const body = JSON.stringify({\n            max_wait: arg.maxWait,\n            timeout: arg.timeout,\n            isolation_level: arg.isolationLevel,\n          })\n\n          const url = await this.url('transaction/start')\n\n          logHttpCall(url)\n\n          const response = await request(url, {\n            method: 'POST',\n            headers: this.headerBuilder.build({ traceparent: headers.traceparent }),\n            body,\n            clientVersion: this.clientVersion,\n          })\n\n          await this.handleError(await responseToError(response, this.clientVersion))\n\n          const result = (await response.json()) as StartTransactionResult\n\n          const { extensions } = result\n          if (extensions) {\n            this.propagateResponseExtensions(extensions)\n          }\n\n          const id = result.id as string\n          const endpoint = result['data-proxy'].endpoint as string\n\n          return { id, payload: { endpoint } }\n        } else {\n          const url = `${arg.payload.endpoint}/${action}`\n\n          logHttpCall(url)\n\n          const response = await request(url, {\n            method: 'POST',\n            headers: this.headerBuilder.build({ traceparent: headers.traceparent }),\n            clientVersion: this.clientVersion,\n          })\n\n          await this.handleError(await responseToError(response, this.clientVersion))\n\n          const result = (await response.json()) as CloseTransactionResult\n\n          const { extensions } = result\n          if (extensions) {\n            this.propagateResponseExtensions(extensions)\n          }\n\n          return undefined\n        }\n      },\n    })\n  }\n\n  private getURLAndAPIKey() {\n    return getUrlAndApiKey({\n      clientVersion: this.clientVersion,\n      env: this.env,\n      inlineDatasources: this.inlineDatasources,\n      overrideDatasources: this.config.overrideDatasources,\n    })\n  }\n\n  metrics(options: MetricsOptionsJson): Promise<Metrics>\n  metrics(options: MetricsOptionsPrometheus): Promise<string>\n  metrics(): Promise<Metrics> | Promise<string> {\n    throw new NotImplementedYetError('Metrics are not yet supported for Accelerate', {\n      clientVersion: this.clientVersion,\n    })\n  }\n\n  private async withRetry<T>(args: {\n    callback: (api: { logHttpCall: (url: string) => void }) => Promise<T>\n    actionGerund: string\n  }): Promise<T> {\n    for (let attempt = 0; ; attempt++) {\n      const logHttpCall = (url: string) => {\n        this.logEmitter.emit('info', {\n          message: `Calling ${url} (n=${attempt})`,\n          timestamp: new Date(),\n          target: '',\n        })\n      }\n\n      try {\n        return await args.callback({ logHttpCall })\n      } catch (e) {\n        if (!(e instanceof DataProxyError)) throw e\n        if (!e.isRetryable) throw e\n        if (attempt >= MAX_RETRIES) {\n          if (e instanceof ForcedRetryError) {\n            throw e.cause\n          } else {\n            throw e\n          }\n        }\n\n        this.logEmitter.emit('warn', {\n          message: `Attempt ${attempt + 1}/${MAX_RETRIES} failed for ${args.actionGerund}: ${e.message ?? '(unknown)'}`,\n          timestamp: new Date(),\n          target: '',\n        })\n\n        const delay = await backOff(attempt)\n\n        this.logEmitter.emit('warn', {\n          message: `Retrying after ${delay}ms`,\n          timestamp: new Date(),\n          target: '',\n        })\n      }\n    }\n  }\n\n  private async handleError(error: DataProxyError | undefined): Promise<void> {\n    if (error instanceof SchemaMissingError) {\n      await this.uploadSchema()\n      throw new ForcedRetryError({\n        clientVersion: this.clientVersion,\n        cause: error,\n      })\n    } else if (error) {\n      throw error\n    }\n  }\n\n  private convertProtocolErrorsToClientError(\n    errors: RequestError[],\n  ): PrismaClientKnownRequestError | PrismaClientUnknownRequestError {\n    // TODO: handle Rust panics and driver adapter errors correctly. See `LibraryEngine#buildQueryError`.\n    if (errors.length === 1) {\n      return prismaGraphQLToJSError(errors[0], this.config.clientVersion, this.config.activeProvider!)\n    } else {\n      return new PrismaClientUnknownRequestError(JSON.stringify(errors), {\n        clientVersion: this.config.clientVersion,\n      })\n    }\n  }\n\n  applyPendingMigrations(): Promise<void> {\n    throw new Error('Method not implemented.')\n  }\n}\n", "import { setClassName } from '@prisma/internals'\n\nimport type { DataProxyErrorInfo } from './DataProxyError'\nimport { DataProxyError } from './DataProxyError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface ForcedRetryErrorInfo extends DataProxyErrorInfo {}\n\nexport class ForcedRetryError extends DataProxyError {\n  public name = 'ForcedRetryError'\n  public code = 'P5001'\n\n  constructor(info: ForcedRetryErrorInfo) {\n    super('This request must be retried', setRetryable(info, true))\n  }\n}\nsetClassName(ForcedRetryError, 'ForcedRetryError')\n", "import { setClassName } from '@prisma/internals'\n\nimport type { DataProxyErrorInfo } from './DataProxyError'\nimport { DataProxyError } from './DataProxyError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface NotImplementedYetErrorInfo extends DataProxyErrorInfo {}\n\nexport class NotImplementedYetError extends DataProxyError {\n  public name = 'NotImplementedYetError'\n  public code = 'P5004'\n\n  constructor(message: string, info: NotImplementedYetErrorInfo) {\n    super(message, setRetryable(info, false))\n  }\n}\nsetClassName(NotImplementedYetError, 'NotImplementedYetError')\n", "import { setClassName } from '@prisma/internals'\n\nimport type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface SchemaMissingErrorInfo extends DataProxyAPIErrorInfo {}\n\nexport class SchemaMissingError extends DataProxyAPIError {\n  public name = 'SchemaMissingError'\n  public code = 'P5005'\n\n  constructor(info: DataProxyAPIErrorInfo) {\n    super('Schema needs to be uploaded', setRetryable(info, true))\n  }\n}\nsetClassName(SchemaMissingError, 'SchemaMissingError')\n", "import type { DataProxyErrorInfo } from './DataProxyError'\nimport { DataProxyError } from './DataProxyError'\n\nexport interface DataProxyAPIErrorInfo extends DataProxyErrorInfo {\n  response: Response\n}\n\nexport abstract class DataProxyAPIError extends DataProxyError {\n  response: Response\n\n  constructor(message: string, info: DataProxyAPIErrorInfo) {\n    super(message, info)\n\n    this.response = info.response\n\n    // add request id to response message if it is present in the response header\n    const requestId = this.response.headers.get('prisma-request-id')\n    if (requestId) {\n      const messageSuffix = `(The request id was: ${requestId})`\n      this.message = this.message + ' ' + messageSuffix\n    }\n  }\n}\n", "import { PrismaClientInitializationError } from '../../../../errors/PrismaClientInitializationError'\nimport { PrismaClientKnownRequestError } from '../../../../errors/PrismaClientKnownRequestError'\nimport { BAD_REQUEST_DEFAULT_MESSAGE, BadRequestError } from '../BadRequestError'\nimport type { DataProxyError } from '../DataProxyError'\nimport { HealthcheckTimeoutError } from '../EngineHealthcheckTimeoutError'\nimport { EngineStartupError } from '../EngineStartupError'\nimport { EngineVersionNotSupportedError } from '../EngineVersionNotSupportedError'\nimport { GATEWAY_TIMEOUT_DEFAULT_MESSAGE, GatewayTimeoutError } from '../GatewayTimeoutError'\nimport { InteractiveTransactionError } from '../InteractiveTransactionError'\nimport { InvalidRequestError } from '../InvalidRequestError'\nimport { NOT_FOUND_DEFAULT_MESSAGE, NotFoundError } from '../NotFoundError'\nimport { SchemaMissingError } from '../SchemaMissingError'\nimport { SERVER_ERROR_DEFAULT_MESSAGE, ServerError } from '../ServerError'\nimport { UNAUTHORIZED_DEFAULT_MESSAGE, UnauthorizedError } from '../UnauthorizedError'\nimport { USAGE_EXCEEDED_DEFAULT_MESSAGE, UsageExceededError } from '../UsageExceededError'\n\ntype DataProxyHttpError =\n  | 'InternalDataProxyError'\n  | { EngineNotStarted: { reason: EngineNotStartedReason } }\n  | { InteractiveTransactionMisrouted: { reason: InteractiveTransactionMisroutedReason } }\n  | { InvalidRequestError: { reason: string } }\n\ntype EngineNotStartedReason =\n  | 'SchemaMissing'\n  | 'EngineVersionNotSupported'\n  | { EngineStartupError: { msg: string; logs: string[] } }\n  | { KnownEngineStartupError: { msg: string; error_code: string } }\n  | { HealthcheckTimeout: { logs: string[] } }\n\ntype InteractiveTransactionMisroutedReason = 'IDParseError' | 'NoQueryEngineFoundError' | 'TransactionStartError'\n\ntype QueryEngineError = {\n  is_panic: boolean\n  message: string\n  error_code: string\n}\n\ntype ResponseErrorBody =\n  | { type: 'DataProxyError'; body: DataProxyHttpError }\n  | { type: 'QueryEngineError'; body: QueryEngineError }\n  | { type: 'UnknownJsonError'; body: unknown }\n  | { type: 'UnknownTextError'; body: string }\n  | { type: 'EmptyError' }\n\nasync function getResponseErrorBody(response: Response): Promise<ResponseErrorBody> {\n  let text: string\n\n  try {\n    text = await response.text()\n  } catch {\n    return { type: 'EmptyError' }\n  }\n\n  try {\n    const error = JSON.parse(text)\n\n    if (typeof error === 'string') {\n      switch (error) {\n        case 'InternalDataProxyError':\n          return { type: 'DataProxyError', body: error }\n        default:\n          return { type: 'UnknownTextError', body: error }\n      }\n    }\n\n    if (typeof error === 'object' && error !== null) {\n      if ('is_panic' in error && 'message' in error && 'error_code' in error) {\n        return { type: 'QueryEngineError', body: error }\n      }\n\n      if ('EngineNotStarted' in error || 'InteractiveTransactionMisrouted' in error || 'InvalidRequestError' in error) {\n        const reason = (Object.values(error as object)[0] as any).reason\n        if (typeof reason === 'string' && !['SchemaMissing', 'EngineVersionNotSupported'].includes(reason)) {\n          return { type: 'UnknownJsonError', body: error }\n        }\n        return { type: 'DataProxyError', body: error }\n      }\n    }\n\n    return { type: 'UnknownJsonError', body: error }\n  } catch {\n    return text === '' ? { type: 'EmptyError' } : { type: 'UnknownTextError', body: text }\n  }\n}\n\nexport async function responseToError(response: Response, clientVersion: string): Promise<DataProxyError | undefined> {\n  if (response.ok) return undefined\n\n  const info = { clientVersion, response }\n  const error = await getResponseErrorBody(response)\n\n  if (error.type === 'QueryEngineError') {\n    throw new PrismaClientKnownRequestError(error.body.message, { code: error.body.error_code, clientVersion })\n  }\n\n  if (error.type === 'DataProxyError') {\n    if (error.body === 'InternalDataProxyError') {\n      throw new ServerError(info, 'Internal Data Proxy error')\n    }\n\n    if ('EngineNotStarted' in error.body) {\n      if (error.body.EngineNotStarted.reason === 'SchemaMissing') {\n        return new SchemaMissingError(info)\n      }\n      if (error.body.EngineNotStarted.reason === 'EngineVersionNotSupported') {\n        throw new EngineVersionNotSupportedError(info)\n      }\n      if ('EngineStartupError' in error.body.EngineNotStarted.reason) {\n        const { msg, logs } = error.body.EngineNotStarted.reason.EngineStartupError\n        throw new EngineStartupError(info, msg, logs)\n      }\n      if ('KnownEngineStartupError' in error.body.EngineNotStarted.reason) {\n        const { msg, error_code } = error.body.EngineNotStarted.reason.KnownEngineStartupError\n        throw new PrismaClientInitializationError(msg, clientVersion, error_code)\n      }\n      if ('HealthcheckTimeout' in error.body.EngineNotStarted.reason) {\n        const { logs } = error.body.EngineNotStarted.reason.HealthcheckTimeout\n        throw new HealthcheckTimeoutError(info, logs)\n      }\n    }\n\n    if ('InteractiveTransactionMisrouted' in error.body) {\n      const messageByReason: Record<InteractiveTransactionMisroutedReason, string> = {\n        IDParseError: 'Could not parse interactive transaction ID',\n        NoQueryEngineFoundError: 'Could not find Query Engine for the specified host and transaction ID',\n        TransactionStartError: 'Could not start interactive transaction',\n      }\n      throw new InteractiveTransactionError(info, messageByReason[error.body.InteractiveTransactionMisrouted.reason])\n    }\n\n    if ('InvalidRequestError' in error.body) {\n      throw new InvalidRequestError(info, error.body.InvalidRequestError.reason)\n    }\n  }\n\n  if (response.status === 401 || response.status === 403) {\n    throw new UnauthorizedError(info, buildErrorMessage(UNAUTHORIZED_DEFAULT_MESSAGE, error))\n  }\n\n  if (response.status === 404) {\n    return new NotFoundError(info, buildErrorMessage(NOT_FOUND_DEFAULT_MESSAGE, error))\n  }\n\n  if (response.status === 429) {\n    throw new UsageExceededError(info, buildErrorMessage(USAGE_EXCEEDED_DEFAULT_MESSAGE, error))\n  }\n\n  if (response.status === 504) {\n    throw new GatewayTimeoutError(info, buildErrorMessage(GATEWAY_TIMEOUT_DEFAULT_MESSAGE, error))\n  }\n\n  if (response.status >= 500) {\n    throw new ServerError(info, buildErrorMessage(SERVER_ERROR_DEFAULT_MESSAGE, error))\n  }\n\n  if (response.status >= 400) {\n    throw new BadRequestError(info, buildErrorMessage(BAD_REQUEST_DEFAULT_MESSAGE, error))\n  }\n\n  return undefined\n}\n\nfunction buildErrorMessage(defaultMessage: string, errorBody: ResponseErrorBody): string {\n  if (errorBody.type === 'EmptyError') {\n    return defaultMessage\n  }\n  return `${defaultMessage}: ${JSON.stringify(errorBody)}`\n}\n", "import { setClassName } from '@prisma/internals'\n\nimport type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface BadRequestErrorInfo extends DataProxyAPIErrorInfo {}\n\nexport const BAD_REQUEST_DEFAULT_MESSAGE = 'This request could not be understood by the server'\n\nexport class BadRequestError extends DataProxyAPIError {\n  public name = 'BadRequestError'\n  public code = 'P5000'\n\n  constructor(info: BadRequestErrorInfo, message?: string, code?: string) {\n    super(message || BAD_REQUEST_DEFAULT_MESSAGE, setRetryable(info, false))\n    if (code) this.code = code\n  }\n}\nsetClassName(BadRequestError, 'BadRequestError')\n", "import { setClassName } from '@prisma/internals'\n\nimport type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface HealthcheckTimeoutErrorInfo extends DataProxyAPIErrorInfo {}\n\nexport class HealthcheckTimeoutError extends DataProxyAPIError {\n  public name = 'HealthcheckTimeoutError'\n  public code = 'P5013'\n  public logs: string[]\n\n  constructor(info: HealthcheckTimeoutErrorInfo, logs: string[]) {\n    super('Engine not started: healthcheck timeout', setRetryable(info, true))\n    this.logs = logs\n  }\n}\nsetClassName(HealthcheckTimeoutError, 'HealthcheckTimeoutError')\n", "import { setClassName } from '@prisma/internals'\n\nimport type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface EngineStartupErrorInfo extends DataProxyAPIErrorInfo {}\n\nexport class EngineStartupError extends DataProxyAPIError {\n  public name = 'EngineStartupError'\n  public code = 'P5014'\n  public logs: string[]\n\n  constructor(info: EngineStartupErrorInfo, message: string, logs: string[]) {\n    super(message, setRetryable(info, true))\n    this.logs = logs\n  }\n}\nsetClassName(EngineStartupError, 'EngineStartupError')\n", "import { setClassName } from '@prisma/internals'\n\nimport type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface EngineVersionNotSupportedErrorInfo extends DataProxyAPIErrorInfo {}\n\nexport class EngineVersionNotSupportedError extends DataProxyAPIError {\n  public name = 'EngineVersionNotSupportedError'\n  public code = 'P5012'\n\n  constructor(info: EngineVersionNotSupportedErrorInfo) {\n    super('Engine version is not supported', setRetryable(info, false))\n  }\n}\nsetClassName(EngineVersionNotSupportedError, 'EngineVersionNotSupportedError')\n", "import { setClassName } from '@prisma/internals'\n\nimport type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface GatewayTimeoutErrorInfo extends DataProxyAPIErrorInfo {}\n\nexport const GATEWAY_TIMEOUT_DEFAULT_MESSAGE = 'Request timed out'\n\nexport class GatewayTimeoutError extends DataProxyAPIError {\n  public name = 'GatewayTimeoutError'\n  public code = 'P5009'\n\n  constructor(info: GatewayTimeoutErrorInfo, message = GATEWAY_TIMEOUT_DEFAULT_MESSAGE) {\n    super(message, setRetryable(info, false))\n  }\n}\nsetClassName(GatewayTimeoutError, 'GatewayTimeoutError')\n", "import { setClassName } from '@prisma/internals'\n\nimport type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface InteractiveTransactionErrorInfo extends DataProxyAPIErrorInfo {}\n\nexport const INTERACTIVE_TRANSACTION_ERROR_DEFAULT_MESSAGE = 'Interactive transaction error'\n\nexport class InteractiveTransactionError extends DataProxyAPIError {\n  public name = 'InteractiveTransactionError'\n  public code = 'P5015'\n\n  constructor(info: InteractiveTransactionErrorInfo, message = INTERACTIVE_TRANSACTION_ERROR_DEFAULT_MESSAGE) {\n    super(message, setRetryable(info, false))\n  }\n}\nsetClassName(InteractiveTransactionError, 'InteractiveTransactionError')\n", "import { setClassName } from '@prisma/internals'\n\nimport type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface InvalidRequestErrorInfo extends DataProxyAPIErrorInfo {}\n\nexport const INVALID_REQUEST_DEFAULT_MESSAGE = 'Request parameters are invalid'\n\n/**\n * Used when the request validation failed.\n * The difference from `BadRequestError` is the latter is used when the server couldn't understand the request,\n * while this error means the server could understand it but rejected due to some parameters being invalid.\n */\nexport class InvalidRequestError extends DataProxyAPIError {\n  public name = 'InvalidRequestError'\n  public code = 'P5011'\n\n  constructor(info: InvalidRequestErrorInfo, message = INVALID_REQUEST_DEFAULT_MESSAGE) {\n    super(message, setRetryable(info, false))\n  }\n}\nsetClassName(InvalidRequestError, 'InvalidRequestError')\n", "import { setClassName } from '@prisma/internals'\n\nimport type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface NotFoundErrorInfo extends DataProxyAPIErrorInfo {}\n\nexport const NOT_FOUND_DEFAULT_MESSAGE = 'Requested resource does not exist'\n\nexport class NotFoundError extends DataProxyAPIError {\n  public name = 'NotFoundError'\n  public code = 'P5003'\n\n  constructor(info: NotFoundErrorInfo, message = NOT_FOUND_DEFAULT_MESSAGE) {\n    super(message, setRetryable(info, false))\n  }\n}\nsetClassName(NotFoundError, 'NotFoundError')\n", "import { setClassName } from '@prisma/internals'\n\nimport type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface ServerErrorInfo extends DataProxyAPIErrorInfo {}\n\nexport const SERVER_ERROR_DEFAULT_MESSAGE = 'Unknown server error'\n\nexport class ServerError extends DataProxyAPIError {\n  public name = 'ServerError'\n  public code = 'P5006'\n  public logs?: string[]\n\n  constructor(info: ServerErrorInfo, message?: string, logs?: string[]) {\n    super(message || SERVER_ERROR_DEFAULT_MESSAGE, setRetryable(info, true))\n    this.logs = logs\n  }\n}\nsetClassName(ServerError, 'ServerError')\n", "import { setClassName } from '@prisma/internals'\n\nimport type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface UnauthorizedErrorInfo extends DataProxyAPIErrorInfo {}\n\nexport const UNAUTHORIZED_DEFAULT_MESSAGE = 'Unauthorized, check your connection string'\n\nexport class UnauthorizedError extends DataProxyAPIError {\n  public name = 'UnauthorizedError'\n  public code = 'P5007'\n\n  constructor(info: UnauthorizedErrorInfo, message = UNAUTHORIZED_DEFAULT_MESSAGE) {\n    super(message, setRetryable(info, false))\n  }\n}\nsetClassName(UnauthorizedError, 'UnauthorizedError')\n", "import { setClassName } from '@prisma/internals'\n\nimport type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface UsageExceededErrorInfo extends DataProxyAPIErrorInfo {}\n\nexport const USAGE_EXCEEDED_DEFAULT_MESSAGE = 'Usage exceeded, retry again later'\n\nexport class UsageExceededError extends DataProxyAPIError {\n  public name = 'UsageExceededError'\n  public code = 'P5008'\n\n  constructor(info: UsageExceededErrorInfo, message = USAGE_EXCEEDED_DEFAULT_MESSAGE) {\n    super(message, setRetryable(info, true))\n  }\n}\nsetClassName(UsageExceededError, 'UsageExceededError')\n", "const BACKOFF_INTERVAL = 50\n\nexport function backOff(n: number): Promise<number> {\n  const baseDelay = Math.pow(2, n) * BACKOFF_INTERVAL\n  const jitter = Math.ceil(Math.random() * baseDelay) - Math.ceil(baseDelay / 2)\n  const total = baseDelay + jitter\n\n  return new Promise((done) => setTimeout(() => done(total), total))\n}\n", "/*\nbtoa version, that correctly handles multibyte strings\nAdapted from https://gist.github.com/jonleighton/958841\nMIT LICENSE\nCopyright 2011 Jon Leighton\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\nconst encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nexport function toBase64(str: string) {\n  const bytes = new TextEncoder().encode(str)\n  let base64 = ''\n  const byteLength = bytes.byteLength\n  const byteRemainder = byteLength % 3\n  const mainLength = byteLength - byteRemainder\n\n  let a: number, b: number, c: number, d: number\n  let chunk: number\n\n  // Main loop deals with bytes in chunks of 3\n  for (let i = 0; i < mainLength; i = i + 3) {\n    // Combine the three bytes into a single integer\n    chunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2]\n\n    // Use bitmasks to extract 6-bit segments from the triplet\n    a = (chunk & 16515072) >> 18 // 16515072 = (2^6 - 1) << 18\n    b = (chunk & 258048) >> 12 // 258048   = (2^6 - 1) << 12\n    c = (chunk & 4032) >> 6 // 4032     = (2^6 - 1) << 6\n    d = chunk & 63 // 63       = 2^6 - 1\n\n    // Convert the raw binary segments to the appropriate ASCII encoding\n    base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d]\n  }\n\n  // Deal with the remaining bytes and padding\n  if (byteRemainder == 1) {\n    chunk = bytes[mainLength]\n\n    a = (chunk & 252) >> 2 // 252 = (2^6 - 1) << 2\n\n    // Set the 4 least significant bits to zero\n    b = (chunk & 3) << 4 // 3   = 2^2 - 1\n\n    base64 += encodings[a] + encodings[b] + '=='\n  } else if (byteRemainder == 2) {\n    chunk = (bytes[mainLength] << 8) | bytes[mainLength + 1]\n\n    a = (chunk & 64512) >> 10 // 64512 = (2^6 - 1) << 10\n    b = (chunk & 1008) >> 4 // 1008  = (2^6 - 1) << 4\n\n    // Set the 2 least significant bits to zero\n    c = (chunk & 15) << 2 // 15    = 2^4 - 1\n\n    base64 += encodings[a] + encodings[b] + encodings[c] + '='\n  }\n\n  return base64\n}\n", "import { PrismaClientInitializationError } from '../../../errors/PrismaClientInitializationError'\nimport { EngineConfig } from '../..'\n\nexport function checkForbiddenMetrics(engineConfig: EngineConfig) {\n  const isMetricsEnabled = !!engineConfig.generator?.previewFeatures.some((feature) => {\n    return feature.toLowerCase().includes('metrics')\n  })\n\n  if (isMetricsEnabled) {\n    throw new PrismaClientInitializationError(\n      `The \\`metrics\\` preview feature is not yet available with Accelerate.\nPlease remove \\`metrics\\` from the \\`previewFeatures\\` in your schema.\n\nMore information about Accelerate: https://pris.ly/d/accelerate`,\n      engineConfig.clientVersion,\n    )\n  }\n}\n", "import { Debug } from '@prisma/debug'\nimport { dependencies } from '@prisma/engines/package.json'\n\nimport type { EngineConfig } from '../../common/Engine'\nimport { NotImplementedYetError } from '../errors/NotImplementedYetError'\nimport { request } from './request'\n\nconst semverRegex = /^[1-9][0-9]*\\.[0-9]+\\.[0-9]+$/\nconst debug = Debug('prisma:client:dataproxyEngine')\n\nasync function _getClientVersion(host: string, config: EngineConfig) {\n  const engineVersion = dependencies['@prisma/engines-version']\n  const clientVersion = config.clientVersion ?? 'unknown'\n\n  // Internal override for testing and manual version overrides.\n  // Automated tests should set this to \"0.0.0\" when using mini-proxy.\n  // Edge client does not have access to process.env, so we use globalThis.\n  if (process.env.PRISMA_CLIENT_DATA_PROXY_CLIENT_VERSION || globalThis.PRISMA_CLIENT_DATA_PROXY_CLIENT_VERSION) {\n    return process.env.PRISMA_CLIENT_DATA_PROXY_CLIENT_VERSION || globalThis.PRISMA_CLIENT_DATA_PROXY_CLIENT_VERSION\n  }\n\n  // for data proxy v2, or accelerate, resolution isn't needed\n  if (host.includes('accelerate') && clientVersion !== '0.0.0' && clientVersion !== 'in-memory') {\n    return clientVersion\n  }\n\n  const [version, suffix] = clientVersion?.split('-') ?? []\n\n  // we expect the version to match the pattern major.minor.patch\n  if (suffix === undefined && semverRegex.test(version)) {\n    return version\n  }\n\n  // if it is an integration or dev version, we resolve its dataproxy\n  // for this we infer the data proxy version from the engine version\n  if (suffix !== undefined || clientVersion === '0.0.0' || clientVersion === 'in-memory') {\n    const [version] = engineVersion.split('-') ?? []\n    const [major, minor, patch] = version.split('.')\n\n    // to ensure that the data proxy exists, we check if it's published\n    // we resolve with the closest or previous version published on npm\n    const pkgURL = prismaPkgURL(`<=${major}.${minor}.${patch}`)\n    const res = await request(pkgURL, { clientVersion })\n\n    if (!res.ok) {\n      throw new Error(\n        `Failed to fetch stable Prisma version, unpkg.com status ${res.status} ${\n          res.statusText\n          // eslint-disable-next-line @typescript-eslint/await-thenable\n        }, response body: ${(await res.text()) || '<empty body>'}`,\n      )\n    }\n\n    // we need to await for edge workers\n    // because it's using the global \"fetch\"\n    // eslint-disable-next-line @typescript-eslint/await-thenable\n    const bodyAsText = await res.text()\n    debug('length of body fetched from unpkg.com', bodyAsText.length)\n\n    let bodyAsJson\n    try {\n      bodyAsJson = JSON.parse(bodyAsText)\n    } catch (e) {\n      console.error('JSON.parse error: body fetched from unpkg.com: ', bodyAsText)\n      throw e\n    }\n\n    return bodyAsJson['version'] as string\n  }\n\n  // nothing matched, meaning that the provided version is invalid\n  throw new NotImplementedYetError('Only `major.minor.patch` versions are supported by Accelerate.', {\n    clientVersion,\n  })\n}\n\n/**\n * Determine the client version to be sent to the DataProxy\n * @param config\n * @returns\n */\nexport async function getClientVersion(host: string, config: EngineConfig) {\n  const version = await _getClientVersion(host, config)\n\n  debug('version', version)\n\n  return version\n}\n\n/**\n * We use unpkg.com to resolve the version of the data proxy. We chose this over\n * registry.npmjs.com because they cache their queries/responses so it is fast.\n * Moreover, unpkg.com is able to support comparison operators like `<=1.0.0`.\n * For us, that means we can provide a version that is too high (not published),\n * and it will be able to resolve to the closest existing (published) version.\n * @param version\n * @returns\n */\nfunction prismaPkgURL(version: string) {\n  return encodeURI(`https://unpkg.com/prisma@${version}/package.json`)\n}\n", "{\n  \"name\": \"@prisma/engines\",\n  \"version\": \"6.12.0\",\n  \"description\": \"This package is intended for Prisma's internal use\",\n  \"main\": \"dist/index.js\",\n  \"types\": \"dist/index.d.ts\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/prisma/prisma.git\",\n    \"directory\": \"packages/engines\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"author\": \"Tim Suchanek <suchanek@prisma.io>\",\n  \"devDependencies\": {\n    \"@swc/core\": \"1.11.5\",\n    \"@swc/jest\": \"0.2.37\",\n    \"@types/jest\": \"29.5.14\",\n    \"@types/node\": \"18.19.76\",\n    \"execa\": \"5.1.1\",\n    \"typescript\": \"5.4.5\",\n    \"vitest\": \"3.2.0\"\n  },\n  \"dependencies\": {\n    \"@prisma/debug\": \"workspace:*\",\n    \"@prisma/engines-version\": \"6.12.0-15.8047c96bbd92db98a2abc7c9323ce77c02c89dbc\",\n    \"@prisma/fetch-engine\": \"workspace:*\",\n    \"@prisma/get-platform\": \"workspace:*\"\n  },\n  \"scripts\": {\n    \"dev\": \"DEV=true tsx helpers/build.ts\",\n    \"build\": \"tsx helpers/build.ts\",\n    \"test\": \"vitest run\",\n    \"prepublishOnly\": \"pnpm run build\",\n    \"postinstall\": \"node scripts/postinstall.js\"\n  },\n  \"files\": [\n    \"dist\",\n    \"download\",\n    \"scripts\"\n  ],\n  \"sideEffects\": false\n}", "import { CustomDataProxyFetch } from '../../common/Engine'\nimport { RequestError } from '../errors/NetworkError'\n\n/**\n * `fetch` wrapper that applies the `customDataProxyFetch` override and handles\n * errors to attach error code.\n */\nexport async function request(\n  url: string,\n  options: RequestInit & { clientVersion: string },\n  customFetch: CustomDataProxyFetch = (fetch) => fetch,\n): Promise<Response> {\n  const { clientVersion, ...fetchOptions } = options\n  const decoratedFetch = customFetch(fetch) as typeof fetch\n\n  try {\n    return await decoratedFetch(url, fetchOptions)\n  } catch (error) {\n    const message = (error as Error).message ?? 'Unknown error'\n    throw new RequestError(message, { clientVersion, cause: error })\n  }\n}\n", "import { setClassName } from '@prisma/internals'\n\nimport type { DataProxyErrorInfo } from './DataProxyError'\nimport { DataProxyError } from './DataProxyError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface RequestErrorInfo extends DataProxyErrorInfo {}\n\nexport class RequestError extends DataProxyError {\n  public name = 'RequestError'\n  public code = 'P5010'\n\n  constructor(message: string, info: RequestErrorInfo) {\n    super(`Cannot fetch data from service:\\n${message}`, setRetryable(info, true))\n  }\n}\nsetClassName(RequestError, 'RequestError')\n", "import type { SqlDriverAdapterFactory } from '@prisma/driver-adapter-utils'\nimport { isPrismaPostgres } from '@prisma/internals'\n\n/**\n * - `copyEngine === false` implies Prisma Accelerate usage\n * - If we detect Prisma Accelerate usage, we want to recommend using `--no-engine` in production.\n * - Driver Adapters should NOT be used with `prisma generate `--no-engine`\n * - Driver Adapters should NOT be imported from `@prisma/client/edge` endpoint\n * - Accelerate should NOT be used with Driver Adapters\n * - Prisma Postgres can be used with either Accelerate or Driver Adapters\n */\n\ntype WarningDiagnostic = { _tag: 'warning'; value: [key: string, message: string, ...args: unknown[]] }\ntype ErrorDiagnostic = { _tag: 'error'; value: string }\n\ntype ValidateEngineInstanceConfigParams = {\n  url?: string\n  adapter?: SqlDriverAdapterFactory\n  copyEngine: boolean\n\n  /**\n   * The type indicates that {@link validateEngineInstanceConfig} only cares about\n   * the {@link targetBuildType} being `edge`. If all other input options are fixed,\n   * changing the value of this param to something else will exhibit no different\n   * validation behavior.\n   */\n  targetBuildType: 'edge' | (string & {}) // typeof TARGET_BUILD_TYPE\n}\n\ntype WithDiagnostics =\n  | {\n      ok: true\n\n      diagnostics: {\n        warnings: WarningDiagnostic[]\n        errors?: never\n      }\n    }\n  | {\n      ok: false\n\n      diagnostics: {\n        warnings: WarningDiagnostic[]\n        errors: [ErrorDiagnostic, ...ErrorDiagnostic[]]\n      }\n    }\n\ntype ValidateEngineInstanceConfigOutput = WithDiagnostics & {\n  isUsing: {\n    accelerate: boolean\n    ppg: boolean\n    driverAdapters: boolean\n  }\n}\n\n/**\n * Validates the engine instance configuration, without side effects.\n * @param url The URL passed to the Prisma Client constructor\n * @param adapter The driver adapter passed to the Prisma Client constructor\n * @param copyEngine Whether the engine was copied. `prisma generate --no-engine` implies `copyEngine: false`\n * @param targetBuildType The target build type\n */\nexport function validateEngineInstanceConfig({\n  url,\n  adapter,\n  copyEngine,\n  targetBuildType,\n}: ValidateEngineInstanceConfigParams): ValidateEngineInstanceConfigOutput {\n  const warnings = [] as WarningDiagnostic[]\n  const errors = [] as ErrorDiagnostic[]\n\n  const pushWarning = (input: WarningDiagnostic['value']) => {\n    warnings.push({ _tag: 'warning', value: input })\n  }\n\n  const pushError = (input: string[]) => {\n    const value = input.join('\\n')\n    errors.push({ _tag: 'error', value })\n  }\n\n  const isUsingPrismaAccelerate = Boolean(url?.startsWith('prisma://'))\n  const isUsingPrismaPostgres = isPrismaPostgres(url)\n  const isUsingDriverAdapters = Boolean(adapter)\n  const isAccelerateUrlScheme = isUsingPrismaAccelerate || isUsingPrismaPostgres\n\n  if (!isUsingDriverAdapters && copyEngine && isAccelerateUrlScheme) {\n    pushWarning([\n      'recommend--no-engine',\n      'In production, we recommend using `prisma generate --no-engine` (See: `prisma generate --help`)',\n    ])\n  }\n\n  const isAccelerateConfigured = isAccelerateUrlScheme || !copyEngine\n\n  // Note: we're explicitly allowing the `isUsingDriverAdapters && isUsingPrismaPostgres` case to pass through.\n  if (isUsingDriverAdapters && (isAccelerateConfigured || targetBuildType === 'edge')) {\n    if (targetBuildType === 'edge') {\n      pushError([\n        `Prisma Client was configured to use the \\`adapter\\` option but it was imported via its \\`/edge\\` endpoint.`,\n        `Please either remove the \\`/edge\\` endpoint or remove the \\`adapter\\` from the Prisma Client constructor.`,\n      ])\n    } else if (!copyEngine) {\n      pushError([\n        `Prisma Client was configured to use the \\`adapter\\` option but \\`prisma generate\\` was run with \\`--no-engine\\`.`,\n        `Please run \\`prisma generate\\` without \\`--no-engine\\` to be able to use Prisma Client with the adapter.`,\n      ])\n    } else if (isUsingPrismaAccelerate) {\n      pushError([\n        `Prisma Client was configured to use the \\`adapter\\` option but the URL was a \\`prisma://\\` URL.`,\n        `Please either use the \\`prisma://\\` URL or remove the \\`adapter\\` from the Prisma Client constructor.`,\n      ])\n    }\n  }\n\n  const isUsing = {\n    accelerate: isAccelerateConfigured,\n    ppg: isUsingPrismaPostgres,\n    driverAdapters: isUsingDriverAdapters,\n  }\n\n  function isNonEmptyArray<T>(arr: T[]): arr is [T, ...T[]] {\n    return arr.length > 0\n  }\n\n  if (isNonEmptyArray(errors)) {\n    return {\n      ok: false,\n      diagnostics: {\n        warnings,\n        errors,\n      },\n      isUsing,\n    }\n  }\n\n  return {\n    ok: true,\n    diagnostics: { warnings },\n    isUsing,\n  }\n}\n", "import { GetPrismaClientConfig } from '@prisma/client-common'\n\ntype Config = Pick<GetPrismaClientConfig, 'generator'>\n\n/**\n * Get preview features from the configuration stored in the generated client.\n */\nexport function getPreviewFeatures({ generator }: Config): string[] {\n  return generator?.previewFeatures ?? []\n}\n", "export const rawCommandArgsMapper = (command: object) => ({\n  command,\n})\n", "import { Debug } from '@prisma/debug'\nimport { Sql } from 'sql-template-tag'\n\nimport { MiddlewareArgsMapper } from '../../getPrismaClient'\nimport { mssqlPreparedStatement } from '../../utils/mssqlPreparedStatement'\nimport { serializeRawParameters } from '../../utils/serializeRawParameters'\nimport { isTypedSql } from '../types/exported'\nimport { RawQueryArgs } from '../types/exported/RawQueryArgs'\n\nconst ALTER_RE = /^(\\s*alter\\s)/i\n\nconst debug = Debug('prisma:client')\n\n// TODO also check/disallow for CREATE, DROP\nexport function checkAlter(activeProvider: string, query: string, values: unknown[], invalidCall: string) {\n  if (activeProvider !== 'postgresql' && activeProvider !== 'cockroachdb') {\n    return\n  }\n  if (values.length > 0 && ALTER_RE.exec(query)) {\n    // See https://github.com/prisma/prisma-client-js/issues/940 for more info\n    throw new Error(`Running ALTER using ${invalidCall} is not supported\nUsing the example below you can still execute your query with Prisma, but please note that it is vulnerable to SQL injection attacks and requires you to take care of input sanitization.\n\nExample:\n  await prisma.$executeRawUnsafe(\\`ALTER USER prisma WITH PASSWORD '\\${password}'\\`)\n\nMore Information: https://pris.ly/d/execute-raw\n`)\n  }\n}\n\ntype RawQueryArgsMapperInput = {\n  clientMethod: string\n  activeProvider: string\n}\n\nexport const rawQueryArgsMapper =\n  ({ clientMethod, activeProvider }: RawQueryArgsMapperInput) =>\n  (args: RawQueryArgs) => {\n    // TODO Clean up types\n    let queryString = ''\n    let parameters: { values: string; __prismaRawParameters__: true } | undefined\n    if (isTypedSql(args)) {\n      queryString = args.sql\n      parameters = {\n        values: serializeRawParameters(args.values),\n        __prismaRawParameters__: true,\n      }\n    } else if (Array.isArray(args)) {\n      // If this was called as prisma.$executeRaw(<SQL>, [...values]), assume it is a pre-prepared SQL statement, and forward it without any changes\n      const [query, ...values] = args\n      queryString = query\n      parameters = {\n        values: serializeRawParameters(values || []),\n        __prismaRawParameters__: true,\n      }\n    } else {\n      // If this was called as prisma.$executeRaw`<SQL>` try to generate a SQL prepared statement\n      switch (activeProvider) {\n        case 'sqlite':\n        case 'mysql': {\n          queryString = args.sql\n          parameters = {\n            values: serializeRawParameters(args.values),\n            __prismaRawParameters__: true,\n          }\n          break\n        }\n\n        case 'cockroachdb':\n        case 'postgresql':\n        case 'postgres': {\n          queryString = args.text\n\n          parameters = {\n            values: serializeRawParameters(args.values),\n            __prismaRawParameters__: true,\n          }\n          break\n        }\n\n        case 'sqlserver': {\n          queryString = mssqlPreparedStatement(args)\n          parameters = {\n            values: serializeRawParameters(args.values),\n            __prismaRawParameters__: true,\n          }\n          break\n        }\n        default: {\n          throw new Error(`The ${activeProvider} provider does not support ${clientMethod}`)\n        }\n      }\n    }\n\n    if (parameters?.values) {\n      debug(`prisma.${clientMethod}(${queryString}, ${parameters.values})`)\n    } else {\n      debug(`prisma.${clientMethod}(${queryString})`)\n    }\n\n    return { query: queryString, parameters }\n  }\n\ntype MiddlewareRawArgsTemplateString = [string[], ...unknown[]]\ntype MiddlewareRawArgsSql = [Sql]\n\nexport const templateStringMiddlewareArgsMapper: MiddlewareArgsMapper<Sql, MiddlewareRawArgsTemplateString> = {\n  requestArgsToMiddlewareArgs(sql) {\n    return [sql.strings, ...sql.values]\n  },\n\n  middlewareArgsToRequestArgs(requestArgs) {\n    const [strings, ...values] = requestArgs\n    return new Sql(strings, values)\n  },\n}\n\nexport const sqlMiddlewareArgsMapper: MiddlewareArgsMapper<Sql, MiddlewareRawArgsSql> = {\n  requestArgsToMiddlewareArgs(sql) {\n    return [sql]\n  },\n\n  middlewareArgsToRequestArgs(requestArgs) {\n    return requestArgs[0]\n  },\n}\n", "import type { Sql } from 'sql-template-tag'\n\n// Generate something like: SELECT * FROM User WHERE name = @P1 AND email = @P2 ...\nexport const mssqlPreparedStatement = (sql: Sql) => {\n  return sql.strings.reduce((acc, str, idx) => `${acc}@P${idx}${str}`)\n}\n", "import Decimal from 'decimal.js'\n\nimport { isDate } from './date'\n\nexport function serializeRawParameters(parameters: any[]): string {\n  try {\n    return serializeRawParametersInternal(parameters, 'fast')\n  } catch (error) {\n    // Got TypeError, try replacing values unsupported by JSON (i.e., BigInts)\n    // with strings inside arrays and objects.\n    return serializeRawParametersInternal(parameters, 'slow')\n  }\n}\n\nfunction serializeRawParametersInternal(parameters: any[], objectSerialization: 'fast' | 'slow'): string {\n  return JSON.stringify(parameters.map((parameter) => encodeParameter(parameter, objectSerialization)))\n}\n\nfunction encodeParameter(parameter: any, objectSerialization: 'fast' | 'slow'): unknown {\n  if (Array.isArray(parameter)) {\n    return parameter.map((item) => encodeParameter(item, objectSerialization))\n  }\n  if (typeof parameter === 'bigint') {\n    return {\n      prisma__type: 'bigint',\n      prisma__value: parameter.toString(),\n    }\n  }\n\n  if (isDate(parameter)) {\n    return {\n      prisma__type: 'date',\n      prisma__value: parameter.toJSON(),\n    }\n  }\n\n  if (Decimal.isDecimal(parameter)) {\n    return {\n      prisma__type: 'decimal',\n      prisma__value: parameter.toJSON(),\n    }\n  }\n\n  if (Buffer.isBuffer(parameter)) {\n    return {\n      prisma__type: 'bytes',\n      prisma__value: parameter.toString('base64'),\n    }\n  }\n\n  if (isArrayBufferLike(parameter)) {\n    return {\n      prisma__type: 'bytes',\n      prisma__value: Buffer.from(parameter).toString('base64'),\n    }\n  }\n\n  if (ArrayBuffer.isView(parameter)) {\n    const { buffer, byteOffset, byteLength } = parameter\n    return {\n      prisma__type: 'bytes',\n      prisma__value: Buffer.from(buffer, byteOffset, byteLength).toString('base64'),\n    }\n  }\n\n  if (typeof parameter === 'object' && objectSerialization === 'slow') {\n    return preprocessObject(parameter)\n  }\n\n  return parameter\n}\n\nfunction isArrayBufferLike(value: any): value is ArrayBufferLike {\n  if (value instanceof ArrayBuffer || value instanceof SharedArrayBuffer) {\n    return true\n  }\n\n  if (typeof value === 'object' && value !== null) {\n    return value[Symbol.toStringTag] === 'ArrayBuffer' || value[Symbol.toStringTag] === 'SharedArrayBuffer'\n  }\n\n  return false\n}\n\nfunction preprocessObject(obj: any): unknown {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj\n  }\n\n  if (typeof obj.toJSON === 'function') {\n    return obj.toJSON()\n  }\n\n  // TODO: map from blaze would've been convenient here to map arrays and objects uniformly,\n  // but importing it in this file causes compilation errors in tsd tests.\n\n  if (Array.isArray(obj)) {\n    return obj.map(preprocessValueInObject)\n  }\n\n  const result = {} as any\n\n  for (const key of Object.keys(obj as object)) {\n    result[key] = preprocessValueInObject(obj[key])\n  }\n\n  return result\n}\n\nfunction preprocessValueInObject(value: any): unknown {\n  if (typeof value === 'bigint') {\n    return value.toString()\n  }\n\n  return preprocessObject(value)\n}\n", "import type { PrismaOperationSpec, PrismaPromise, PrismaPromiseTransaction } from './PrismaPromise'\n\nexport type PrismaPromiseCallback = (transaction?: PrismaPromiseTransaction) => Promise<unknown>\n\n/**\n * Creates a [[PrismaPromise]]. It is Prisma's implementation of `Promise` which\n * is essentially a proxy for `Promise`. All the transaction-compatible client\n * methods return one, this allows for pre-preparing queries without executing\n * them until `.then` is called. It's the foundation of Prisma's query batching.\n * @param callback that will be wrapped within our promise implementation\n * @see [[PrismaPromise]]\n * @returns\n */\nexport type PrismaPromiseFactory = <T extends PrismaOperationSpec<unknown>>(\n  callback: PrismaPromiseCallback,\n  op?: T,\n) => PrismaPromise<unknown>\n\n/**\n * Creates a factory, that allows creating PrismaPromises, bound to a specific transactions\n * @param transaction\n * @returns\n */\nexport function createPrismaPromiseFactory(transaction?: PrismaPromiseTransaction): PrismaPromiseFactory {\n  return function createPrismaPromise<TSpec extends PrismaOperationSpec<unknown>>(\n    callback: PrismaPromiseCallback,\n    op?: TSpec,\n  ): PrismaPromise<unknown, TSpec> {\n    let promise: PrismaPromise<unknown> | undefined\n    const _callback = (callbackTransaction = transaction): PrismaPromise<unknown> => {\n      try {\n        // promises cannot be triggered twice after resolving\n        if (callbackTransaction === undefined || callbackTransaction?.kind === 'itx') {\n          return (promise ??= valueToPromise(callback(callbackTransaction)))\n        }\n\n        // but for batch tx we can trigger them again & again\n        return valueToPromise(callback(callbackTransaction))\n      } catch (error) {\n        // if the callback throws, then we reject the promise\n        // and that is because exceptions are not always async\n        return Promise.reject(error) as PrismaPromise<unknown>\n      }\n    }\n\n    return {\n      get spec() {\n        return op!\n      },\n\n      then(onFulfilled, onRejected) {\n        return _callback().then(onFulfilled, onRejected)\n      },\n      catch(onRejected) {\n        return _callback().catch(onRejected)\n      },\n      finally(onFinally) {\n        return _callback().finally(onFinally)\n      },\n\n      requestTransaction(batchTransaction) {\n        const promise = _callback(batchTransaction)\n\n        if (promise.requestTransaction) {\n          // we want to have support for nested promises\n          return promise.requestTransaction(batchTransaction)\n        }\n\n        return promise\n      },\n      [Symbol.toStringTag]: 'PrismaPromise',\n    }\n  }\n}\n\nfunction valueToPromise<T>(thing: T): PrismaPromise<T> {\n  if (typeof thing['then'] === 'function') {\n    return thing as PrismaPromise<T>\n  }\n\n  return Promise.resolve(thing) as PrismaPromise<T>\n}\n", "import type { Context } from '@opentelemetry/api'\nimport { EngineSpan, ExtendedSpanOptions, SpanCallback, TracingHelper, version } from '@prisma/internals'\n\nconst majorVersion = version.split('.')[0]\n\nexport const disabledTracingHelper: TracingHelper = {\n  isEnabled() {\n    return false\n  },\n  getTraceParent() {\n    // https://www.w3.org/TR/trace-context/#examples-of-http-traceparent-headers\n    // If traceparent ends with -00 this trace will not be sampled\n    // the query engine needs the `10` for the span and trace id otherwise it does not parse this\n    return `00-10-10-00`\n  },\n\n  dispatchEngineSpans() {},\n\n  getActiveContext() {\n    return undefined\n  },\n\n  runInChildSpan<R>(options: string | ExtendedSpanOptions, callback: SpanCallback<R>): R {\n    return callback()\n  },\n}\n\n/**\n * Tracing helper that can dynamically switch between enabled/disabled states\n * Needed because tracing can be disabled and enabled with the calls to\n * PrismaInstrumentation::disable/enable at any point\n */\nclass DynamicTracingHelper implements TracingHelper {\n  isEnabled(): boolean {\n    return this.getGlobalTracingHelper().isEnabled()\n  }\n  getTraceParent(context: Context) {\n    return this.getGlobalTracingHelper().getTraceParent(context)\n  }\n\n  dispatchEngineSpans(spans: EngineSpan[]) {\n    return this.getGlobalTracingHelper().dispatchEngineSpans(spans)\n  }\n\n  getActiveContext() {\n    return this.getGlobalTracingHelper().getActiveContext()\n  }\n  runInChildSpan<R>(options: string | ExtendedSpanOptions, callback: SpanCallback<R>): R {\n    return this.getGlobalTracingHelper().runInChildSpan(options, callback)\n  }\n\n  private getGlobalTracingHelper(): TracingHelper {\n    // These globals are defined in `@prisma/instrumentation`\n    const versionedPrismaInstrumentationGlobal = globalThis[`V${majorVersion}_PRISMA_INSTRUMENTATION`]\n    const fallbackPrismaInstrumentationGlobal = globalThis.PRISMA_INSTRUMENTATION\n\n    return (\n      versionedPrismaInstrumentationGlobal?.helper ??\n      // TODO(v7): In future major versions, the tracing helper should only be read from the versioned global field.\n      // This is to ensure that instrumentation libraries (including `@prisma/instrumentation`) can register tracing helpers with compatible interfaces for each major version - thus preventing potential crashes in case instrumentation libraries are not yet updated for a new major, allowing for easier migration.\n      // Currently, the versioned helper is preferred and the fallback helper is picked up for backwards compatibility.\n      fallbackPrismaInstrumentationGlobal?.helper ??\n      disabledTracingHelper\n    )\n  }\n}\n\nexport function getTracingHelper(): TracingHelper {\n  return new DynamicTracingHelper()\n}\n", "/**\n * Creates an exotic promise that opens after x `await`s.\n * @remarks\n * This is currently used for locking regular transactions.\n * This ensures that all queries are executed at once/batched.\n * Even if middlewares are in use, they'll all execute at once.\n * @param knock the amount of awaits to open the promise\n * @param cb the callback to execute and value to return\n * @returns\n */\nexport function getLockCountPromise<V = void>(knock: number, cb: () => V | void = () => {}) {\n  let resolve: (v: V | void) => void\n  const lock = new Promise<V | void>((res) => (resolve = res))\n\n  return {\n    then(onFulfilled) {\n      if (--knock === 0) resolve(cb())\n\n      return onFulfilled?.(lock as unknown as V | void)\n    },\n  } as PromiseLike<V | void>\n}\n", "type LogLevel = 'info' | 'query' | 'warn' | 'error'\ntype LogDefinition = {\n  level: LogLevel\n  emit: 'stdout' | 'event'\n}\n\nexport function getLogLevel(log: LogLevel | Array<LogLevel | LogDefinition>): LogLevel | undefined {\n  if (typeof log === 'string') {\n    return log\n  }\n  return log.reduce<LogLevel | undefined>((acc, curr) => {\n    const currentLevel = typeof curr === 'string' ? curr : curr.level\n    if (currentLevel === 'query') {\n      return acc\n    }\n    if (!acc) {\n      return currentLevel\n    }\n    if (curr === 'info' || acc === 'info') {\n      // info has precedence\n      return 'info'\n    }\n    return currentLevel\n  }, undefined)\n}\n", "import { UserArgs } from './core/request/UserArgs'\nimport { Action } from './core/types/exported/JsApi'\n\nexport type QueryMiddleware = (\n  params: QueryMiddlewareParams,\n  next: (params: QueryMiddlewareParams) => Promise<unknown>,\n) => Promise<unknown>\n\nexport type QueryMiddlewareParams = {\n  /** The model this is executed on */\n  model?: string\n  /** The action that is being handled */\n  action: Action\n  /** TODO what is this */\n  dataPath: string[]\n  /** TODO what is this */\n  runInTransaction: boolean\n  args?: UserArgs\n}\n\nexport type Namespace = 'all' | 'engine'\n\nexport class MiddlewareHandler<M extends Function> {\n  private _middlewares: M[] = []\n\n  use(middleware: M) {\n    this._middlewares.push(middleware)\n  }\n\n  get(id: number): M | undefined {\n    return this._middlewares[id]\n  }\n\n  has(id: number) {\n    return !!this._middlewares[id]\n  }\n\n  length() {\n    return this._middlewares.length\n  }\n}\n", "import { Context } from '@opentelemetry/api'\nimport { Debug } from '@prisma/debug'\nimport { assertNever } from '@prisma/internals'\nimport stripAnsi from 'strip-ansi'\n\nimport {\n  EngineValidationError,\n  InteractiveTransactionOptions,\n  JsonQuery,\n  LogEmitter,\n  TransactionOptions,\n} from '../runtime/core/engines'\nimport {\n  PrismaClientInitializationError,\n  PrismaClientKnownRequestError,\n  PrismaClientRustPanicError,\n  PrismaClientUnknownRequestError,\n} from '.'\nimport { CustomDataProxyFetch } from './core/engines/common/Engine'\nimport { QueryEngineResultData } from './core/engines/common/types/QueryEngine'\nimport { throwValidationException } from './core/errorRendering/throwValidationException'\nimport { hasBatchIndex } from './core/errors/ErrorWithBatchIndex'\nimport { createApplyBatchExtensionsFunction } from './core/extensions/applyQueryExtensions'\nimport { MergedExtensionsList } from './core/extensions/MergedExtensionsList'\nimport { deserializeJsonResponse } from './core/jsonProtocol/deserializeJsonResponse'\nimport { getBatchId } from './core/jsonProtocol/getBatchId'\nimport { isWrite } from './core/jsonProtocol/isWrite'\nimport { GlobalOmitOptions } from './core/jsonProtocol/serializeJsonQuery'\nimport { PrismaPromiseInteractiveTransaction, PrismaPromiseTransaction } from './core/request/PrismaPromise'\nimport { Action, JsArgs } from './core/types/exported/JsApi'\nimport { DataLoader } from './DataLoader'\nimport type { Client, Unpacker } from './getPrismaClient'\nimport { CallSite } from './utils/CallSite'\nimport { createErrorMessageWithContext } from './utils/createErrorMessageWithContext'\nimport { deepGet } from './utils/deep-set'\nimport { deserializeRawResult, RawResponse } from './utils/deserializeRawResults'\n\nconst debug = Debug('prisma:client:request_handler')\n\nexport type RequestParams = {\n  modelName?: string\n  action: Action\n  protocolQuery: JsonQuery\n  dataPath: string[]\n  clientMethod: string\n  callsite?: CallSite\n  transaction?: PrismaPromiseTransaction\n  extensions: MergedExtensionsList\n  args?: any\n  headers?: Record<string, string>\n  unpacker?: Unpacker\n  otelParentCtx?: Context\n  otelChildCtx?: Context\n  globalOmit?: GlobalOmitOptions\n  customDataProxyFetch?: CustomDataProxyFetch\n}\n\nexport type HandleErrorParams = {\n  args: JsArgs\n  error: any\n  clientMethod: string\n  callsite?: CallSite\n  transaction?: PrismaPromiseTransaction\n  modelName?: string\n  globalOmit?: GlobalOmitOptions\n}\n\nexport class RequestHandler {\n  client: Client\n  dataloader: DataLoader<RequestParams>\n  private logEmitter?: LogEmitter\n\n  constructor(client: Client, logEmitter?: LogEmitter) {\n    this.logEmitter = logEmitter\n    this.client = client\n\n    this.dataloader = new DataLoader({\n      batchLoader: createApplyBatchExtensionsFunction(async ({ requests, customDataProxyFetch }) => {\n        const { transaction, otelParentCtx } = requests[0]\n        const queries = requests.map((r) => r.protocolQuery)\n        const traceparent = this.client._tracingHelper.getTraceParent(otelParentCtx)\n\n        // TODO: pass the child information to QE for it to issue links to queries\n        // const links = requests.map((r) => trace.getSpanContext(r.otelChildCtx!))\n\n        const containsWrite = requests.some((r) => isWrite(r.protocolQuery.action))\n\n        const results = await this.client._engine.requestBatch(queries, {\n          traceparent,\n          transaction: getTransactionOptions(transaction),\n          containsWrite,\n          customDataProxyFetch,\n        })\n\n        return results.map((result, i) => {\n          if (result instanceof Error) {\n            return result\n          }\n\n          try {\n            return this.mapQueryEngineResult(requests[i], result)\n          } catch (error) {\n            return error\n          }\n        })\n      }),\n\n      singleLoader: async (request) => {\n        const interactiveTransaction =\n          request.transaction?.kind === 'itx' ? getItxTransactionOptions(request.transaction) : undefined\n\n        const response = await this.client._engine.request(request.protocolQuery, {\n          traceparent: this.client._tracingHelper.getTraceParent(),\n          interactiveTransaction,\n          isWrite: isWrite(request.protocolQuery.action),\n          customDataProxyFetch: request.customDataProxyFetch,\n        })\n        return this.mapQueryEngineResult(request, response)\n      },\n\n      batchBy: (request) => {\n        if (request.transaction?.id) {\n          return `transaction-${request.transaction.id}`\n        }\n\n        return getBatchId(request.protocolQuery)\n      },\n\n      batchOrder(requestA, requestB) {\n        if (requestA.transaction?.kind === 'batch' && requestB.transaction?.kind === 'batch') {\n          return requestA.transaction.index - requestB.transaction.index\n        }\n        return 0\n      },\n    })\n  }\n\n  async request(params: RequestParams) {\n    try {\n      return await this.dataloader.request(params)\n    } catch (error) {\n      const { clientMethod, callsite, transaction, args, modelName } = params\n      this.handleAndLogRequestError({\n        error,\n        clientMethod,\n        callsite,\n        transaction,\n        args,\n        modelName,\n        globalOmit: params.globalOmit,\n      })\n    }\n  }\n\n  mapQueryEngineResult({ dataPath, unpacker }: RequestParams, response: QueryEngineResultData<any>) {\n    const data = response?.data\n\n    /**\n     * Unpack\n     */\n    const result = this.unpack(data, dataPath, unpacker)\n    if (process.env.PRISMA_CLIENT_GET_TIME) {\n      return { data: result }\n    }\n    return result\n  }\n\n  /**\n   * Handles the error and logs it, logging the error is done synchronously waiting for the event\n   * handlers to finish.\n   */\n  handleAndLogRequestError(params: HandleErrorParams): never {\n    try {\n      this.handleRequestError(params)\n    } catch (err) {\n      if (this.logEmitter) {\n        this.logEmitter.emit('error', { message: err.message, target: params.clientMethod, timestamp: new Date() })\n      }\n      throw err\n    }\n  }\n\n  handleRequestError({\n    error,\n    clientMethod,\n    callsite,\n    transaction,\n    args,\n    modelName,\n    globalOmit,\n  }: HandleErrorParams): never {\n    debug(error)\n\n    if (isMismatchingBatchIndex(error, transaction)) {\n      // if this is batch error and current request was not it's cause, we don't add\n      // context information to the error: this wasn't a request that caused batch to fail\n      throw error\n    }\n\n    if (error instanceof PrismaClientKnownRequestError && isValidationError(error)) {\n      const validationError = convertValidationError(error.meta as EngineValidationError)\n      throwValidationException({\n        args,\n        errors: [validationError],\n        callsite,\n        errorFormat: this.client._errorFormat,\n        originalMethod: clientMethod,\n        clientVersion: this.client._clientVersion,\n        globalOmit,\n      })\n    }\n\n    let message = error.message\n    if (callsite) {\n      message = createErrorMessageWithContext({\n        callsite,\n        originalMethod: clientMethod,\n        isPanic: error.isPanic,\n        showColors: this.client._errorFormat === 'pretty',\n        message,\n      })\n    }\n\n    message = this.sanitizeMessage(message)\n    // TODO: Do request with callsite instead, so we don't need to rethrow\n    if (error.code) {\n      const meta = modelName ? { modelName, ...error.meta } : error.meta\n      throw new PrismaClientKnownRequestError(message, {\n        code: error.code,\n        clientVersion: this.client._clientVersion,\n        meta,\n        batchRequestIdx: error.batchRequestIdx,\n      })\n    } else if (error.isPanic) {\n      throw new PrismaClientRustPanicError(message, this.client._clientVersion)\n    } else if (error instanceof PrismaClientUnknownRequestError) {\n      throw new PrismaClientUnknownRequestError(message, {\n        clientVersion: this.client._clientVersion,\n        batchRequestIdx: error.batchRequestIdx,\n      })\n    } else if (error instanceof PrismaClientInitializationError) {\n      throw new PrismaClientInitializationError(message, this.client._clientVersion)\n    } else if (error instanceof PrismaClientRustPanicError) {\n      throw new PrismaClientRustPanicError(message, this.client._clientVersion)\n    }\n\n    error.clientVersion = this.client._clientVersion\n\n    throw error\n  }\n\n  sanitizeMessage(message) {\n    if (this.client._errorFormat && this.client._errorFormat !== 'pretty') {\n      return stripAnsi(message)\n    }\n    return message\n  }\n\n  unpack(data: unknown, dataPath: string[], unpacker?: Unpacker) {\n    if (!data) {\n      return data\n    }\n    if (data['data']) {\n      data = data['data']\n    }\n\n    if (!data) {\n      return data\n    }\n    const operation = Object.keys(data)[0]\n    const response = Object.values(data)[0]\n    const pathForGet = dataPath.filter((key) => key !== 'select' && key !== 'include')\n    const extractedResponse = deepGet(response, pathForGet)\n    const deserializedResponse =\n      operation === 'queryRaw'\n        ? deserializeRawResult(extractedResponse as RawResponse)\n        : (deserializeJsonResponse(extractedResponse) as unknown)\n\n    return unpacker ? unpacker(deserializedResponse) : deserializedResponse\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'RequestHandler'\n  }\n}\n\nfunction getTransactionOptions<PayloadType>(\n  transaction?: PrismaPromiseTransaction<PayloadType>,\n): TransactionOptions<PayloadType> | undefined {\n  if (!transaction) {\n    return undefined\n  }\n\n  if (transaction.kind === 'batch') {\n    return {\n      kind: 'batch',\n      options: {\n        isolationLevel: transaction.isolationLevel,\n      },\n    }\n  }\n\n  if (transaction.kind === 'itx') {\n    return {\n      kind: 'itx',\n      options: getItxTransactionOptions(transaction),\n    }\n  }\n\n  assertNever(transaction, 'Unknown transaction kind')\n}\n\nfunction getItxTransactionOptions<PayloadType>(\n  transaction: PrismaPromiseInteractiveTransaction<PayloadType>,\n): InteractiveTransactionOptions<PayloadType> {\n  return {\n    id: transaction.id,\n    payload: transaction.payload,\n  }\n}\n\nfunction isMismatchingBatchIndex(error: any, transaction: PrismaPromiseTransaction | undefined) {\n  return hasBatchIndex(error) && transaction?.kind === 'batch' && error.batchRequestIdx !== transaction.index\n}\n\nfunction isValidationError(error: PrismaClientKnownRequestError) {\n  return (\n    error.code === 'P2009' || // validation error\n    error.code === 'P2012' // required argument missing\n  )\n}\n\n/**\n * Engine validation errors include extra segment for selectionPath - root query field.\n * This function removes it (since it does not exist on js arguments). In case of `Union`\n * error type, removes heading element from selectionPath of nested errors as well.\n * @param error\n * @returns\n */\nfunction convertValidationError(error: EngineValidationError): EngineValidationError {\n  if (error.kind === 'Union') {\n    return {\n      kind: 'Union',\n      errors: error.errors.map(convertValidationError),\n    }\n  }\n\n  if (Array.isArray(error['selectionPath'])) {\n    const [, ...selectionPath] = error['selectionPath']\n\n    return {\n      ...error,\n      selectionPath,\n    } as EngineValidationError\n  }\n\n  return error\n}\n", "export interface ErrorWithBatchIndex {\n  batchRequestIdx?: number\n}\n\nexport function hasBatchIndex(value: object): value is Required<ErrorWithBatchIndex> {\n  return typeof value['batchRequestIdx'] === 'number'\n}\n", "import { JsonQuery } from '../engines'\n\nexport function getBatchId(query: JsonQuery): string | undefined {\n  if (query.action !== 'findUnique' && query.action !== 'findUniqueOrThrow') {\n    return undefined\n  }\n  const parts: string[] = []\n  if (query.modelName) {\n    parts.push(query.modelName)\n  }\n\n  if (query.query.arguments) {\n    parts.push(buildKeysString(query.query.arguments))\n  }\n  parts.push(buildKeysString(query.query.selection))\n\n  return parts.join('')\n}\n\nfunction buildKeysString(obj: object): string {\n  const keysArray = Object.keys(obj)\n    .sort()\n    .map((key) => {\n      const value = obj[key]\n      if (typeof value === 'object' && value !== null) {\n        return `(${key} ${buildKeysString(value)})`\n      }\n      return key\n    })\n\n  return `(${keysArray.join(' ')})`\n}\n", "import { JsonQueryAction } from '../engines'\n\nconst writeMap: Record<JsonQueryAction, boolean> = {\n  aggregate: false,\n  aggregateRaw: false,\n  createMany: true,\n  createManyAndReturn: true,\n  createOne: true,\n  deleteMany: true,\n  deleteOne: true,\n  executeRaw: true,\n  findFirst: false,\n  findFirstOrThrow: false,\n  findMany: false,\n  findRaw: false,\n  findUnique: false,\n  findUniqueOrThrow: false,\n  groupBy: false,\n  queryRaw: false,\n  runCommandRaw: true,\n  updateMany: true,\n  updateManyAndReturn: true,\n  updateOne: true,\n  upsertOne: true,\n}\n\nexport function isWrite(action: JsonQueryAction): boolean {\n  return writeMap[action]\n}\n", "interface Job {\n  resolve: (data: any) => void\n  reject: (data: any) => void\n  request: any\n}\n\nexport type DataLoaderOptions<T> = {\n  singleLoader: (request: T) => Promise<any>\n  batchLoader: (request: T[]) => Promise<any[]>\n  batchBy: (request: T) => string | undefined\n  // Specifies the order in which requests in a batch would\n  // be sorted. See Array.prototype.sort callback\n  batchOrder: (requestA: T, requestB: T) => number\n}\n\nexport class DataLoader<T = unknown> {\n  batches: { [key: string]: Job[] }\n  private tickActive = false\n  constructor(private options: DataLoaderOptions<T>) {\n    this.batches = {}\n  }\n\n  request(request: T): Promise<any> {\n    const hash = this.options.batchBy(request)\n    if (!hash) {\n      return this.options.singleLoader(request)\n    }\n    if (!this.batches[hash]) {\n      this.batches[hash] = []\n\n      // make sure, that we only tick once at a time\n      if (!this.tickActive) {\n        this.tickActive = true\n        process.nextTick(() => {\n          this.dispatchBatches()\n          this.tickActive = false\n        })\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      this.batches[hash].push({\n        request,\n        resolve,\n        reject,\n      })\n    })\n  }\n\n  private dispatchBatches() {\n    for (const key in this.batches) {\n      const batch = this.batches[key]\n      delete this.batches[key]\n\n      // only batch if necessary\n      // this might occur, if there's e.g. only 1 findUnique in the batch\n      if (batch.length === 1) {\n        this.options\n          .singleLoader(batch[0].request)\n          .then((result) => {\n            if (result instanceof Error) {\n              batch[0].reject(result)\n            } else {\n              batch[0].resolve(result)\n            }\n          })\n          .catch((e) => {\n            batch[0].reject(e)\n          })\n      } else {\n        batch.sort((a, b) => this.options.batchOrder(a.request, b.request))\n        this.options\n          .batchLoader(batch.map((j) => j.request))\n          .then((results) => {\n            if (results instanceof Error) {\n              for (let i = 0; i < batch.length; i++) {\n                batch[i].reject(results)\n              }\n            } else {\n              for (let i = 0; i < batch.length; i++) {\n                const value = results[i]\n                if (value instanceof Error) {\n                  batch[i].reject(value)\n                } else {\n                  batch[i].resolve(value)\n                }\n              }\n            }\n          })\n          .catch((e) => {\n            for (let i = 0; i < batch.length; i++) {\n              batch[i].reject(e)\n            }\n          })\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'DataLoader'\n  }\n}\n", "import type { QueryIntrospectionBuiltinType } from '@prisma/generator'\nimport Decimal from 'decimal.js'\n\nexport type RawResponse = {\n  columns: string[]\n  types: QueryIntrospectionBuiltinType[]\n  rows: unknown[][]\n}\n\nfunction deserializeValue(type: QueryIntrospectionBuiltinType, value: unknown): unknown {\n  if (value === null) {\n    return value\n  }\n\n  switch (type) {\n    case 'bigint':\n      return BigInt(value as string)\n\n    case 'bytes': {\n      const { buffer, byteOffset, byteLength } = Buffer.from(value as string, 'base64')\n      return new Uint8Array(buffer, byteOffset, byteLength)\n    }\n\n    case 'decimal':\n      return new Decimal(value as string)\n\n    case 'datetime':\n    case 'date':\n      return new Date(value as string)\n\n    case 'time':\n      return new Date(`1970-01-01T${value}Z`)\n\n    case 'bigint-array':\n      return (value as unknown[]).map((v: unknown) => deserializeValue('bigint', v))\n    case 'bytes-array':\n      return (value as unknown[]).map((v: unknown) => deserializeValue('bytes', v))\n    case 'decimal-array':\n      return (value as unknown[]).map((v: unknown) => deserializeValue('decimal', v))\n    case 'datetime-array':\n      return (value as unknown[]).map((v: unknown) => deserializeValue('datetime', v))\n    case 'date-array':\n      return (value as unknown[]).map((v: unknown) => deserializeValue('date', v))\n    case 'time-array':\n      return (value as unknown[]).map((v: unknown) => deserializeValue('time', v))\n\n    default:\n      return value\n  }\n}\n\ntype DeserializedResponse = Array<Record<string, unknown>>\n\nexport function deserializeRawResult(response: RawResponse): DeserializedResponse {\n  const deserializedResponse: DeserializedResponse = []\n  // Performance optimization. See https://github.com/brianc/node-postgres/issues/3042\n  const prebuiltEmptyObject = createPrebuiltEmptyResultObject(response)\n\n  for (let i = 0; i < response.rows.length; i++) {\n    const row = response.rows[i]\n    const mappedRow = { ...prebuiltEmptyObject } as Record<string, unknown>\n\n    for (let j = 0; j < row.length; j++) {\n      mappedRow[response.columns[j]] = deserializeValue(response.types[j], row[j])\n    }\n\n    deserializedResponse.push(mappedRow)\n  }\n\n  return deserializedResponse\n}\n\nfunction createPrebuiltEmptyResultObject(response: RawResponse): Record<string, null> {\n  const row = {}\n\n  for (let i = 0; i < response.columns.length; i++) {\n    row[response.columns[i]] = null\n  }\n\n  return row\n}\n", "import { version } from '../../../package.json'\n\nexport const clientVersion = version as string\n", "import { GetPrismaClientConfig, RuntimeDataModel, RuntimeModel, uncapitalize } from '@prisma/client-common'\nimport { ClientEngineType, getClientEngineType } from '@prisma/internals'\nimport leven from 'js-levenshtein'\n\nimport { buildArgumentsRenderingTree, renderArgsTree } from '../core/errorRendering/ArgumentsRenderingTree'\nimport { PrismaClientConstructorValidationError } from '../core/errors/PrismaClientConstructorValidationError'\nimport { getPreviewFeatures } from '../core/init/getPreviewFeatures'\nimport type { ErrorFormat, LogLevel, PrismaClientOptions } from '../getPrismaClient'\n\nconst knownProperties = [\n  'datasources',\n  'datasourceUrl',\n  'errorFormat',\n  'adapter',\n  'log',\n  'transactionOptions',\n  'omit',\n  '__internal',\n]\nconst errorFormats: ErrorFormat[] = ['pretty', 'colorless', 'minimal']\nconst logLevels: LogLevel[] = ['info', 'query', 'warn', 'error']\n\ntype OmitValidationError =\n  | { kind: 'UnknownModel'; modelKey: string }\n  | { kind: 'UnknownField'; modelKey: string; fieldName: string }\n  | { kind: 'RelationInOmit'; modelKey: string; fieldName: string }\n  | { kind: 'InvalidFieldValue'; modelKey: string; fieldName: string }\n\n/**\n * Subset of `GetPrismaClientConfig` which is used during validation.\n * Feel free to allow more properties when necessary but don't forget to add\n * them in the mock config in `validatePrismaClientOptions.test.ts`.\n */\ntype ClientConfig = Pick<GetPrismaClientConfig, 'datasourceNames' | 'generator' | 'runtimeDataModel'>\n\nconst validators: {\n  [K in keyof PrismaClientOptions]-?: (\n    option: PrismaClientOptions[K],\n    config: ClientConfig,\n    dataModel: RuntimeDataModel,\n  ) => void\n} = {\n  datasources: (options, { datasourceNames }) => {\n    if (!options) {\n      return\n    }\n    if (typeof options !== 'object' || Array.isArray(options)) {\n      throw new PrismaClientConstructorValidationError(\n        `Invalid value ${JSON.stringify(options)} for \"datasources\" provided to PrismaClient constructor`,\n      )\n    }\n\n    for (const [key, value] of Object.entries(options)) {\n      if (!datasourceNames.includes(key)) {\n        const didYouMean =\n          getDidYouMean(key, datasourceNames) || ` Available datasources: ${datasourceNames.join(', ')}`\n        throw new PrismaClientConstructorValidationError(\n          `Unknown datasource ${key} provided to PrismaClient constructor.${didYouMean}`,\n        )\n      }\n      if (typeof value !== 'object' || Array.isArray(value)) {\n        throw new PrismaClientConstructorValidationError(\n          `Invalid value ${JSON.stringify(options)} for datasource \"${key}\" provided to PrismaClient constructor.\nIt should have this form: { url: \"CONNECTION_STRING\" }`,\n        )\n      }\n      if (value && typeof value === 'object') {\n        for (const [key1, value1] of Object.entries(value)) {\n          if (key1 !== 'url') {\n            throw new PrismaClientConstructorValidationError(\n              `Invalid value ${JSON.stringify(options)} for datasource \"${key}\" provided to PrismaClient constructor.\nIt should have this form: { url: \"CONNECTION_STRING\" }`,\n            )\n          }\n          if (typeof value1 !== 'string') {\n            throw new PrismaClientConstructorValidationError(\n              `Invalid value ${JSON.stringify(value1)} for datasource \"${key}\" provided to PrismaClient constructor.\nIt should have this form: { url: \"CONNECTION_STRING\" }`,\n            )\n          }\n        }\n      }\n    }\n  },\n  adapter: (adapter, config) => {\n    if (!adapter && getClientEngineType(config.generator) === ClientEngineType.Client) {\n      throw new PrismaClientConstructorValidationError(\n        `Using engine type \"client\" requires a driver adapter to be provided to PrismaClient constructor.`,\n      )\n    }\n\n    if (adapter === null) {\n      return\n    }\n\n    if (adapter === undefined) {\n      throw new PrismaClientConstructorValidationError(\n        `\"adapter\" property must not be undefined, use null to conditionally disable driver adapters.`,\n      )\n    }\n    const previewFeatures = getPreviewFeatures(config)\n    if (!previewFeatures.includes('driverAdapters')) {\n      throw new PrismaClientConstructorValidationError(\n        '\"adapter\" property can only be provided to PrismaClient constructor when \"driverAdapters\" preview feature is enabled.',\n      )\n    }\n\n    if (getClientEngineType(config.generator) === ClientEngineType.Binary) {\n      throw new PrismaClientConstructorValidationError(\n        `Cannot use a driver adapter with the \"binary\" Query Engine. Please use the \"library\" Query Engine.`,\n      )\n    }\n  },\n  datasourceUrl: (options) => {\n    if (typeof options !== 'undefined' && typeof options !== 'string') {\n      throw new PrismaClientConstructorValidationError(\n        `Invalid value ${JSON.stringify(options)} for \"datasourceUrl\" provided to PrismaClient constructor.\nExpected string or undefined.`,\n      )\n    }\n  },\n  errorFormat: (options) => {\n    if (!options) {\n      return\n    }\n    if (typeof options !== 'string') {\n      throw new PrismaClientConstructorValidationError(\n        `Invalid value ${JSON.stringify(options)} for \"errorFormat\" provided to PrismaClient constructor.`,\n      )\n    }\n    if (!errorFormats.includes(options as ErrorFormat)) {\n      const didYouMean = getDidYouMean(options, errorFormats)\n      throw new PrismaClientConstructorValidationError(\n        `Invalid errorFormat ${options} provided to PrismaClient constructor.${didYouMean}`,\n      )\n    }\n  },\n  log: (options) => {\n    if (!options) {\n      return\n    }\n    if (!Array.isArray(options)) {\n      throw new PrismaClientConstructorValidationError(\n        `Invalid value ${JSON.stringify(options)} for \"log\" provided to PrismaClient constructor.`,\n      )\n    }\n\n    function validateLogLevel(level: any) {\n      if (typeof level === 'string') {\n        if (!logLevels.includes(level as LogLevel)) {\n          const didYouMean = getDidYouMean(level, logLevels)\n          throw new PrismaClientConstructorValidationError(\n            `Invalid log level \"${level}\" provided to PrismaClient constructor.${didYouMean}`,\n          )\n        }\n      }\n    }\n\n    for (const option of options) {\n      validateLogLevel(option)\n\n      const logValidators = {\n        level: validateLogLevel,\n        emit: (value) => {\n          const emits = ['stdout', 'event']\n          if (!emits.includes(value)) {\n            const didYouMean = getDidYouMean(value, emits)\n            throw new PrismaClientConstructorValidationError(\n              `Invalid value ${JSON.stringify(\n                value,\n              )} for \"emit\" in logLevel provided to PrismaClient constructor.${didYouMean}`,\n            )\n          }\n        },\n      }\n\n      if (option && typeof option === 'object') {\n        for (const [key, value] of Object.entries(option)) {\n          if (logValidators[key]) {\n            logValidators[key](value)\n          } else {\n            throw new PrismaClientConstructorValidationError(\n              `Invalid property ${key} for \"log\" provided to PrismaClient constructor`,\n            )\n          }\n        }\n      }\n    }\n  },\n  transactionOptions: (options: any) => {\n    if (!options) {\n      return\n    }\n\n    const maxWait = options.maxWait\n    if (maxWait != null && maxWait <= 0) {\n      throw new PrismaClientConstructorValidationError(\n        `Invalid value ${maxWait} for maxWait in \"transactionOptions\" provided to PrismaClient constructor. maxWait needs to be greater than 0`,\n      )\n    }\n\n    const timeout = options.timeout\n    if (timeout != null && timeout <= 0) {\n      throw new PrismaClientConstructorValidationError(\n        `Invalid value ${timeout} for timeout in \"transactionOptions\" provided to PrismaClient constructor. timeout needs to be greater than 0`,\n      )\n    }\n  },\n  omit: (options: unknown, config) => {\n    if (typeof options !== 'object') {\n      throw new PrismaClientConstructorValidationError(`\"omit\" option is expected to be an object.`)\n    }\n    if (options === null) {\n      throw new PrismaClientConstructorValidationError(`\"omit\" option can not be \\`null\\``)\n    }\n\n    const validationErrors: OmitValidationError[] = []\n    for (const [modelKey, modelConfig] of Object.entries(options)) {\n      const modelOrType = getModelOrTypeByKey(modelKey, config.runtimeDataModel)\n      if (!modelOrType) {\n        validationErrors.push({ kind: 'UnknownModel', modelKey: modelKey })\n        continue\n      }\n      for (const [fieldName, value] of Object.entries(modelConfig)) {\n        const field = modelOrType.fields.find((field) => field.name === fieldName)\n        if (!field) {\n          validationErrors.push({ kind: 'UnknownField', modelKey, fieldName })\n          continue\n        }\n        if (field.relationName) {\n          validationErrors.push({ kind: 'RelationInOmit', modelKey, fieldName })\n          continue\n        }\n        if (typeof value !== 'boolean') {\n          validationErrors.push({ kind: 'InvalidFieldValue', modelKey, fieldName })\n        }\n      }\n    }\n    if (validationErrors.length > 0) {\n      throw new PrismaClientConstructorValidationError(\n        renderOmitValidationErrors(options as Record<string, unknown>, validationErrors),\n      )\n    }\n  },\n  __internal: (value) => {\n    if (!value) {\n      return\n    }\n    const knownKeys = ['debug', 'engine', 'configOverride']\n    if (typeof value !== 'object') {\n      throw new PrismaClientConstructorValidationError(\n        `Invalid value ${JSON.stringify(value)} for \"__internal\" to PrismaClient constructor`,\n      )\n    }\n    for (const [key] of Object.entries(value)) {\n      if (!knownKeys.includes(key)) {\n        const didYouMean = getDidYouMean(key, knownKeys)\n        throw new PrismaClientConstructorValidationError(\n          `Invalid property ${JSON.stringify(key)} for \"__internal\" provided to PrismaClient constructor.${didYouMean}`,\n        )\n      }\n    }\n    // TODO: Add more validation here\n    // but as this is an internal, non user-facing api, it's not urgent\n  },\n}\n\nexport function validatePrismaClientOptions(options: PrismaClientOptions, config: ClientConfig) {\n  for (const [key, value] of Object.entries(options)) {\n    if (!knownProperties.includes(key)) {\n      const didYouMean = getDidYouMean(key, knownProperties)\n      throw new PrismaClientConstructorValidationError(\n        `Unknown property ${key} provided to PrismaClient constructor.${didYouMean}`,\n      )\n    }\n    validators[key](value, config)\n  }\n\n  if (options.datasourceUrl && options.datasources) {\n    throw new PrismaClientConstructorValidationError(\n      'Can not use \"datasourceUrl\" and \"datasources\" options at the same time. Pick one of them',\n    )\n  }\n}\n\nfunction getDidYouMean(str: string, options: string[]): string {\n  if (options.length === 0) {\n    return ''\n  }\n\n  if (typeof str !== 'string') {\n    return ''\n  }\n\n  const alternative = getAlternative(str, options)\n  if (!alternative) {\n    return ''\n  }\n\n  return ` Did you mean \"${alternative}\"?`\n}\n\nfunction getAlternative(str: string, options: string[]): null | string {\n  if (options.length === 0) {\n    return null\n  }\n\n  const optionsWithDistances = options.map((value) => ({\n    value,\n    distance: leven(str, value),\n  }))\n\n  optionsWithDistances.sort((a, b) => {\n    return a.distance < b.distance ? -1 : 1\n  })\n\n  const bestAlternative = optionsWithDistances[0]\n  if (bestAlternative.distance < 3) {\n    return bestAlternative.value\n  }\n\n  return null\n}\n\nfunction getModelOrTypeByKey(modelKey: string, runtimeDataModel: RuntimeDataModel): RuntimeModel | undefined {\n  return findByKey(runtimeDataModel.models, modelKey) ?? findByKey(runtimeDataModel.types, modelKey)\n}\n\nfunction findByKey<T>(map: Record<string, T>, key: string): T | undefined {\n  const foundKey = Object.keys(map).find((mapKey) => uncapitalize(mapKey) === key)\n  if (foundKey) {\n    return map[foundKey]\n  }\n  return undefined\n}\n\nfunction renderOmitValidationErrors(\n  omitConfig: Record<PropertyKey, unknown>,\n  validationErrors: OmitValidationError[],\n): string {\n  const argsTree = buildArgumentsRenderingTree(omitConfig)\n  for (const error of validationErrors) {\n    switch (error.kind) {\n      case 'UnknownModel':\n        argsTree.arguments.getField(error.modelKey)?.markAsError()\n        argsTree.addErrorMessage(() => `Unknown model name: ${error.modelKey}.`)\n        break\n      case 'UnknownField':\n        argsTree.arguments.getDeepField([error.modelKey, error.fieldName])?.markAsError()\n        argsTree.addErrorMessage(() => `Model \"${error.modelKey}\" does not have a field named \"${error.fieldName}\".`)\n        break\n      case 'RelationInOmit':\n        argsTree.arguments.getDeepField([error.modelKey, error.fieldName])?.markAsError()\n        argsTree.addErrorMessage(() => `Relations are already excluded by default and can not be specified in \"omit\".`)\n        break\n      case 'InvalidFieldValue':\n        argsTree.arguments.getDeepFieldValue([error.modelKey, error.fieldName])?.markAsError()\n        argsTree.addErrorMessage(() => `Omit field option value must be a boolean.`)\n        break\n    }\n  }\n  const { message, args } = renderArgsTree(argsTree, 'colorless')\n  return `Error validating \"omit\" option:\\n\\n${args}\\n\\n${message}`\n}\n", "import { setClassName } from '@prisma/internals'\n\nexport class PrismaClientConstructorValidationError extends Error {\n  constructor(message: string) {\n    super(message + `\\nRead more at https://pris.ly/d/client-constructor`)\n    this.name = 'PrismaClientConstructorValidationError'\n  }\n  get [Symbol.toStringTag]() {\n    return 'PrismaClientConstructorValidationError'\n  }\n}\nsetClassName(PrismaClientConstructorValidationError, 'PrismaClientConstructorValidationError')\n", "import { hasBatchIndex } from '../core/errors/ErrorWithBatchIndex'\n\n/**\n * Waits for result of batch $transaction and picks the best possible error to report if any\n * of the request fails. Best error is determined as follows:\n *\n * - if engine have reported an error without batch request index, then the batch is immediately rejected\n * with this error without waiting for other promises\n * - if engine have reported and index of failed request in the batch and that index matches the position of the\n * particular request in the batch, batch is rejected with that error\n * - if batch request index is reported and it does not match current request position, wait for other requests. If no indices\n * match request positions, reject with the earliest error in the batch\n *\n * @param promises\n * @returns\n */\nexport function waitForBatch<T extends PromiseLike<unknown>[]>(\n  promises: T,\n): Promise<{ [K in keyof T]: Awaited<T[K]> }> {\n  if (promises.length === 0) {\n    return Promise.resolve([] as { [K in keyof T]: Awaited<T[K]> })\n  }\n  return new Promise((resolve, reject) => {\n    const successfulResults = new Array(promises.length) as { [K in keyof T]: Awaited<T[K]> }\n    let bestError: unknown = null\n    let done = false\n    let settledPromisesCount = 0\n\n    const settleOnePromise = () => {\n      if (done) {\n        return\n      }\n      settledPromisesCount++\n      if (settledPromisesCount === promises.length) {\n        done = true\n        if (bestError) {\n          reject(bestError)\n        } else {\n          resolve(successfulResults)\n        }\n      }\n    }\n\n    const immediatelyReject = (error: unknown) => {\n      if (!done) {\n        done = true\n        reject(error)\n      }\n    }\n\n    for (let i = 0; i < promises.length; i++) {\n      promises[i].then(\n        (result) => {\n          successfulResults[i] = result\n          settleOnePromise()\n        },\n        (error) => {\n          if (!hasBatchIndex(error)) {\n            immediatelyReject(error)\n            return\n          }\n\n          if (error.batchRequestIdx === i) {\n            immediatelyReject(error)\n          } else {\n            if (!bestError) {\n              bestError = error\n            }\n            settleOnePromise()\n          }\n        },\n      )\n    }\n  })\n}\n", "/**\n * List of properties that won't throw exception on access and return undefined instead\n */\nconst allowList = new Set([\n  'toJSON', // used by JSON.stringify\n  '$$typeof', // used by old React tooling\n  'asymmetricMatch', // used by Jest\n  Symbol.iterator, // used by various JS constructs/methods\n  Symbol.toStringTag, // Used by .toString()\n  Symbol.isConcatSpreadable, // Used by Array#concat,\n  Symbol.toPrimitive, // Used when getting converted to primitive values\n])\n/**\n * Generates more strict variant of an enum which, unlike regular enum,\n * throws on non-existing property access. This can be useful in following situations:\n * - we have an API, that accepts both `undefined` and `SomeEnumType` as an input\n * - enum values are generated dynamically from DMMF.\n *\n * In that case, if using normal enums and no compile-time typechecking, using non-existing property\n * will result in `undefined` value being used, which will be accepted. Using strict enum\n * in this case will help to have a runtime exception, telling you that you are probably doing something wrong.\n *\n * Note: if you need to check for existence of a value in the enum you can still use either\n * `in` operator or `hasOwnProperty` function.\n *\n * @param definition\n * @returns\n */\nexport function makeStrictEnum<T extends Record<PropertyKey, string | number>>(definition: T): T {\n  return new Proxy(definition, {\n    get(target, property) {\n      if (property in target) {\n        return target[property]\n      }\n      if (allowList.has(property)) {\n        return undefined\n      }\n      throw new TypeError(`Invalid enum value: ${String(property)}`)\n    },\n  })\n}\n", "", "\r\n/* !!! This is code generated by Prisma. Do not edit directly. !!!\r\n/* eslint-disable */\r\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\r\nconst {\r\n  PrismaClientKnownRequestError,\r\n  PrismaClientUnknownRequestError,\r\n  PrismaClientRustPanicError,\r\n  PrismaClientInitializationError,\r\n  PrismaClientValidationError,\r\n  getPrismaClient,\r\n  sqltag,\r\n  empty,\r\n  join,\r\n  raw,\r\n  skip,\r\n  Decimal,\r\n  Debug,\r\n  objectEnumValues,\r\n  makeStrictEnum,\r\n  Extensions,\r\n  warnOnce,\r\n  defineDmmfProperty,\r\n  Public,\r\n  getRuntime,\r\n  createParam,\r\n} = require('@prisma/client/runtime/edge.js')\r\n\r\n\r\nconst Prisma = {}\r\n\r\nexports.Prisma = Prisma\r\nexports.$Enums = {}\r\n\r\n/**\r\n * Prisma Client JS version: 6.12.0\r\n * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc\r\n */\r\nPrisma.prismaVersion = {\r\n  client: \"6.12.0\",\r\n  engine: \"8047c96bbd92db98a2abc7c9323ce77c02c89dbc\"\r\n}\r\n\r\nPrisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;\r\nPrisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError\r\nPrisma.PrismaClientRustPanicError = PrismaClientRustPanicError\r\nPrisma.PrismaClientInitializationError = PrismaClientInitializationError\r\nPrisma.PrismaClientValidationError = PrismaClientValidationError\r\nPrisma.Decimal = Decimal\r\n\r\n/**\r\n * Re-export of sql-template-tag\r\n */\r\nPrisma.sql = sqltag\r\nPrisma.empty = empty\r\nPrisma.join = join\r\nPrisma.raw = raw\r\nPrisma.validator = Public.validator\r\n\r\n/**\r\n* Extensions\r\n*/\r\nPrisma.getExtensionContext = Extensions.getExtensionContext\r\nPrisma.defineExtension = Extensions.defineExtension\r\n\r\n/**\r\n * Shorthand utilities for JSON filtering\r\n */\r\nPrisma.DbNull = objectEnumValues.instances.DbNull\r\nPrisma.JsonNull = objectEnumValues.instances.JsonNull\r\nPrisma.AnyNull = objectEnumValues.instances.AnyNull\r\n\r\nPrisma.NullTypes = {\r\n  DbNull: objectEnumValues.classes.DbNull,\r\n  JsonNull: objectEnumValues.classes.JsonNull,\r\n  AnyNull: objectEnumValues.classes.AnyNull\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Enums\r\n */\r\nexports.Prisma.TransactionIsolationLevel = makeStrictEnum({\r\n  ReadUncommitted: 'ReadUncommitted',\r\n  ReadCommitted: 'ReadCommitted',\r\n  RepeatableRead: 'RepeatableRead',\r\n  Serializable: 'Serializable'\r\n});\r\n\r\nexports.Prisma.UserScalarFieldEnum = {\r\n  id: 'id',\r\n  email: 'email',\r\n  username: 'username',\r\n  password: 'password'\r\n};\r\n\r\nexports.Prisma.BlogScalarFieldEnum = {\r\n  id: 'id',\r\n  title: 'title',\r\n  content: 'content',\r\n  published: 'published',\r\n  authorId: 'authorId'\r\n};\r\n\r\nexports.Prisma.SortOrder = {\r\n  asc: 'asc',\r\n  desc: 'desc'\r\n};\r\n\r\nexports.Prisma.QueryMode = {\r\n  default: 'default',\r\n  insensitive: 'insensitive'\r\n};\r\n\r\nexports.Prisma.NullsOrder = {\r\n  first: 'first',\r\n  last: 'last'\r\n};\r\n\r\n\r\nexports.Prisma.ModelName = {\r\n  User: 'User',\r\n  Blog: 'Blog'\r\n};\r\n/**\r\n * Create the Client\r\n */\r\nconst config = {\r\n  \"generator\": {\r\n    \"name\": \"client\",\r\n    \"provider\": {\r\n      \"fromEnvVar\": null,\r\n      \"value\": \"prisma-client-js\"\r\n    },\r\n    \"output\": {\r\n      \"value\": \"D:\\\\coding code\\\\Harkirat\\\\part5\\\\backend\\\\node_modules\\\\@prisma\\\\client\",\r\n      \"fromEnvVar\": null\r\n    },\r\n    \"config\": {\r\n      \"engineType\": \"library\"\r\n    },\r\n    \"binaryTargets\": [\r\n      {\r\n        \"fromEnvVar\": null,\r\n        \"value\": \"windows\",\r\n        \"native\": true\r\n      }\r\n    ],\r\n    \"previewFeatures\": [],\r\n    \"sourceFilePath\": \"D:\\\\coding code\\\\Harkirat\\\\part5\\\\backend\\\\prisma\\\\schema.prisma\"\r\n  },\r\n  \"relativeEnvPaths\": {\r\n    \"rootEnvPath\": null,\r\n    \"schemaEnvPath\": \"../../../.env\"\r\n  },\r\n  \"relativePath\": \"../../../prisma\",\r\n  \"clientVersion\": \"6.12.0\",\r\n  \"engineVersion\": \"8047c96bbd92db98a2abc7c9323ce77c02c89dbc\",\r\n  \"datasourceNames\": [\r\n    \"db\"\r\n  ],\r\n  \"activeProvider\": \"postgresql\",\r\n  \"inlineDatasources\": {\r\n    \"db\": {\r\n      \"url\": {\r\n        \"fromEnvVar\": \"DATABASE_URL\",\r\n        \"value\": null\r\n      }\r\n    }\r\n  },\r\n  \"inlineSchema\": \"// This is your Prisma schema file,\\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\\n\\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\\n\\ngenerator client {\\n  provider = \\\"prisma-client-js\\\"\\n}\\n\\ndatasource db {\\n  provider = \\\"postgresql\\\"\\n  url      = env(\\\"DATABASE_URL\\\")\\n}\\n\\nmodel User {\\n  id       Int     @id @default(autoincrement())\\n  email    String  @unique\\n  username String?\\n  password String\\n  blogs    Blog[]\\n}\\n\\nmodel Blog {\\n  id        Int     @id @default(autoincrement())\\n  title     String\\n  content   String\\n  published Boolean @default(false)\\n  authorId  Int\\n  author    User    @relation(fields: [authorId], references: [id])\\n}\\n\",\r\n  \"inlineSchemaHash\": \"0e0c9726c5411134e4148ca29f1d2d8c933cf22311186a57e577e1125ab8b22a\",\r\n  \"copyEngine\": true\r\n}\r\nconfig.dirname = '/'\r\n\r\nconfig.runtimeDataModel = JSON.parse(\"{\\\"models\\\":{\\\"User\\\":{\\\"dbName\\\":null,\\\"schema\\\":null,\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":true,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"Int\\\",\\\"nativeType\\\":null,\\\"default\\\":{\\\"name\\\":\\\"autoincrement\\\",\\\"args\\\":[]},\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false},{\\\"name\\\":\\\"email\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":true,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false},{\\\"name\\\":\\\"username\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false},{\\\"name\\\":\\\"password\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false},{\\\"name\\\":\\\"blogs\\\",\\\"kind\\\":\\\"object\\\",\\\"isList\\\":true,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Blog\\\",\\\"nativeType\\\":null,\\\"relationName\\\":\\\"BlogToUser\\\",\\\"relationFromFields\\\":[],\\\"relationToFields\\\":[],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false}],\\\"primaryKey\\\":null,\\\"uniqueFields\\\":[],\\\"uniqueIndexes\\\":[],\\\"isGenerated\\\":false},\\\"Blog\\\":{\\\"dbName\\\":null,\\\"schema\\\":null,\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":true,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"Int\\\",\\\"nativeType\\\":null,\\\"default\\\":{\\\"name\\\":\\\"autoincrement\\\",\\\"args\\\":[]},\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false},{\\\"name\\\":\\\"title\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false},{\\\"name\\\":\\\"content\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false},{\\\"name\\\":\\\"published\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"Boolean\\\",\\\"nativeType\\\":null,\\\"default\\\":false,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false},{\\\"name\\\":\\\"authorId\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":true,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Int\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false},{\\\"name\\\":\\\"author\\\",\\\"kind\\\":\\\"object\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"User\\\",\\\"nativeType\\\":null,\\\"relationName\\\":\\\"BlogToUser\\\",\\\"relationFromFields\\\":[\\\"authorId\\\"],\\\"relationToFields\\\":[\\\"id\\\"],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false}],\\\"primaryKey\\\":null,\\\"uniqueFields\\\":[],\\\"uniqueIndexes\\\":[],\\\"isGenerated\\\":false}},\\\"enums\\\":{},\\\"types\\\":{}}\")\r\ndefineDmmfProperty(exports.Prisma, config.runtimeDataModel)\r\nconfig.engineWasm = undefined\r\nconfig.compilerWasm = undefined\r\n\r\nconfig.injectableEdgeEnv = () => ({\r\n  parsed: {\r\n    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined\r\n  }\r\n})\r\n\r\nif (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {\r\n  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)\r\n}\r\n\r\nconst PrismaClient = getPrismaClient(config)\r\nexports.PrismaClient = PrismaClient\r\nObject.assign(exports, Prisma)\r\n\r\n", "module.exports = {\r\n  // https://github.com/prisma/prisma/pull/12907\r\n  ...require('.prisma/client/edge'),\r\n}\r\n", "\"use strict\";\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\n\r\n// src/scripts/default-index.ts\r\nvar default_index_exports = {};\r\n__export(default_index_exports, {\r\n  Prisma: () => Prisma,\r\n  PrismaClient: () => PrismaClient,\r\n  default: () => default_index_default\r\n});\r\nmodule.exports = __toCommonJS(default_index_exports);\r\n\r\n// ../../node_modules/.pnpm/@prisma+engines-version@6.12.0-15.8047c96bbd92db98a2abc7c9323ce77c02c89dbc/node_modules/@prisma/engines-version/package.json\r\nvar prisma = {\r\n  enginesVersion: \"8047c96bbd92db98a2abc7c9323ce77c02c89dbc\"\r\n};\r\n\r\n// package.json\r\nvar version = \"6.12.0\";\r\n\r\n// src/runtime/utils/clientVersion.ts\r\nvar clientVersion = version;\r\n\r\n// src/scripts/default-index.ts\r\nvar PrismaClient = class {\r\n  constructor() {\r\n    throw new Error('@prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.');\r\n  }\r\n};\r\nfunction defineExtension(ext) {\r\n  if (typeof ext === \"function\") {\r\n    return ext;\r\n  }\r\n  return (client) => client.$extends(ext);\r\n}\r\nfunction getExtensionContext(that) {\r\n  return that;\r\n}\r\nvar Prisma = {\r\n  defineExtension,\r\n  getExtensionContext,\r\n  prismaVersion: { client: clientVersion, engine: prisma.enginesVersion }\r\n};\r\nvar default_index_default = { Prisma };\r\n// Annotate the CommonJS export names for ESM import in node:\r\n0 && (module.exports = {\r\n  Prisma,\r\n  PrismaClient\r\n});\r\n", "// This loads all middlewares exposed on the middleware object and then starts\r\n// the invocation chain. The big idea is that we can add these to the middleware\r\n// export dynamically through wrangler, or we can potentially let users directly\r\n// add them as a sort of \"plugin\" system.\r\n\r\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"D:\\\\coding code\\\\Harkirat\\\\part5\\\\backend\\\\.wrangler\\\\tmp\\\\bundle-qqQTcI\\\\middleware-insertion-facade.js\";\r\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"D:\\\\coding code\\\\Harkirat\\\\part5\\\\backend\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\r\nimport type { WorkerEntrypointConstructor } from \"D:\\\\coding code\\\\Harkirat\\\\part5\\\\backend\\\\.wrangler\\\\tmp\\\\bundle-qqQTcI\\\\middleware-insertion-facade.js\";\r\n\r\n// Preserve all the exports from the worker\r\nexport * from \"D:\\\\coding code\\\\Harkirat\\\\part5\\\\backend\\\\.wrangler\\\\tmp\\\\bundle-qqQTcI\\\\middleware-insertion-facade.js\";\r\n\r\nclass __Facade_ScheduledController__ implements ScheduledController {\r\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\r\n\r\n\tconstructor(\r\n\t\treadonly scheduledTime: number,\r\n\t\treadonly cron: string,\r\n\t\tnoRetry: ScheduledController[\"noRetry\"]\r\n\t) {\r\n\t\tthis.#noRetry = noRetry;\r\n\t}\r\n\r\n\tnoRetry() {\r\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\r\n\t\t\tthrow new TypeError(\"Illegal invocation\");\r\n\t\t}\r\n\t\t// Need to call native method immediately in case uncaught error thrown\r\n\t\tthis.#noRetry();\r\n\t}\r\n}\r\n\r\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\r\n\t// If we don't have any middleware defined, just return the handler as is\r\n\tif (\r\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\r\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\r\n\t) {\r\n\t\treturn worker;\r\n\t}\r\n\t// Otherwise, register all middleware once\r\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\r\n\t\t__facade_register__(middleware);\r\n\t}\r\n\r\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\r\n\t\trequest,\r\n\t\tenv,\r\n\t\tctx\r\n\t) {\r\n\t\tif (worker.fetch === undefined) {\r\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\r\n\t\t}\r\n\t\treturn worker.fetch(request, env, ctx);\r\n\t};\r\n\r\n\treturn {\r\n\t\t...worker,\r\n\t\tfetch(request, env, ctx) {\r\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\r\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\r\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\r\n\t\t\t\t\t\tDate.now(),\r\n\t\t\t\t\t\tinit.cron ?? \"\",\r\n\t\t\t\t\t\t() => {}\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\r\n\t\t},\r\n\t};\r\n}\r\n\r\nfunction wrapWorkerEntrypoint(\r\n\tklass: WorkerEntrypointConstructor\r\n): WorkerEntrypointConstructor {\r\n\t// If we don't have any middleware defined, just return the handler as is\r\n\tif (\r\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\r\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\r\n\t) {\r\n\t\treturn klass;\r\n\t}\r\n\t// Otherwise, register all middleware once\r\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\r\n\t\t__facade_register__(middleware);\r\n\t}\r\n\r\n\t// `extend`ing `klass` here so other RPC methods remain callable\r\n\treturn class extends klass {\r\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\r\n\t\t\trequest,\r\n\t\t\tenv,\r\n\t\t\tctx\r\n\t\t) => {\r\n\t\t\tthis.env = env;\r\n\t\t\tthis.ctx = ctx;\r\n\t\t\tif (super.fetch === undefined) {\r\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\r\n\t\t\t}\r\n\t\t\treturn super.fetch(request);\r\n\t\t};\r\n\r\n\t\t#dispatcher: Dispatcher = (type, init) => {\r\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\r\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\r\n\t\t\t\t\tDate.now(),\r\n\t\t\t\t\tinit.cron ?? \"\",\r\n\t\t\t\t\t() => {}\r\n\t\t\t\t);\r\n\t\t\t\treturn super.scheduled(controller);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\r\n\t\t\treturn __facade_invoke__(\r\n\t\t\t\trequest,\r\n\t\t\t\tthis.env,\r\n\t\t\t\tthis.ctx,\r\n\t\t\t\tthis.#dispatcher,\r\n\t\t\t\tthis.#fetchDispatcher\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\r\nif (typeof ENTRY === \"object\") {\r\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\r\n} else if (typeof ENTRY === \"function\") {\r\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\r\n}\r\nexport default WRAPPED_ENTRY;\r\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"D:\\\\coding code\\\\Harkirat\\\\part5\\\\backend\\\\src\\\\index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"D:\\\\coding code\\\\Harkirat\\\\part5\\\\backend\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"D:\\\\coding code\\\\Harkirat\\\\part5\\\\backend\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"D:\\\\coding code\\\\Harkirat\\\\part5\\\\backend\\\\src\\\\index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "import { Hono } from \"hono\";\r\nimport { userRouter } from \"./routes/user.routes\";\r\nimport { blogRouter } from \"./routes/blog.routes\";\r\nimport { getCookie } from \"hono/cookie\";\r\nimport { verify } from \"hono/jwt\";\r\nimport { cors } from \"hono/cors\";\r\n\r\nconst app = new Hono<{\r\n  Bindings: {\r\n    DATABASE_URL: string;\r\n    SECRET: string;\r\n  };\r\n}>();\r\n// cors middleware\r\napp.use('/api/v1/*', cors({\r\n  origin: 'http://localhost:5173',\r\n  credentials: true,\r\n  allowHeaders: ['Content-Type', 'Authorization'],\r\n  allowMethods: ['GET', 'POST', 'PUT', 'OPTIONS']\r\n}))\r\n\r\n// routes\r\napp.route('/api/v1/user', userRouter);\r\napp.route('/api/v1/blog', blogRouter);\r\napp.get('/', (c) => {\r\n  return c.html(`\r\n    <!DOCTYPE html>\r\n    <html lang=\"en\">\r\n    <head>\r\n      <meta charset=\"UTF-8\">\r\n      <title>Navbar</title>\r\n      <script src=\"https://cdn.tailwindcss.com\"></script>\r\n    </head>\r\n    <body>\r\n      <!-- Navbar -->\r\n      <nav class=\"bg-gray-800 text-white px-4 py-3 flex justify-between items-center\">\r\n        <div class=\"text-xl font-bold\">\r\n          <a href=\"/\">MyBlog</a>\r\n        </div>\r\n\r\n        <div class=\"flex items-center space-x-4\">\r\n        <a href=\"/api/v1/blog/bulk\" class=\"bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded\">All Blogs</a>\r\n          <a href=\"/api/v1/blog\" class=\"bg-green-500 hover:bg-green-700 px-4 py-2 rounded\">Add Blog</a>\r\n\r\n          <!-- Dropdown -->\r\n          <div class=\"relative group\">\r\n            <button class=\"bg-gray-700 hover:bg-gray-600 px-4 py-2 rounded\">\r\n              Blog Options \u25BC\r\n            </button>\r\n            <div class=\"absolute hidden group-hover:block bg-white text-black mt-1 rounded shadow-lg z-10\">\r\n              <a href=\"/update-blog\" class=\"block px-4 py-2 hover:bg-gray-100\">Update Blog</a>\r\n              <a href=\"/see-blog\" class=\"block px-4 py-2 hover:bg-gray-100\">See Blog</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"flex items-center space-x-2\">\r\n          <a href=\"/signin\" class=\"bg-green-600 hover:bg-green-700 px-4 py-2 rounded\">Sign In</a>\r\n          <a href=\"/signup\" class=\"bg-yellow-500 hover:bg-yellow-600 px-4 py-2 rounded\">Sign Up</a>\r\n        </div>\r\n      </nav>\r\n    </body>\r\n    </html>\r\n  `)\r\n})\r\n\r\n\r\n\r\nexport default app;\r\n", "// src/index.ts\r\nimport { Hono } from \"./hono.js\";\r\nexport {\r\n  Hono\r\n};\r\n", "// src/hono.ts\r\nimport { HonoBase } from \"./hono-base.js\";\r\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\r\nimport { SmartRouter } from \"./router/smart-router/index.js\";\r\nimport { TrieRouter } from \"./router/trie-router/index.js\";\r\nvar Hono = class extends HonoBase {\r\n  constructor(options = {}) {\r\n    super(options);\r\n    this.router = options.router ?? new SmartRouter({\r\n      routers: [new RegExpRouter(), new TrieRouter()]\r\n    });\r\n  }\r\n};\r\nexport {\r\n  Hono\r\n};\r\n", "// src/hono-base.ts\r\nimport { compose } from \"./compose.js\";\r\nimport { Context } from \"./context.js\";\r\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\r\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\r\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\r\nvar notFoundHandler = (c) => {\r\n  return c.text(\"404 Not Found\", 404);\r\n};\r\nvar errorHandler = (err, c) => {\r\n  if (\"getResponse\" in err) {\r\n    const res = err.getResponse();\r\n    return c.newResponse(res.body, res);\r\n  }\r\n  console.error(err);\r\n  return c.text(\"Internal Server Error\", 500);\r\n};\r\nvar Hono = class {\r\n  get;\r\n  post;\r\n  put;\r\n  delete;\r\n  options;\r\n  patch;\r\n  all;\r\n  on;\r\n  use;\r\n  router;\r\n  getPath;\r\n  _basePath = \"/\";\r\n  #path = \"/\";\r\n  routes = [];\r\n  constructor(options = {}) {\r\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\r\n    allMethods.forEach((method) => {\r\n      this[method] = (args1, ...args) => {\r\n        if (typeof args1 === \"string\") {\r\n          this.#path = args1;\r\n        } else {\r\n          this.#addRoute(method, this.#path, args1);\r\n        }\r\n        args.forEach((handler) => {\r\n          this.#addRoute(method, this.#path, handler);\r\n        });\r\n        return this;\r\n      };\r\n    });\r\n    this.on = (method, path, ...handlers) => {\r\n      for (const p of [path].flat()) {\r\n        this.#path = p;\r\n        for (const m of [method].flat()) {\r\n          handlers.map((handler) => {\r\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\r\n          });\r\n        }\r\n      }\r\n      return this;\r\n    };\r\n    this.use = (arg1, ...handlers) => {\r\n      if (typeof arg1 === \"string\") {\r\n        this.#path = arg1;\r\n      } else {\r\n        this.#path = \"*\";\r\n        handlers.unshift(arg1);\r\n      }\r\n      handlers.forEach((handler) => {\r\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\r\n      });\r\n      return this;\r\n    };\r\n    const { strict, ...optionsWithoutStrict } = options;\r\n    Object.assign(this, optionsWithoutStrict);\r\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\r\n  }\r\n  #clone() {\r\n    const clone = new Hono({\r\n      router: this.router,\r\n      getPath: this.getPath\r\n    });\r\n    clone.errorHandler = this.errorHandler;\r\n    clone.#notFoundHandler = this.#notFoundHandler;\r\n    clone.routes = this.routes;\r\n    return clone;\r\n  }\r\n  #notFoundHandler = notFoundHandler;\r\n  errorHandler = errorHandler;\r\n  route(path, app) {\r\n    const subApp = this.basePath(path);\r\n    app.routes.map((r) => {\r\n      let handler;\r\n      if (app.errorHandler === errorHandler) {\r\n        handler = r.handler;\r\n      } else {\r\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\r\n        handler[COMPOSED_HANDLER] = r.handler;\r\n      }\r\n      subApp.#addRoute(r.method, r.path, handler);\r\n    });\r\n    return this;\r\n  }\r\n  basePath(path) {\r\n    const subApp = this.#clone();\r\n    subApp._basePath = mergePath(this._basePath, path);\r\n    return subApp;\r\n  }\r\n  onError = (handler) => {\r\n    this.errorHandler = handler;\r\n    return this;\r\n  };\r\n  notFound = (handler) => {\r\n    this.#notFoundHandler = handler;\r\n    return this;\r\n  };\r\n  mount(path, applicationHandler, options) {\r\n    let replaceRequest;\r\n    let optionHandler;\r\n    if (options) {\r\n      if (typeof options === \"function\") {\r\n        optionHandler = options;\r\n      } else {\r\n        optionHandler = options.optionHandler;\r\n        if (options.replaceRequest === false) {\r\n          replaceRequest = (request) => request;\r\n        } else {\r\n          replaceRequest = options.replaceRequest;\r\n        }\r\n      }\r\n    }\r\n    const getOptions = optionHandler ? (c) => {\r\n      const options2 = optionHandler(c);\r\n      return Array.isArray(options2) ? options2 : [options2];\r\n    } : (c) => {\r\n      let executionContext = void 0;\r\n      try {\r\n        executionContext = c.executionCtx;\r\n      } catch {\r\n      }\r\n      return [c.env, executionContext];\r\n    };\r\n    replaceRequest ||= (() => {\r\n      const mergedPath = mergePath(this._basePath, path);\r\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\r\n      return (request) => {\r\n        const url = new URL(request.url);\r\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\r\n        return new Request(url, request);\r\n      };\r\n    })();\r\n    const handler = async (c, next) => {\r\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\r\n      if (res) {\r\n        return res;\r\n      }\r\n      await next();\r\n    };\r\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\r\n    return this;\r\n  }\r\n  #addRoute(method, path, handler) {\r\n    method = method.toUpperCase();\r\n    path = mergePath(this._basePath, path);\r\n    const r = { basePath: this._basePath, path, method, handler };\r\n    this.router.add(method, path, [handler, r]);\r\n    this.routes.push(r);\r\n  }\r\n  #handleError(err, c) {\r\n    if (err instanceof Error) {\r\n      return this.errorHandler(err, c);\r\n    }\r\n    throw err;\r\n  }\r\n  #dispatch(request, executionCtx, env, method) {\r\n    if (method === \"HEAD\") {\r\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\r\n    }\r\n    const path = this.getPath(request, { env });\r\n    const matchResult = this.router.match(method, path);\r\n    const c = new Context(request, {\r\n      path,\r\n      matchResult,\r\n      env,\r\n      executionCtx,\r\n      notFoundHandler: this.#notFoundHandler\r\n    });\r\n    if (matchResult[0].length === 1) {\r\n      let res;\r\n      try {\r\n        res = matchResult[0][0][0][0](c, async () => {\r\n          c.res = await this.#notFoundHandler(c);\r\n        });\r\n      } catch (err) {\r\n        return this.#handleError(err, c);\r\n      }\r\n      return res instanceof Promise ? res.then(\r\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\r\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\r\n    }\r\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\r\n    return (async () => {\r\n      try {\r\n        const context = await composed(c);\r\n        if (!context.finalized) {\r\n          throw new Error(\r\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\r\n          );\r\n        }\r\n        return context.res;\r\n      } catch (err) {\r\n        return this.#handleError(err, c);\r\n      }\r\n    })();\r\n  }\r\n  fetch = (request, ...rest) => {\r\n    return this.#dispatch(request, rest[1], rest[0], request.method);\r\n  };\r\n  request = (input, requestInit, Env, executionCtx) => {\r\n    if (input instanceof Request) {\r\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\r\n    }\r\n    input = input.toString();\r\n    return this.fetch(\r\n      new Request(\r\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\r\n        requestInit\r\n      ),\r\n      Env,\r\n      executionCtx\r\n    );\r\n  };\r\n  fire = () => {\r\n    addEventListener(\"fetch\", (event) => {\r\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\r\n    });\r\n  };\r\n};\r\nexport {\r\n  Hono as HonoBase\r\n};\r\n", "// src/compose.ts\r\nvar compose = (middleware, onError, onNotFound) => {\r\n  return (context, next) => {\r\n    let index = -1;\r\n    return dispatch(0);\r\n    async function dispatch(i) {\r\n      if (i <= index) {\r\n        throw new Error(\"next() called multiple times\");\r\n      }\r\n      index = i;\r\n      let res;\r\n      let isError = false;\r\n      let handler;\r\n      if (middleware[i]) {\r\n        handler = middleware[i][0][0];\r\n        context.req.routeIndex = i;\r\n      } else {\r\n        handler = i === middleware.length && next || void 0;\r\n      }\r\n      if (handler) {\r\n        try {\r\n          res = await handler(context, () => dispatch(i + 1));\r\n        } catch (err) {\r\n          if (err instanceof Error && onError) {\r\n            context.error = err;\r\n            res = await onError(err, context);\r\n            isError = true;\r\n          } else {\r\n            throw err;\r\n          }\r\n        }\r\n      } else {\r\n        if (context.finalized === false && onNotFound) {\r\n          res = await onNotFound(context);\r\n        }\r\n      }\r\n      if (res && (context.finalized === false || isError)) {\r\n        context.res = res;\r\n      }\r\n      return context;\r\n    }\r\n  };\r\n};\r\nexport {\r\n  compose\r\n};\r\n", "// src/context.ts\r\nimport { HonoRequest } from \"./request.js\";\r\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\r\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\r\nvar setDefaultContentType = (contentType, headers) => {\r\n  return {\r\n    \"Content-Type\": contentType,\r\n    ...headers\r\n  };\r\n};\r\nvar Context = class {\r\n  #rawRequest;\r\n  #req;\r\n  env = {};\r\n  #var;\r\n  finalized = false;\r\n  error;\r\n  #status;\r\n  #executionCtx;\r\n  #res;\r\n  #layout;\r\n  #renderer;\r\n  #notFoundHandler;\r\n  #preparedHeaders;\r\n  #matchResult;\r\n  #path;\r\n  constructor(req, options) {\r\n    this.#rawRequest = req;\r\n    if (options) {\r\n      this.#executionCtx = options.executionCtx;\r\n      this.env = options.env;\r\n      this.#notFoundHandler = options.notFoundHandler;\r\n      this.#path = options.path;\r\n      this.#matchResult = options.matchResult;\r\n    }\r\n  }\r\n  get req() {\r\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\r\n    return this.#req;\r\n  }\r\n  get event() {\r\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\r\n      return this.#executionCtx;\r\n    } else {\r\n      throw Error(\"This context has no FetchEvent\");\r\n    }\r\n  }\r\n  get executionCtx() {\r\n    if (this.#executionCtx) {\r\n      return this.#executionCtx;\r\n    } else {\r\n      throw Error(\"This context has no ExecutionContext\");\r\n    }\r\n  }\r\n  get res() {\r\n    return this.#res ||= new Response(null, {\r\n      headers: this.#preparedHeaders ??= new Headers()\r\n    });\r\n  }\r\n  set res(_res) {\r\n    if (this.#res && _res) {\r\n      _res = new Response(_res.body, _res);\r\n      for (const [k, v] of this.#res.headers.entries()) {\r\n        if (k === \"content-type\") {\r\n          continue;\r\n        }\r\n        if (k === \"set-cookie\") {\r\n          const cookies = this.#res.headers.getSetCookie();\r\n          _res.headers.delete(\"set-cookie\");\r\n          for (const cookie of cookies) {\r\n            _res.headers.append(\"set-cookie\", cookie);\r\n          }\r\n        } else {\r\n          _res.headers.set(k, v);\r\n        }\r\n      }\r\n    }\r\n    this.#res = _res;\r\n    this.finalized = true;\r\n  }\r\n  render = (...args) => {\r\n    this.#renderer ??= (content) => this.html(content);\r\n    return this.#renderer(...args);\r\n  };\r\n  setLayout = (layout) => this.#layout = layout;\r\n  getLayout = () => this.#layout;\r\n  setRenderer = (renderer) => {\r\n    this.#renderer = renderer;\r\n  };\r\n  header = (name, value, options) => {\r\n    if (this.finalized) {\r\n      this.#res = new Response(this.#res.body, this.#res);\r\n    }\r\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\r\n    if (value === void 0) {\r\n      headers.delete(name);\r\n    } else if (options?.append) {\r\n      headers.append(name, value);\r\n    } else {\r\n      headers.set(name, value);\r\n    }\r\n  };\r\n  status = (status) => {\r\n    this.#status = status;\r\n  };\r\n  set = (key, value) => {\r\n    this.#var ??= /* @__PURE__ */ new Map();\r\n    this.#var.set(key, value);\r\n  };\r\n  get = (key) => {\r\n    return this.#var ? this.#var.get(key) : void 0;\r\n  };\r\n  get var() {\r\n    if (!this.#var) {\r\n      return {};\r\n    }\r\n    return Object.fromEntries(this.#var);\r\n  }\r\n  #newResponse(data, arg, headers) {\r\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\r\n    if (typeof arg === \"object\" && \"headers\" in arg) {\r\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\r\n      for (const [key, value] of argHeaders) {\r\n        if (key.toLowerCase() === \"set-cookie\") {\r\n          responseHeaders.append(key, value);\r\n        } else {\r\n          responseHeaders.set(key, value);\r\n        }\r\n      }\r\n    }\r\n    if (headers) {\r\n      for (const [k, v] of Object.entries(headers)) {\r\n        if (typeof v === \"string\") {\r\n          responseHeaders.set(k, v);\r\n        } else {\r\n          responseHeaders.delete(k);\r\n          for (const v2 of v) {\r\n            responseHeaders.append(k, v2);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\r\n    return new Response(data, { status, headers: responseHeaders });\r\n  }\r\n  newResponse = (...args) => this.#newResponse(...args);\r\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\r\n  text = (text, arg, headers) => {\r\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\r\n      text,\r\n      arg,\r\n      setDefaultContentType(TEXT_PLAIN, headers)\r\n    );\r\n  };\r\n  json = (object, arg, headers) => {\r\n    return this.#newResponse(\r\n      JSON.stringify(object),\r\n      arg,\r\n      setDefaultContentType(\"application/json\", headers)\r\n    );\r\n  };\r\n  html = (html, arg, headers) => {\r\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\r\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\r\n  };\r\n  redirect = (location, status) => {\r\n    const locationString = String(location);\r\n    this.header(\r\n      \"Location\",\r\n      !/[^\\x00-\\xFF]/.test(locationString) ? locationString : encodeURI(locationString)\r\n    );\r\n    return this.newResponse(null, status ?? 302);\r\n  };\r\n  notFound = () => {\r\n    this.#notFoundHandler ??= () => new Response();\r\n    return this.#notFoundHandler(this);\r\n  };\r\n};\r\nexport {\r\n  Context,\r\n  TEXT_PLAIN\r\n};\r\n", "// src/request.ts\r\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\r\nimport { parseBody } from \"./utils/body.js\";\r\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\r\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\r\nvar HonoRequest = class {\r\n  raw;\r\n  #validatedData;\r\n  #matchResult;\r\n  routeIndex = 0;\r\n  path;\r\n  bodyCache = {};\r\n  constructor(request, path = \"/\", matchResult = [[]]) {\r\n    this.raw = request;\r\n    this.path = path;\r\n    this.#matchResult = matchResult;\r\n    this.#validatedData = {};\r\n  }\r\n  param(key) {\r\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\r\n  }\r\n  #getDecodedParam(key) {\r\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\r\n    const param = this.#getParamValue(paramKey);\r\n    return param ? /\\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;\r\n  }\r\n  #getAllDecodedParams() {\r\n    const decoded = {};\r\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\r\n    for (const key of keys) {\r\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\r\n      if (value && typeof value === \"string\") {\r\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\r\n      }\r\n    }\r\n    return decoded;\r\n  }\r\n  #getParamValue(paramKey) {\r\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\r\n  }\r\n  query(key) {\r\n    return getQueryParam(this.url, key);\r\n  }\r\n  queries(key) {\r\n    return getQueryParams(this.url, key);\r\n  }\r\n  header(name) {\r\n    if (name) {\r\n      return this.raw.headers.get(name) ?? void 0;\r\n    }\r\n    const headerData = {};\r\n    this.raw.headers.forEach((value, key) => {\r\n      headerData[key] = value;\r\n    });\r\n    return headerData;\r\n  }\r\n  async parseBody(options) {\r\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\r\n  }\r\n  #cachedBody = (key) => {\r\n    const { bodyCache, raw } = this;\r\n    const cachedBody = bodyCache[key];\r\n    if (cachedBody) {\r\n      return cachedBody;\r\n    }\r\n    const anyCachedKey = Object.keys(bodyCache)[0];\r\n    if (anyCachedKey) {\r\n      return bodyCache[anyCachedKey].then((body) => {\r\n        if (anyCachedKey === \"json\") {\r\n          body = JSON.stringify(body);\r\n        }\r\n        return new Response(body)[key]();\r\n      });\r\n    }\r\n    return bodyCache[key] = raw[key]();\r\n  };\r\n  json() {\r\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\r\n  }\r\n  text() {\r\n    return this.#cachedBody(\"text\");\r\n  }\r\n  arrayBuffer() {\r\n    return this.#cachedBody(\"arrayBuffer\");\r\n  }\r\n  blob() {\r\n    return this.#cachedBody(\"blob\");\r\n  }\r\n  formData() {\r\n    return this.#cachedBody(\"formData\");\r\n  }\r\n  addValidatedData(target, data) {\r\n    this.#validatedData[target] = data;\r\n  }\r\n  valid(target) {\r\n    return this.#validatedData[target];\r\n  }\r\n  get url() {\r\n    return this.raw.url;\r\n  }\r\n  get method() {\r\n    return this.raw.method;\r\n  }\r\n  get [GET_MATCH_RESULT]() {\r\n    return this.#matchResult;\r\n  }\r\n  get matchedRoutes() {\r\n    return this.#matchResult[0].map(([[, route]]) => route);\r\n  }\r\n  get routePath() {\r\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\r\n  }\r\n};\r\nexport {\r\n  HonoRequest\r\n};\r\n", "// src/request/constants.ts\r\nvar GET_MATCH_RESULT = Symbol();\r\nexport {\r\n  GET_MATCH_RESULT\r\n};\r\n", "// src/utils/body.ts\r\nimport { HonoRequest } from \"../request.js\";\r\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\r\n  const { all = false, dot = false } = options;\r\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\r\n  const contentType = headers.get(\"Content-Type\");\r\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\r\n    return parseFormData(request, { all, dot });\r\n  }\r\n  return {};\r\n};\r\nasync function parseFormData(request, options) {\r\n  const formData = await request.formData();\r\n  if (formData) {\r\n    return convertFormDataToBodyData(formData, options);\r\n  }\r\n  return {};\r\n}\r\nfunction convertFormDataToBodyData(formData, options) {\r\n  const form = /* @__PURE__ */ Object.create(null);\r\n  formData.forEach((value, key) => {\r\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\r\n    if (!shouldParseAllValues) {\r\n      form[key] = value;\r\n    } else {\r\n      handleParsingAllValues(form, key, value);\r\n    }\r\n  });\r\n  if (options.dot) {\r\n    Object.entries(form).forEach(([key, value]) => {\r\n      const shouldParseDotValues = key.includes(\".\");\r\n      if (shouldParseDotValues) {\r\n        handleParsingNestedValues(form, key, value);\r\n        delete form[key];\r\n      }\r\n    });\r\n  }\r\n  return form;\r\n}\r\nvar handleParsingAllValues = (form, key, value) => {\r\n  if (form[key] !== void 0) {\r\n    if (Array.isArray(form[key])) {\r\n      ;\r\n      form[key].push(value);\r\n    } else {\r\n      form[key] = [form[key], value];\r\n    }\r\n  } else {\r\n    if (!key.endsWith(\"[]\")) {\r\n      form[key] = value;\r\n    } else {\r\n      form[key] = [value];\r\n    }\r\n  }\r\n};\r\nvar handleParsingNestedValues = (form, key, value) => {\r\n  let nestedForm = form;\r\n  const keys = key.split(\".\");\r\n  keys.forEach((key2, index) => {\r\n    if (index === keys.length - 1) {\r\n      nestedForm[key2] = value;\r\n    } else {\r\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\r\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\r\n      }\r\n      nestedForm = nestedForm[key2];\r\n    }\r\n  });\r\n};\r\nexport {\r\n  parseBody\r\n};\r\n", "// src/utils/url.ts\r\nvar splitPath = (path) => {\r\n  const paths = path.split(\"/\");\r\n  if (paths[0] === \"\") {\r\n    paths.shift();\r\n  }\r\n  return paths;\r\n};\r\nvar splitRoutingPath = (routePath) => {\r\n  const { groups, path } = extractGroupsFromPath(routePath);\r\n  const paths = splitPath(path);\r\n  return replaceGroupMarks(paths, groups);\r\n};\r\nvar extractGroupsFromPath = (path) => {\r\n  const groups = [];\r\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\r\n    const mark = `@${index}`;\r\n    groups.push([mark, match]);\r\n    return mark;\r\n  });\r\n  return { groups, path };\r\n};\r\nvar replaceGroupMarks = (paths, groups) => {\r\n  for (let i = groups.length - 1; i >= 0; i--) {\r\n    const [mark] = groups[i];\r\n    for (let j = paths.length - 1; j >= 0; j--) {\r\n      if (paths[j].includes(mark)) {\r\n        paths[j] = paths[j].replace(mark, groups[i][1]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return paths;\r\n};\r\nvar patternCache = {};\r\nvar getPattern = (label, next) => {\r\n  if (label === \"*\") {\r\n    return \"*\";\r\n  }\r\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\r\n  if (match) {\r\n    const cacheKey = `${label}#${next}`;\r\n    if (!patternCache[cacheKey]) {\r\n      if (match[2]) {\r\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\r\n      } else {\r\n        patternCache[cacheKey] = [label, match[1], true];\r\n      }\r\n    }\r\n    return patternCache[cacheKey];\r\n  }\r\n  return null;\r\n};\r\nvar tryDecode = (str, decoder) => {\r\n  try {\r\n    return decoder(str);\r\n  } catch {\r\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\r\n      try {\r\n        return decoder(match);\r\n      } catch {\r\n        return match;\r\n      }\r\n    });\r\n  }\r\n};\r\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\r\nvar getPath = (request) => {\r\n  const url = request.url;\r\n  const start = url.indexOf(\r\n    \"/\",\r\n    url.charCodeAt(9) === 58 ? 13 : 8\r\n  );\r\n  let i = start;\r\n  for (; i < url.length; i++) {\r\n    const charCode = url.charCodeAt(i);\r\n    if (charCode === 37) {\r\n      const queryIndex = url.indexOf(\"?\", i);\r\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\r\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\r\n    } else if (charCode === 63) {\r\n      break;\r\n    }\r\n  }\r\n  return url.slice(start, i);\r\n};\r\nvar getQueryStrings = (url) => {\r\n  const queryIndex = url.indexOf(\"?\", 8);\r\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\r\n};\r\nvar getPathNoStrict = (request) => {\r\n  const result = getPath(request);\r\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\r\n};\r\nvar mergePath = (base, sub, ...rest) => {\r\n  if (rest.length) {\r\n    sub = mergePath(sub, ...rest);\r\n  }\r\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\r\n};\r\nvar checkOptionalParameter = (path) => {\r\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\r\n    return null;\r\n  }\r\n  const segments = path.split(\"/\");\r\n  const results = [];\r\n  let basePath = \"\";\r\n  segments.forEach((segment) => {\r\n    if (segment !== \"\" && !/\\:/.test(segment)) {\r\n      basePath += \"/\" + segment;\r\n    } else if (/\\:/.test(segment)) {\r\n      if (/\\?/.test(segment)) {\r\n        if (results.length === 0 && basePath === \"\") {\r\n          results.push(\"/\");\r\n        } else {\r\n          results.push(basePath);\r\n        }\r\n        const optionalSegment = segment.replace(\"?\", \"\");\r\n        basePath += \"/\" + optionalSegment;\r\n        results.push(basePath);\r\n      } else {\r\n        basePath += \"/\" + segment;\r\n      }\r\n    }\r\n  });\r\n  return results.filter((v, i, a) => a.indexOf(v) === i);\r\n};\r\nvar _decodeURI = (value) => {\r\n  if (!/[%+]/.test(value)) {\r\n    return value;\r\n  }\r\n  if (value.indexOf(\"+\") !== -1) {\r\n    value = value.replace(/\\+/g, \" \");\r\n  }\r\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\r\n};\r\nvar _getQueryParam = (url, key, multiple) => {\r\n  let encoded;\r\n  if (!multiple && key && !/[%+]/.test(key)) {\r\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\r\n    if (keyIndex2 === -1) {\r\n      keyIndex2 = url.indexOf(`&${key}`, 8);\r\n    }\r\n    while (keyIndex2 !== -1) {\r\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\r\n      if (trailingKeyCode === 61) {\r\n        const valueIndex = keyIndex2 + key.length + 2;\r\n        const endIndex = url.indexOf(\"&\", valueIndex);\r\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\r\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\r\n        return \"\";\r\n      }\r\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\r\n    }\r\n    encoded = /[%+]/.test(url);\r\n    if (!encoded) {\r\n      return void 0;\r\n    }\r\n  }\r\n  const results = {};\r\n  encoded ??= /[%+]/.test(url);\r\n  let keyIndex = url.indexOf(\"?\", 8);\r\n  while (keyIndex !== -1) {\r\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\r\n    let valueIndex = url.indexOf(\"=\", keyIndex);\r\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\r\n      valueIndex = -1;\r\n    }\r\n    let name = url.slice(\r\n      keyIndex + 1,\r\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\r\n    );\r\n    if (encoded) {\r\n      name = _decodeURI(name);\r\n    }\r\n    keyIndex = nextKeyIndex;\r\n    if (name === \"\") {\r\n      continue;\r\n    }\r\n    let value;\r\n    if (valueIndex === -1) {\r\n      value = \"\";\r\n    } else {\r\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\r\n      if (encoded) {\r\n        value = _decodeURI(value);\r\n      }\r\n    }\r\n    if (multiple) {\r\n      if (!(results[name] && Array.isArray(results[name]))) {\r\n        results[name] = [];\r\n      }\r\n      ;\r\n      results[name].push(value);\r\n    } else {\r\n      results[name] ??= value;\r\n    }\r\n  }\r\n  return key ? results[key] : results;\r\n};\r\nvar getQueryParam = _getQueryParam;\r\nvar getQueryParams = (url, key) => {\r\n  return _getQueryParam(url, key, true);\r\n};\r\nvar decodeURIComponent_ = decodeURIComponent;\r\nexport {\r\n  checkOptionalParameter,\r\n  decodeURIComponent_,\r\n  getPath,\r\n  getPathNoStrict,\r\n  getPattern,\r\n  getQueryParam,\r\n  getQueryParams,\r\n  getQueryStrings,\r\n  mergePath,\r\n  splitPath,\r\n  splitRoutingPath,\r\n  tryDecode\r\n};\r\n", "// src/utils/html.ts\r\nvar HtmlEscapedCallbackPhase = {\r\n  Stringify: 1,\r\n  BeforeStream: 2,\r\n  Stream: 3\r\n};\r\nvar raw = (value, callbacks) => {\r\n  const escapedString = new String(value);\r\n  escapedString.isEscaped = true;\r\n  escapedString.callbacks = callbacks;\r\n  return escapedString;\r\n};\r\nvar escapeRe = /[&<>'\"]/;\r\nvar stringBufferToString = async (buffer, callbacks) => {\r\n  let str = \"\";\r\n  callbacks ||= [];\r\n  const resolvedBuffer = await Promise.all(buffer);\r\n  for (let i = resolvedBuffer.length - 1; ; i--) {\r\n    str += resolvedBuffer[i];\r\n    i--;\r\n    if (i < 0) {\r\n      break;\r\n    }\r\n    let r = resolvedBuffer[i];\r\n    if (typeof r === \"object\") {\r\n      callbacks.push(...r.callbacks || []);\r\n    }\r\n    const isEscaped = r.isEscaped;\r\n    r = await (typeof r === \"object\" ? r.toString() : r);\r\n    if (typeof r === \"object\") {\r\n      callbacks.push(...r.callbacks || []);\r\n    }\r\n    if (r.isEscaped ?? isEscaped) {\r\n      str += r;\r\n    } else {\r\n      const buf = [str];\r\n      escapeToBuffer(r, buf);\r\n      str = buf[0];\r\n    }\r\n  }\r\n  return raw(str, callbacks);\r\n};\r\nvar escapeToBuffer = (str, buffer) => {\r\n  const match = str.search(escapeRe);\r\n  if (match === -1) {\r\n    buffer[0] += str;\r\n    return;\r\n  }\r\n  let escape;\r\n  let index;\r\n  let lastIndex = 0;\r\n  for (index = match; index < str.length; index++) {\r\n    switch (str.charCodeAt(index)) {\r\n      case 34:\r\n        escape = \"&quot;\";\r\n        break;\r\n      case 39:\r\n        escape = \"&#39;\";\r\n        break;\r\n      case 38:\r\n        escape = \"&amp;\";\r\n        break;\r\n      case 60:\r\n        escape = \"&lt;\";\r\n        break;\r\n      case 62:\r\n        escape = \"&gt;\";\r\n        break;\r\n      default:\r\n        continue;\r\n    }\r\n    buffer[0] += str.substring(lastIndex, index) + escape;\r\n    lastIndex = index + 1;\r\n  }\r\n  buffer[0] += str.substring(lastIndex, index);\r\n};\r\nvar resolveCallbackSync = (str) => {\r\n  const callbacks = str.callbacks;\r\n  if (!callbacks?.length) {\r\n    return str;\r\n  }\r\n  const buffer = [str];\r\n  const context = {};\r\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\r\n  return buffer[0];\r\n};\r\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\r\n  if (typeof str === \"object\" && !(str instanceof String)) {\r\n    if (!(str instanceof Promise)) {\r\n      str = str.toString();\r\n    }\r\n    if (str instanceof Promise) {\r\n      str = await str;\r\n    }\r\n  }\r\n  const callbacks = str.callbacks;\r\n  if (!callbacks?.length) {\r\n    return Promise.resolve(str);\r\n  }\r\n  if (buffer) {\r\n    buffer[0] += str;\r\n  } else {\r\n    buffer = [str];\r\n  }\r\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\r\n    (res) => Promise.all(\r\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\r\n    ).then(() => buffer[0])\r\n  );\r\n  if (preserveCallbacks) {\r\n    return raw(await resStr, callbacks);\r\n  } else {\r\n    return resStr;\r\n  }\r\n};\r\nexport {\r\n  HtmlEscapedCallbackPhase,\r\n  escapeToBuffer,\r\n  raw,\r\n  resolveCallback,\r\n  resolveCallbackSync,\r\n  stringBufferToString\r\n};\r\n", "// src/router.ts\r\nvar METHOD_NAME_ALL = \"ALL\";\r\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\r\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\r\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\r\nvar UnsupportedPathError = class extends Error {\r\n};\r\nexport {\r\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\r\n  METHODS,\r\n  METHOD_NAME_ALL,\r\n  METHOD_NAME_ALL_LOWERCASE,\r\n  UnsupportedPathError\r\n};\r\n", "// src/utils/constants.ts\r\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\r\nexport {\r\n  COMPOSED_HANDLER\r\n};\r\n", "// src/router/reg-exp-router/index.ts\r\nimport { RegExpRouter } from \"./router.js\";\r\nexport {\r\n  RegExpRouter\r\n};\r\n", "// src/router/reg-exp-router/router.ts\r\nimport {\r\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\r\n  METHOD_NAME_ALL,\r\n  UnsupportedPathError\r\n} from \"../../router.js\";\r\nimport { checkOptionalParameter } from \"../../utils/url.js\";\r\nimport { PATH_ERROR } from \"./node.js\";\r\nimport { Trie } from \"./trie.js\";\r\nvar emptyParam = [];\r\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\r\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\r\nfunction buildWildcardRegExp(path) {\r\n  return wildcardRegExpCache[path] ??= new RegExp(\r\n    path === \"*\" ? \"\" : `^${path.replace(\r\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\r\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\r\n    )}$`\r\n  );\r\n}\r\nfunction clearWildcardRegExpCache() {\r\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\r\n}\r\nfunction buildMatcherFromPreprocessedRoutes(routes) {\r\n  const trie = new Trie();\r\n  const handlerData = [];\r\n  if (routes.length === 0) {\r\n    return nullMatcher;\r\n  }\r\n  const routesWithStaticPathFlag = routes.map(\r\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\r\n  ).sort(\r\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\r\n  );\r\n  const staticMap = /* @__PURE__ */ Object.create(null);\r\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\r\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\r\n    if (pathErrorCheckOnly) {\r\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\r\n    } else {\r\n      j++;\r\n    }\r\n    let paramAssoc;\r\n    try {\r\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\r\n    } catch (e) {\r\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\r\n    }\r\n    if (pathErrorCheckOnly) {\r\n      continue;\r\n    }\r\n    handlerData[j] = handlers.map(([h, paramCount]) => {\r\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\r\n      paramCount -= 1;\r\n      for (; paramCount >= 0; paramCount--) {\r\n        const [key, value] = paramAssoc[paramCount];\r\n        paramIndexMap[key] = value;\r\n      }\r\n      return [h, paramIndexMap];\r\n    });\r\n  }\r\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\r\n  for (let i = 0, len = handlerData.length; i < len; i++) {\r\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\r\n      const map = handlerData[i][j]?.[1];\r\n      if (!map) {\r\n        continue;\r\n      }\r\n      const keys = Object.keys(map);\r\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\r\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\r\n      }\r\n    }\r\n  }\r\n  const handlerMap = [];\r\n  for (const i in indexReplacementMap) {\r\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\r\n  }\r\n  return [regexp, handlerMap, staticMap];\r\n}\r\nfunction findMiddleware(middleware, path) {\r\n  if (!middleware) {\r\n    return void 0;\r\n  }\r\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\r\n    if (buildWildcardRegExp(k).test(path)) {\r\n      return [...middleware[k]];\r\n    }\r\n  }\r\n  return void 0;\r\n}\r\nvar RegExpRouter = class {\r\n  name = \"RegExpRouter\";\r\n  #middleware;\r\n  #routes;\r\n  constructor() {\r\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\r\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\r\n  }\r\n  add(method, path, handler) {\r\n    const middleware = this.#middleware;\r\n    const routes = this.#routes;\r\n    if (!middleware || !routes) {\r\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\r\n    }\r\n    if (!middleware[method]) {\r\n      ;\r\n      [middleware, routes].forEach((handlerMap) => {\r\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\r\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\r\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\r\n        });\r\n      });\r\n    }\r\n    if (path === \"/*\") {\r\n      path = \"*\";\r\n    }\r\n    const paramCount = (path.match(/\\/:/g) || []).length;\r\n    if (/\\*$/.test(path)) {\r\n      const re = buildWildcardRegExp(path);\r\n      if (method === METHOD_NAME_ALL) {\r\n        Object.keys(middleware).forEach((m) => {\r\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\r\n        });\r\n      } else {\r\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\r\n      }\r\n      Object.keys(middleware).forEach((m) => {\r\n        if (method === METHOD_NAME_ALL || method === m) {\r\n          Object.keys(middleware[m]).forEach((p) => {\r\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\r\n          });\r\n        }\r\n      });\r\n      Object.keys(routes).forEach((m) => {\r\n        if (method === METHOD_NAME_ALL || method === m) {\r\n          Object.keys(routes[m]).forEach(\r\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\r\n          );\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    const paths = checkOptionalParameter(path) || [path];\r\n    for (let i = 0, len = paths.length; i < len; i++) {\r\n      const path2 = paths[i];\r\n      Object.keys(routes).forEach((m) => {\r\n        if (method === METHOD_NAME_ALL || method === m) {\r\n          routes[m][path2] ||= [\r\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\r\n          ];\r\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  match(method, path) {\r\n    clearWildcardRegExpCache();\r\n    const matchers = this.#buildAllMatchers();\r\n    this.match = (method2, path2) => {\r\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\r\n      const staticMatch = matcher[2][path2];\r\n      if (staticMatch) {\r\n        return staticMatch;\r\n      }\r\n      const match = path2.match(matcher[0]);\r\n      if (!match) {\r\n        return [[], emptyParam];\r\n      }\r\n      const index = match.indexOf(\"\", 1);\r\n      return [matcher[1][index], match];\r\n    };\r\n    return this.match(method, path);\r\n  }\r\n  #buildAllMatchers() {\r\n    const matchers = /* @__PURE__ */ Object.create(null);\r\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\r\n      matchers[method] ||= this.#buildMatcher(method);\r\n    });\r\n    this.#middleware = this.#routes = void 0;\r\n    return matchers;\r\n  }\r\n  #buildMatcher(method) {\r\n    const routes = [];\r\n    let hasOwnRoute = method === METHOD_NAME_ALL;\r\n    [this.#middleware, this.#routes].forEach((r) => {\r\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\r\n      if (ownRoute.length !== 0) {\r\n        hasOwnRoute ||= true;\r\n        routes.push(...ownRoute);\r\n      } else if (method !== METHOD_NAME_ALL) {\r\n        routes.push(\r\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\r\n        );\r\n      }\r\n    });\r\n    if (!hasOwnRoute) {\r\n      return null;\r\n    } else {\r\n      return buildMatcherFromPreprocessedRoutes(routes);\r\n    }\r\n  }\r\n};\r\nexport {\r\n  RegExpRouter\r\n};\r\n", "// src/router/reg-exp-router/node.ts\r\nvar LABEL_REG_EXP_STR = \"[^/]+\";\r\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\r\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\r\nvar PATH_ERROR = Symbol();\r\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\r\nfunction compareKey(a, b) {\r\n  if (a.length === 1) {\r\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\r\n  }\r\n  if (b.length === 1) {\r\n    return 1;\r\n  }\r\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\r\n    return 1;\r\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\r\n    return -1;\r\n  }\r\n  if (a === LABEL_REG_EXP_STR) {\r\n    return 1;\r\n  } else if (b === LABEL_REG_EXP_STR) {\r\n    return -1;\r\n  }\r\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\r\n}\r\nvar Node = class {\r\n  #index;\r\n  #varIndex;\r\n  #children = /* @__PURE__ */ Object.create(null);\r\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\r\n    if (tokens.length === 0) {\r\n      if (this.#index !== void 0) {\r\n        throw PATH_ERROR;\r\n      }\r\n      if (pathErrorCheckOnly) {\r\n        return;\r\n      }\r\n      this.#index = index;\r\n      return;\r\n    }\r\n    const [token, ...restTokens] = tokens;\r\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\r\n    let node;\r\n    if (pattern) {\r\n      const name = pattern[1];\r\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\r\n      if (name && pattern[2]) {\r\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\r\n        if (/\\((?!\\?:)/.test(regexpStr)) {\r\n          throw PATH_ERROR;\r\n        }\r\n      }\r\n      node = this.#children[regexpStr];\r\n      if (!node) {\r\n        if (Object.keys(this.#children).some(\r\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\r\n        )) {\r\n          throw PATH_ERROR;\r\n        }\r\n        if (pathErrorCheckOnly) {\r\n          return;\r\n        }\r\n        node = this.#children[regexpStr] = new Node();\r\n        if (name !== \"\") {\r\n          node.#varIndex = context.varIndex++;\r\n        }\r\n      }\r\n      if (!pathErrorCheckOnly && name !== \"\") {\r\n        paramMap.push([name, node.#varIndex]);\r\n      }\r\n    } else {\r\n      node = this.#children[token];\r\n      if (!node) {\r\n        if (Object.keys(this.#children).some(\r\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\r\n        )) {\r\n          throw PATH_ERROR;\r\n        }\r\n        if (pathErrorCheckOnly) {\r\n          return;\r\n        }\r\n        node = this.#children[token] = new Node();\r\n      }\r\n    }\r\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\r\n  }\r\n  buildRegExpStr() {\r\n    const childKeys = Object.keys(this.#children).sort(compareKey);\r\n    const strList = childKeys.map((k) => {\r\n      const c = this.#children[k];\r\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\r\n    });\r\n    if (typeof this.#index === \"number\") {\r\n      strList.unshift(`#${this.#index}`);\r\n    }\r\n    if (strList.length === 0) {\r\n      return \"\";\r\n    }\r\n    if (strList.length === 1) {\r\n      return strList[0];\r\n    }\r\n    return \"(?:\" + strList.join(\"|\") + \")\";\r\n  }\r\n};\r\nexport {\r\n  Node,\r\n  PATH_ERROR\r\n};\r\n", "// src/router/reg-exp-router/trie.ts\r\nimport { Node } from \"./node.js\";\r\nvar Trie = class {\r\n  #context = { varIndex: 0 };\r\n  #root = new Node();\r\n  insert(path, index, pathErrorCheckOnly) {\r\n    const paramAssoc = [];\r\n    const groups = [];\r\n    for (let i = 0; ; ) {\r\n      let replaced = false;\r\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\r\n        const mark = `@\\\\${i}`;\r\n        groups[i] = [mark, m];\r\n        i++;\r\n        replaced = true;\r\n        return mark;\r\n      });\r\n      if (!replaced) {\r\n        break;\r\n      }\r\n    }\r\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\r\n    for (let i = groups.length - 1; i >= 0; i--) {\r\n      const [mark] = groups[i];\r\n      for (let j = tokens.length - 1; j >= 0; j--) {\r\n        if (tokens[j].indexOf(mark) !== -1) {\r\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\r\n    return paramAssoc;\r\n  }\r\n  buildRegExp() {\r\n    let regexp = this.#root.buildRegExpStr();\r\n    if (regexp === \"\") {\r\n      return [/^$/, [], []];\r\n    }\r\n    let captureIndex = 0;\r\n    const indexReplacementMap = [];\r\n    const paramReplacementMap = [];\r\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\r\n      if (handlerIndex !== void 0) {\r\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\r\n        return \"$()\";\r\n      }\r\n      if (paramIndex !== void 0) {\r\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\r\n        return \"\";\r\n      }\r\n      return \"\";\r\n    });\r\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\r\n  }\r\n};\r\nexport {\r\n  Trie\r\n};\r\n", "// src/router/smart-router/index.ts\r\nimport { SmartRouter } from \"./router.js\";\r\nexport {\r\n  SmartRouter\r\n};\r\n", "// src/router/smart-router/router.ts\r\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\r\nvar SmartRouter = class {\r\n  name = \"SmartRouter\";\r\n  #routers = [];\r\n  #routes = [];\r\n  constructor(init) {\r\n    this.#routers = init.routers;\r\n  }\r\n  add(method, path, handler) {\r\n    if (!this.#routes) {\r\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\r\n    }\r\n    this.#routes.push([method, path, handler]);\r\n  }\r\n  match(method, path) {\r\n    if (!this.#routes) {\r\n      throw new Error(\"Fatal error\");\r\n    }\r\n    const routers = this.#routers;\r\n    const routes = this.#routes;\r\n    const len = routers.length;\r\n    let i = 0;\r\n    let res;\r\n    for (; i < len; i++) {\r\n      const router = routers[i];\r\n      try {\r\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\r\n          router.add(...routes[i2]);\r\n        }\r\n        res = router.match(method, path);\r\n      } catch (e) {\r\n        if (e instanceof UnsupportedPathError) {\r\n          continue;\r\n        }\r\n        throw e;\r\n      }\r\n      this.match = router.match.bind(router);\r\n      this.#routers = [router];\r\n      this.#routes = void 0;\r\n      break;\r\n    }\r\n    if (i === len) {\r\n      throw new Error(\"Fatal error\");\r\n    }\r\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\r\n    return res;\r\n  }\r\n  get activeRouter() {\r\n    if (this.#routes || this.#routers.length !== 1) {\r\n      throw new Error(\"No active router has been determined yet.\");\r\n    }\r\n    return this.#routers[0];\r\n  }\r\n};\r\nexport {\r\n  SmartRouter\r\n};\r\n", "// src/router/trie-router/index.ts\r\nimport { TrieRouter } from \"./router.js\";\r\nexport {\r\n  TrieRouter\r\n};\r\n", "// src/router/trie-router/router.ts\r\nimport { checkOptionalParameter } from \"../../utils/url.js\";\r\nimport { Node } from \"./node.js\";\r\nvar TrieRouter = class {\r\n  name = \"TrieRouter\";\r\n  #node;\r\n  constructor() {\r\n    this.#node = new Node();\r\n  }\r\n  add(method, path, handler) {\r\n    const results = checkOptionalParameter(path);\r\n    if (results) {\r\n      for (let i = 0, len = results.length; i < len; i++) {\r\n        this.#node.insert(method, results[i], handler);\r\n      }\r\n      return;\r\n    }\r\n    this.#node.insert(method, path, handler);\r\n  }\r\n  match(method, path) {\r\n    return this.#node.search(method, path);\r\n  }\r\n};\r\nexport {\r\n  TrieRouter\r\n};\r\n", "// src/router/trie-router/node.ts\r\nimport { METHOD_NAME_ALL } from \"../../router.js\";\r\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\r\nvar emptyParams = /* @__PURE__ */ Object.create(null);\r\nvar Node = class {\r\n  #methods;\r\n  #children;\r\n  #patterns;\r\n  #order = 0;\r\n  #params = emptyParams;\r\n  constructor(method, handler, children) {\r\n    this.#children = children || /* @__PURE__ */ Object.create(null);\r\n    this.#methods = [];\r\n    if (method && handler) {\r\n      const m = /* @__PURE__ */ Object.create(null);\r\n      m[method] = { handler, possibleKeys: [], score: 0 };\r\n      this.#methods = [m];\r\n    }\r\n    this.#patterns = [];\r\n  }\r\n  insert(method, path, handler) {\r\n    this.#order = ++this.#order;\r\n    let curNode = this;\r\n    const parts = splitRoutingPath(path);\r\n    const possibleKeys = [];\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n      const p = parts[i];\r\n      const nextP = parts[i + 1];\r\n      const pattern = getPattern(p, nextP);\r\n      const key = Array.isArray(pattern) ? pattern[0] : p;\r\n      if (key in curNode.#children) {\r\n        curNode = curNode.#children[key];\r\n        if (pattern) {\r\n          possibleKeys.push(pattern[1]);\r\n        }\r\n        continue;\r\n      }\r\n      curNode.#children[key] = new Node();\r\n      if (pattern) {\r\n        curNode.#patterns.push(pattern);\r\n        possibleKeys.push(pattern[1]);\r\n      }\r\n      curNode = curNode.#children[key];\r\n    }\r\n    curNode.#methods.push({\r\n      [method]: {\r\n        handler,\r\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\r\n        score: this.#order\r\n      }\r\n    });\r\n    return curNode;\r\n  }\r\n  #getHandlerSets(node, method, nodeParams, params) {\r\n    const handlerSets = [];\r\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\r\n      const m = node.#methods[i];\r\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\r\n      const processedSet = {};\r\n      if (handlerSet !== void 0) {\r\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\r\n        handlerSets.push(handlerSet);\r\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\r\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\r\n            const key = handlerSet.possibleKeys[i2];\r\n            const processed = processedSet[handlerSet.score];\r\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\r\n            processedSet[handlerSet.score] = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return handlerSets;\r\n  }\r\n  search(method, path) {\r\n    const handlerSets = [];\r\n    this.#params = emptyParams;\r\n    const curNode = this;\r\n    let curNodes = [curNode];\r\n    const parts = splitPath(path);\r\n    const curNodesQueue = [];\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n      const part = parts[i];\r\n      const isLast = i === len - 1;\r\n      const tempNodes = [];\r\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\r\n        const node = curNodes[j];\r\n        const nextNode = node.#children[part];\r\n        if (nextNode) {\r\n          nextNode.#params = node.#params;\r\n          if (isLast) {\r\n            if (nextNode.#children[\"*\"]) {\r\n              handlerSets.push(\r\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\r\n              );\r\n            }\r\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\r\n          } else {\r\n            tempNodes.push(nextNode);\r\n          }\r\n        }\r\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\r\n          const pattern = node.#patterns[k];\r\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\r\n          if (pattern === \"*\") {\r\n            const astNode = node.#children[\"*\"];\r\n            if (astNode) {\r\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\r\n              astNode.#params = params;\r\n              tempNodes.push(astNode);\r\n            }\r\n            continue;\r\n          }\r\n          if (!part) {\r\n            continue;\r\n          }\r\n          const [key, name, matcher] = pattern;\r\n          const child = node.#children[key];\r\n          const restPathString = parts.slice(i).join(\"/\");\r\n          if (matcher instanceof RegExp) {\r\n            const m = matcher.exec(restPathString);\r\n            if (m) {\r\n              params[name] = m[0];\r\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\r\n              if (Object.keys(child.#children).length) {\r\n                child.#params = params;\r\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\r\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\r\n                targetCurNodes.push(child);\r\n              }\r\n              continue;\r\n            }\r\n          }\r\n          if (matcher === true || matcher.test(part)) {\r\n            params[name] = part;\r\n            if (isLast) {\r\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\r\n              if (child.#children[\"*\"]) {\r\n                handlerSets.push(\r\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\r\n                );\r\n              }\r\n            } else {\r\n              child.#params = params;\r\n              tempNodes.push(child);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\r\n    }\r\n    if (handlerSets.length > 1) {\r\n      handlerSets.sort((a, b) => {\r\n        return a.score - b.score;\r\n      });\r\n    }\r\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\r\n  }\r\n};\r\nexport {\r\n  Node\r\n};\r\n", "import { Hono } from \"hono\";\r\nimport { decode, verify, sign } from \"hono/jwt\";\r\nimport { PrismaClient } from \"@prisma/client/edge\";\r\nimport { withAccelerate } from \"@prisma/extension-accelerate\";\r\nimport {\r\n  getCookie,\r\n  getSignedCookie,\r\n  setCookie,\r\n  setSignedCookie,\r\n  deleteCookie,\r\n} from \"hono/cookie\";\r\nexport const userRouter = new Hono<{\r\n  Bindings: {\r\n    DATABASE_URL: string;\r\n    SECRET: string;\r\n  };\r\n}>();\r\n\r\n// signup\r\nuserRouter.post(\"/signup\", async (c) => {\r\n  const prisma = new PrismaClient({\r\n    datasourceUrl: c.env.DATABASE_URL,\r\n  }).$extends(withAccelerate());\r\n\r\n  //  return c.text(\"hello\")\r\n\r\n  try {\r\n    console.log(\"hello\")\r\n    const body = await c.req.json();\r\n\r\n    // const body  = await c.req.parseBody();\r\n    if (!body || !body?.email || !body?.password || !body?.username) {\r\n      c.status(400);\r\n      return c.json({\r\n        error: \"All fields (email, password, name) are required.\",\r\n      });\r\n    }\r\n    console.log(body);\r\n    try {\r\n      const user = await prisma.user.create({\r\n        data: {\r\n          email: String(body.email),\r\n          username: String(body.username),\r\n          password: String(body.password),\r\n        },\r\n      });\r\n\r\n      const token = await sign({ id: user.id }, c.env.SECRET, \"HS256\");\r\n      setCookie(c, \"token\", token);\r\n      return c.json({ token: token, message: \"Signup Completed\" });\r\n      // return c.redirect('/');\r\n    } catch (E) {\r\n      c.status(401);\r\n      return c.json({ error: \"User Email Already exist\" });\r\n    }\r\n  } catch (E) {\r\n    return c.json({ error: \"Fill  All existing data\" });\r\n  }\r\n});\r\n\r\n// signin\r\nuserRouter.post(\"/signin\", async (c) => {\r\n  const prisma = new PrismaClient({\r\n    datasourceUrl: c.env.DATABASE_URL,\r\n  }).$extends(withAccelerate());\r\n\r\n  try {\r\n    interface User {\r\n      email: string;\r\n      password: string;\r\n    }\r\n    const body: User = await c.req.json();\r\n    console.log(body)\r\n    // const body  = await c.req.parseBody();\r\n\r\n    if (!body || !body?.email || !body?.password) {\r\n      c.status(400);\r\n      return c.json({\r\n        error: \"All fields (email, password) are required.\",\r\n      });\r\n    }\r\n\r\n    const user = await prisma.user.findFirst({\r\n      where: { email: String(body.email), password: String(body.password) },\r\n    });\r\n    if (!user?.id) {\r\n      c.status(403);\r\n      return c.json({ message: \"Email or Password not matched\" });\r\n    }\r\n    const token = await sign({ id: user.id, name: user.email }, c.env.SECRET);\r\n    setCookie(c, 'token', token, {\r\n      httpOnly: true,\r\n      path: '/',\r\n      maxAge: 1000 * 60 * 60 * 6,\r\n      sameSite: \"lax\"\r\n    });\r\n    return c.json({ id: user.id, token: token, message: \"signin completed\" });\r\n  } catch (e) {\r\n    return c.json({ message: \"File all the data\" });\r\n  }\r\n});\r\n", "// src/middleware/jwt/index.ts\r\nimport { jwt, verify, decode, sign } from \"./jwt.js\";\r\nexport {\r\n  decode,\r\n  jwt,\r\n  sign,\r\n  verify\r\n};\r\n", "// src/middleware/jwt/jwt.ts\r\nimport { getCookie, getSignedCookie } from \"../../helper/cookie/index.js\";\r\nimport { HTTPException } from \"../../http-exception.js\";\r\nimport { Jwt } from \"../../utils/jwt/index.js\";\r\nimport \"../../context.js\";\r\nvar jwt = (options) => {\r\n  if (!options || !options.secret) {\r\n    throw new Error('JWT auth middleware requires options for \"secret\"');\r\n  }\r\n  if (!crypto.subtle || !crypto.subtle.importKey) {\r\n    throw new Error(\"`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.\");\r\n  }\r\n  return async function jwt2(ctx, next) {\r\n    const headerName = options.headerName || \"Authorization\";\r\n    const credentials = ctx.req.raw.headers.get(headerName);\r\n    let token;\r\n    if (credentials) {\r\n      const parts = credentials.split(/\\s+/);\r\n      if (parts.length !== 2) {\r\n        const errDescription = \"invalid credentials structure\";\r\n        throw new HTTPException(401, {\r\n          message: errDescription,\r\n          res: unauthorizedResponse({\r\n            ctx,\r\n            error: \"invalid_request\",\r\n            errDescription\r\n          })\r\n        });\r\n      } else {\r\n        token = parts[1];\r\n      }\r\n    } else if (options.cookie) {\r\n      if (typeof options.cookie == \"string\") {\r\n        token = getCookie(ctx, options.cookie);\r\n      } else if (options.cookie.secret) {\r\n        if (options.cookie.prefixOptions) {\r\n          token = await getSignedCookie(\r\n            ctx,\r\n            options.cookie.secret,\r\n            options.cookie.key,\r\n            options.cookie.prefixOptions\r\n          );\r\n        } else {\r\n          token = await getSignedCookie(ctx, options.cookie.secret, options.cookie.key);\r\n        }\r\n      } else {\r\n        if (options.cookie.prefixOptions) {\r\n          token = getCookie(ctx, options.cookie.key, options.cookie.prefixOptions);\r\n        } else {\r\n          token = getCookie(ctx, options.cookie.key);\r\n        }\r\n      }\r\n    }\r\n    if (!token) {\r\n      const errDescription = \"no authorization included in request\";\r\n      throw new HTTPException(401, {\r\n        message: errDescription,\r\n        res: unauthorizedResponse({\r\n          ctx,\r\n          error: \"invalid_request\",\r\n          errDescription\r\n        })\r\n      });\r\n    }\r\n    let payload;\r\n    let cause;\r\n    try {\r\n      payload = await Jwt.verify(token, options.secret, options.alg);\r\n    } catch (e) {\r\n      cause = e;\r\n    }\r\n    if (!payload) {\r\n      throw new HTTPException(401, {\r\n        message: \"Unauthorized\",\r\n        res: unauthorizedResponse({\r\n          ctx,\r\n          error: \"invalid_token\",\r\n          statusText: \"Unauthorized\",\r\n          errDescription: \"token verification failure\"\r\n        }),\r\n        cause\r\n      });\r\n    }\r\n    ctx.set(\"jwtPayload\", payload);\r\n    await next();\r\n  };\r\n};\r\nfunction unauthorizedResponse(opts) {\r\n  return new Response(\"Unauthorized\", {\r\n    status: 401,\r\n    statusText: opts.statusText,\r\n    headers: {\r\n      \"WWW-Authenticate\": `Bearer realm=\"${opts.ctx.req.url}\",error=\"${opts.error}\",error_description=\"${opts.errDescription}\"`\r\n    }\r\n  });\r\n}\r\nvar verify = Jwt.verify;\r\nvar decode = Jwt.decode;\r\nvar sign = Jwt.sign;\r\nexport {\r\n  decode,\r\n  jwt,\r\n  sign,\r\n  verify\r\n};\r\n", "// src/helper/cookie/index.ts\r\nimport { parse, parseSigned, serialize, serializeSigned } from \"../../utils/cookie.js\";\r\nvar getCookie = (c, key, prefix) => {\r\n  const cookie = c.req.raw.headers.get(\"Cookie\");\r\n  if (typeof key === \"string\") {\r\n    if (!cookie) {\r\n      return void 0;\r\n    }\r\n    let finalKey = key;\r\n    if (prefix === \"secure\") {\r\n      finalKey = \"__Secure-\" + key;\r\n    } else if (prefix === \"host\") {\r\n      finalKey = \"__Host-\" + key;\r\n    }\r\n    const obj2 = parse(cookie, finalKey);\r\n    return obj2[finalKey];\r\n  }\r\n  if (!cookie) {\r\n    return {};\r\n  }\r\n  const obj = parse(cookie);\r\n  return obj;\r\n};\r\nvar getSignedCookie = async (c, secret, key, prefix) => {\r\n  const cookie = c.req.raw.headers.get(\"Cookie\");\r\n  if (typeof key === \"string\") {\r\n    if (!cookie) {\r\n      return void 0;\r\n    }\r\n    let finalKey = key;\r\n    if (prefix === \"secure\") {\r\n      finalKey = \"__Secure-\" + key;\r\n    } else if (prefix === \"host\") {\r\n      finalKey = \"__Host-\" + key;\r\n    }\r\n    const obj2 = await parseSigned(cookie, secret, finalKey);\r\n    return obj2[finalKey];\r\n  }\r\n  if (!cookie) {\r\n    return {};\r\n  }\r\n  const obj = await parseSigned(cookie, secret);\r\n  return obj;\r\n};\r\nvar setCookie = (c, name, value, opt) => {\r\n  let cookie;\r\n  if (opt?.prefix === \"secure\") {\r\n    cookie = serialize(\"__Secure-\" + name, value, { path: \"/\", ...opt, secure: true });\r\n  } else if (opt?.prefix === \"host\") {\r\n    cookie = serialize(\"__Host-\" + name, value, {\r\n      ...opt,\r\n      path: \"/\",\r\n      secure: true,\r\n      domain: void 0\r\n    });\r\n  } else {\r\n    cookie = serialize(name, value, { path: \"/\", ...opt });\r\n  }\r\n  c.header(\"Set-Cookie\", cookie, { append: true });\r\n};\r\nvar setSignedCookie = async (c, name, value, secret, opt) => {\r\n  let cookie;\r\n  if (opt?.prefix === \"secure\") {\r\n    cookie = await serializeSigned(\"__Secure-\" + name, value, secret, {\r\n      path: \"/\",\r\n      ...opt,\r\n      secure: true\r\n    });\r\n  } else if (opt?.prefix === \"host\") {\r\n    cookie = await serializeSigned(\"__Host-\" + name, value, secret, {\r\n      ...opt,\r\n      path: \"/\",\r\n      secure: true,\r\n      domain: void 0\r\n    });\r\n  } else {\r\n    cookie = await serializeSigned(name, value, secret, { path: \"/\", ...opt });\r\n  }\r\n  c.header(\"set-cookie\", cookie, { append: true });\r\n};\r\nvar deleteCookie = (c, name, opt) => {\r\n  const deletedCookie = getCookie(c, name, opt?.prefix);\r\n  setCookie(c, name, \"\", { ...opt, maxAge: 0 });\r\n  return deletedCookie;\r\n};\r\nexport {\r\n  deleteCookie,\r\n  getCookie,\r\n  getSignedCookie,\r\n  setCookie,\r\n  setSignedCookie\r\n};\r\n", "// src/utils/cookie.ts\r\nimport { decodeURIComponent_, tryDecode } from \"./url.js\";\r\nvar algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\r\nvar getCryptoKey = async (secret) => {\r\n  const secretBuf = typeof secret === \"string\" ? new TextEncoder().encode(secret) : secret;\r\n  return await crypto.subtle.importKey(\"raw\", secretBuf, algorithm, false, [\"sign\", \"verify\"]);\r\n};\r\nvar makeSignature = async (value, secret) => {\r\n  const key = await getCryptoKey(secret);\r\n  const signature = await crypto.subtle.sign(algorithm.name, key, new TextEncoder().encode(value));\r\n  return btoa(String.fromCharCode(...new Uint8Array(signature)));\r\n};\r\nvar verifySignature = async (base64Signature, value, secret) => {\r\n  try {\r\n    const signatureBinStr = atob(base64Signature);\r\n    const signature = new Uint8Array(signatureBinStr.length);\r\n    for (let i = 0, len = signatureBinStr.length; i < len; i++) {\r\n      signature[i] = signatureBinStr.charCodeAt(i);\r\n    }\r\n    return await crypto.subtle.verify(algorithm, secret, signature, new TextEncoder().encode(value));\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\nvar validCookieNameRegEx = /^[\\w!#$%&'*.^`|~+-]+$/;\r\nvar validCookieValueRegEx = /^[ !#-:<-[\\]-~]*$/;\r\nvar parse = (cookie, name) => {\r\n  if (name && cookie.indexOf(name) === -1) {\r\n    return {};\r\n  }\r\n  const pairs = cookie.trim().split(\";\");\r\n  const parsedCookie = {};\r\n  for (let pairStr of pairs) {\r\n    pairStr = pairStr.trim();\r\n    const valueStartPos = pairStr.indexOf(\"=\");\r\n    if (valueStartPos === -1) {\r\n      continue;\r\n    }\r\n    const cookieName = pairStr.substring(0, valueStartPos).trim();\r\n    if (name && name !== cookieName || !validCookieNameRegEx.test(cookieName)) {\r\n      continue;\r\n    }\r\n    let cookieValue = pairStr.substring(valueStartPos + 1).trim();\r\n    if (cookieValue.startsWith('\"') && cookieValue.endsWith('\"')) {\r\n      cookieValue = cookieValue.slice(1, -1);\r\n    }\r\n    if (validCookieValueRegEx.test(cookieValue)) {\r\n      parsedCookie[cookieName] = cookieValue.indexOf(\"%\") !== -1 ? tryDecode(cookieValue, decodeURIComponent_) : cookieValue;\r\n      if (name) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return parsedCookie;\r\n};\r\nvar parseSigned = async (cookie, secret, name) => {\r\n  const parsedCookie = {};\r\n  const secretKey = await getCryptoKey(secret);\r\n  for (const [key, value] of Object.entries(parse(cookie, name))) {\r\n    const signatureStartPos = value.lastIndexOf(\".\");\r\n    if (signatureStartPos < 1) {\r\n      continue;\r\n    }\r\n    const signedValue = value.substring(0, signatureStartPos);\r\n    const signature = value.substring(signatureStartPos + 1);\r\n    if (signature.length !== 44 || !signature.endsWith(\"=\")) {\r\n      continue;\r\n    }\r\n    const isVerified = await verifySignature(signature, signedValue, secretKey);\r\n    parsedCookie[key] = isVerified ? signedValue : false;\r\n  }\r\n  return parsedCookie;\r\n};\r\nvar _serialize = (name, value, opt = {}) => {\r\n  let cookie = `${name}=${value}`;\r\n  if (name.startsWith(\"__Secure-\") && !opt.secure) {\r\n    throw new Error(\"__Secure- Cookie must have Secure attributes\");\r\n  }\r\n  if (name.startsWith(\"__Host-\")) {\r\n    if (!opt.secure) {\r\n      throw new Error(\"__Host- Cookie must have Secure attributes\");\r\n    }\r\n    if (opt.path !== \"/\") {\r\n      throw new Error('__Host- Cookie must have Path attributes with \"/\"');\r\n    }\r\n    if (opt.domain) {\r\n      throw new Error(\"__Host- Cookie must not have Domain attributes\");\r\n    }\r\n  }\r\n  if (opt && typeof opt.maxAge === \"number\" && opt.maxAge >= 0) {\r\n    if (opt.maxAge > 3456e4) {\r\n      throw new Error(\r\n        \"Cookies Max-Age SHOULD NOT be greater than 400 days (34560000 seconds) in duration.\"\r\n      );\r\n    }\r\n    cookie += `; Max-Age=${opt.maxAge | 0}`;\r\n  }\r\n  if (opt.domain && opt.prefix !== \"host\") {\r\n    cookie += `; Domain=${opt.domain}`;\r\n  }\r\n  if (opt.path) {\r\n    cookie += `; Path=${opt.path}`;\r\n  }\r\n  if (opt.expires) {\r\n    if (opt.expires.getTime() - Date.now() > 3456e7) {\r\n      throw new Error(\r\n        \"Cookies Expires SHOULD NOT be greater than 400 days (34560000 seconds) in the future.\"\r\n      );\r\n    }\r\n    cookie += `; Expires=${opt.expires.toUTCString()}`;\r\n  }\r\n  if (opt.httpOnly) {\r\n    cookie += \"; HttpOnly\";\r\n  }\r\n  if (opt.secure) {\r\n    cookie += \"; Secure\";\r\n  }\r\n  if (opt.sameSite) {\r\n    cookie += `; SameSite=${opt.sameSite.charAt(0).toUpperCase() + opt.sameSite.slice(1)}`;\r\n  }\r\n  if (opt.priority) {\r\n    cookie += `; Priority=${opt.priority}`;\r\n  }\r\n  if (opt.partitioned) {\r\n    if (!opt.secure) {\r\n      throw new Error(\"Partitioned Cookie must have Secure attributes\");\r\n    }\r\n    cookie += \"; Partitioned\";\r\n  }\r\n  return cookie;\r\n};\r\nvar serialize = (name, value, opt) => {\r\n  value = encodeURIComponent(value);\r\n  return _serialize(name, value, opt);\r\n};\r\nvar serializeSigned = async (name, value, secret, opt = {}) => {\r\n  const signature = await makeSignature(value, secret);\r\n  value = `${value}.${signature}`;\r\n  value = encodeURIComponent(value);\r\n  return _serialize(name, value, opt);\r\n};\r\nexport {\r\n  parse,\r\n  parseSigned,\r\n  serialize,\r\n  serializeSigned\r\n};\r\n", "// src/http-exception.ts\r\nvar HTTPException = class extends Error {\r\n  res;\r\n  status;\r\n  constructor(status = 500, options) {\r\n    super(options?.message, { cause: options?.cause });\r\n    this.res = options?.res;\r\n    this.status = status;\r\n  }\r\n  getResponse() {\r\n    if (this.res) {\r\n      const newResponse = new Response(this.res.body, {\r\n        status: this.status,\r\n        headers: this.res.headers\r\n      });\r\n      return newResponse;\r\n    }\r\n    return new Response(this.message, {\r\n      status: this.status\r\n    });\r\n  }\r\n};\r\nexport {\r\n  HTTPException\r\n};\r\n", "// src/utils/jwt/index.ts\r\nimport { decode, sign, verify, verifyFromJwks } from \"./jwt.js\";\r\nvar Jwt = { sign, verify, decode, verifyFromJwks };\r\nexport {\r\n  Jwt\r\n};\r\n", "// src/utils/jwt/jwt.ts\r\nimport { decodeBase64Url, encodeBase64Url } from \"../../utils/encode.js\";\r\nimport { AlgorithmTypes } from \"./jwa.js\";\r\nimport { signing, verifying } from \"./jws.js\";\r\nimport {\r\n  JwtHeaderInvalid,\r\n  JwtHeaderRequiresKid,\r\n  JwtTokenExpired,\r\n  JwtTokenInvalid,\r\n  JwtTokenIssuedAt,\r\n  JwtTokenNotBefore,\r\n  JwtTokenSignatureMismatched\r\n} from \"./types.js\";\r\nimport { utf8Decoder, utf8Encoder } from \"./utf8.js\";\r\nvar encodeJwtPart = (part) => encodeBase64Url(utf8Encoder.encode(JSON.stringify(part)).buffer).replace(/=/g, \"\");\r\nvar encodeSignaturePart = (buf) => encodeBase64Url(buf).replace(/=/g, \"\");\r\nvar decodeJwtPart = (part) => JSON.parse(utf8Decoder.decode(decodeBase64Url(part)));\r\nfunction isTokenHeader(obj) {\r\n  if (typeof obj === \"object\" && obj !== null) {\r\n    const objWithAlg = obj;\r\n    return \"alg\" in objWithAlg && Object.values(AlgorithmTypes).includes(objWithAlg.alg) && (!(\"typ\" in objWithAlg) || objWithAlg.typ === \"JWT\");\r\n  }\r\n  return false;\r\n}\r\nvar sign = async (payload, privateKey, alg = \"HS256\") => {\r\n  const encodedPayload = encodeJwtPart(payload);\r\n  let encodedHeader;\r\n  if (typeof privateKey === \"object\" && \"alg\" in privateKey) {\r\n    alg = privateKey.alg;\r\n    encodedHeader = encodeJwtPart({ alg, typ: \"JWT\", kid: privateKey.kid });\r\n  } else {\r\n    encodedHeader = encodeJwtPart({ alg, typ: \"JWT\" });\r\n  }\r\n  const partialToken = `${encodedHeader}.${encodedPayload}`;\r\n  const signaturePart = await signing(privateKey, alg, utf8Encoder.encode(partialToken));\r\n  const signature = encodeSignaturePart(signaturePart);\r\n  return `${partialToken}.${signature}`;\r\n};\r\nvar verify = async (token, publicKey, alg = \"HS256\") => {\r\n  const tokenParts = token.split(\".\");\r\n  if (tokenParts.length !== 3) {\r\n    throw new JwtTokenInvalid(token);\r\n  }\r\n  const { header, payload } = decode(token);\r\n  if (!isTokenHeader(header)) {\r\n    throw new JwtHeaderInvalid(header);\r\n  }\r\n  const now = Date.now() / 1e3 | 0;\r\n  if (payload.nbf && payload.nbf > now) {\r\n    throw new JwtTokenNotBefore(token);\r\n  }\r\n  if (payload.exp && payload.exp <= now) {\r\n    throw new JwtTokenExpired(token);\r\n  }\r\n  if (payload.iat && now < payload.iat) {\r\n    throw new JwtTokenIssuedAt(now, payload.iat);\r\n  }\r\n  const headerPayload = token.substring(0, token.lastIndexOf(\".\"));\r\n  const verified = await verifying(\r\n    publicKey,\r\n    alg,\r\n    decodeBase64Url(tokenParts[2]),\r\n    utf8Encoder.encode(headerPayload)\r\n  );\r\n  if (!verified) {\r\n    throw new JwtTokenSignatureMismatched(token);\r\n  }\r\n  return payload;\r\n};\r\nvar verifyFromJwks = async (token, options, init) => {\r\n  const header = decodeHeader(token);\r\n  if (!isTokenHeader(header)) {\r\n    throw new JwtHeaderInvalid(header);\r\n  }\r\n  if (!header.kid) {\r\n    throw new JwtHeaderRequiresKid(header);\r\n  }\r\n  if (options.jwks_uri) {\r\n    const response = await fetch(options.jwks_uri, init);\r\n    if (!response.ok) {\r\n      throw new Error(`failed to fetch JWKS from ${options.jwks_uri}`);\r\n    }\r\n    const data = await response.json();\r\n    if (!data.keys) {\r\n      throw new Error('invalid JWKS response. \"keys\" field is missing');\r\n    }\r\n    if (!Array.isArray(data.keys)) {\r\n      throw new Error('invalid JWKS response. \"keys\" field is not an array');\r\n    }\r\n    if (options.keys) {\r\n      options.keys.push(...data.keys);\r\n    } else {\r\n      options.keys = data.keys;\r\n    }\r\n  } else if (!options.keys) {\r\n    throw new Error('verifyFromJwks requires options for either \"keys\" or \"jwks_uri\" or both');\r\n  }\r\n  const matchingKey = options.keys.find((key) => key.kid === header.kid);\r\n  if (!matchingKey) {\r\n    throw new JwtTokenInvalid(token);\r\n  }\r\n  return await verify(token, matchingKey, matchingKey.alg || header.alg);\r\n};\r\nvar decode = (token) => {\r\n  try {\r\n    const [h, p] = token.split(\".\");\r\n    const header = decodeJwtPart(h);\r\n    const payload = decodeJwtPart(p);\r\n    return {\r\n      header,\r\n      payload\r\n    };\r\n  } catch {\r\n    throw new JwtTokenInvalid(token);\r\n  }\r\n};\r\nvar decodeHeader = (token) => {\r\n  try {\r\n    const [h] = token.split(\".\");\r\n    return decodeJwtPart(h);\r\n  } catch {\r\n    throw new JwtTokenInvalid(token);\r\n  }\r\n};\r\nexport {\r\n  decode,\r\n  decodeHeader,\r\n  isTokenHeader,\r\n  sign,\r\n  verify,\r\n  verifyFromJwks\r\n};\r\n", "// src/utils/encode.ts\r\nvar decodeBase64Url = (str) => {\r\n  return decodeBase64(str.replace(/_|-/g, (m) => ({ _: \"/\", \"-\": \"+\" })[m] ?? m));\r\n};\r\nvar encodeBase64Url = (buf) => encodeBase64(buf).replace(/\\/|\\+/g, (m) => ({ \"/\": \"_\", \"+\": \"-\" })[m] ?? m);\r\nvar encodeBase64 = (buf) => {\r\n  let binary = \"\";\r\n  const bytes = new Uint8Array(buf);\r\n  for (let i = 0, len = bytes.length; i < len; i++) {\r\n    binary += String.fromCharCode(bytes[i]);\r\n  }\r\n  return btoa(binary);\r\n};\r\nvar decodeBase64 = (str) => {\r\n  const binary = atob(str);\r\n  const bytes = new Uint8Array(new ArrayBuffer(binary.length));\r\n  const half = binary.length / 2;\r\n  for (let i = 0, j = binary.length - 1; i <= half; i++, j--) {\r\n    bytes[i] = binary.charCodeAt(i);\r\n    bytes[j] = binary.charCodeAt(j);\r\n  }\r\n  return bytes;\r\n};\r\nexport {\r\n  decodeBase64,\r\n  decodeBase64Url,\r\n  encodeBase64,\r\n  encodeBase64Url\r\n};\r\n", "// src/utils/jwt/jwa.ts\r\nvar AlgorithmTypes = /* @__PURE__ */ ((AlgorithmTypes2) => {\r\n  AlgorithmTypes2[\"HS256\"] = \"HS256\";\r\n  AlgorithmTypes2[\"HS384\"] = \"HS384\";\r\n  AlgorithmTypes2[\"HS512\"] = \"HS512\";\r\n  AlgorithmTypes2[\"RS256\"] = \"RS256\";\r\n  AlgorithmTypes2[\"RS384\"] = \"RS384\";\r\n  AlgorithmTypes2[\"RS512\"] = \"RS512\";\r\n  AlgorithmTypes2[\"PS256\"] = \"PS256\";\r\n  AlgorithmTypes2[\"PS384\"] = \"PS384\";\r\n  AlgorithmTypes2[\"PS512\"] = \"PS512\";\r\n  AlgorithmTypes2[\"ES256\"] = \"ES256\";\r\n  AlgorithmTypes2[\"ES384\"] = \"ES384\";\r\n  AlgorithmTypes2[\"ES512\"] = \"ES512\";\r\n  AlgorithmTypes2[\"EdDSA\"] = \"EdDSA\";\r\n  return AlgorithmTypes2;\r\n})(AlgorithmTypes || {});\r\nexport {\r\n  AlgorithmTypes\r\n};\r\n", "// src/utils/jwt/jws.ts\r\nimport { getRuntimeKey } from \"../../helper/adapter/index.js\";\r\nimport { decodeBase64 } from \"../encode.js\";\r\nimport { CryptoKeyUsage, JwtAlgorithmNotImplemented } from \"./types.js\";\r\nimport { utf8Encoder } from \"./utf8.js\";\r\nasync function signing(privateKey, alg, data) {\r\n  const algorithm = getKeyAlgorithm(alg);\r\n  const cryptoKey = await importPrivateKey(privateKey, algorithm);\r\n  return await crypto.subtle.sign(algorithm, cryptoKey, data);\r\n}\r\nasync function verifying(publicKey, alg, signature, data) {\r\n  const algorithm = getKeyAlgorithm(alg);\r\n  const cryptoKey = await importPublicKey(publicKey, algorithm);\r\n  return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\r\n}\r\nfunction pemToBinary(pem) {\r\n  return decodeBase64(pem.replace(/-+(BEGIN|END).*/g, \"\").replace(/\\s/g, \"\"));\r\n}\r\nasync function importPrivateKey(key, alg) {\r\n  if (!crypto.subtle || !crypto.subtle.importKey) {\r\n    throw new Error(\"`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.\");\r\n  }\r\n  if (isCryptoKey(key)) {\r\n    if (key.type !== \"private\" && key.type !== \"secret\") {\r\n      throw new Error(\r\n        `unexpected key type: CryptoKey.type is ${key.type}, expected private or secret`\r\n      );\r\n    }\r\n    return key;\r\n  }\r\n  const usages = [CryptoKeyUsage.Sign];\r\n  if (typeof key === \"object\") {\r\n    return await crypto.subtle.importKey(\"jwk\", key, alg, false, usages);\r\n  }\r\n  if (key.includes(\"PRIVATE\")) {\r\n    return await crypto.subtle.importKey(\"pkcs8\", pemToBinary(key), alg, false, usages);\r\n  }\r\n  return await crypto.subtle.importKey(\"raw\", utf8Encoder.encode(key), alg, false, usages);\r\n}\r\nasync function importPublicKey(key, alg) {\r\n  if (!crypto.subtle || !crypto.subtle.importKey) {\r\n    throw new Error(\"`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.\");\r\n  }\r\n  if (isCryptoKey(key)) {\r\n    if (key.type === \"public\" || key.type === \"secret\") {\r\n      return key;\r\n    }\r\n    key = await exportPublicJwkFrom(key);\r\n  }\r\n  if (typeof key === \"string\" && key.includes(\"PRIVATE\")) {\r\n    const privateKey = await crypto.subtle.importKey(\"pkcs8\", pemToBinary(key), alg, true, [\r\n      CryptoKeyUsage.Sign\r\n    ]);\r\n    key = await exportPublicJwkFrom(privateKey);\r\n  }\r\n  const usages = [CryptoKeyUsage.Verify];\r\n  if (typeof key === \"object\") {\r\n    return await crypto.subtle.importKey(\"jwk\", key, alg, false, usages);\r\n  }\r\n  if (key.includes(\"PUBLIC\")) {\r\n    return await crypto.subtle.importKey(\"spki\", pemToBinary(key), alg, false, usages);\r\n  }\r\n  return await crypto.subtle.importKey(\"raw\", utf8Encoder.encode(key), alg, false, usages);\r\n}\r\nasync function exportPublicJwkFrom(privateKey) {\r\n  if (privateKey.type !== \"private\") {\r\n    throw new Error(`unexpected key type: ${privateKey.type}`);\r\n  }\r\n  if (!privateKey.extractable) {\r\n    throw new Error(\"unexpected private key is unextractable\");\r\n  }\r\n  const jwk = await crypto.subtle.exportKey(\"jwk\", privateKey);\r\n  const { kty } = jwk;\r\n  const { alg, e, n } = jwk;\r\n  const { crv, x, y } = jwk;\r\n  return { kty, alg, e, n, crv, x, y, key_ops: [CryptoKeyUsage.Verify] };\r\n}\r\nfunction getKeyAlgorithm(name) {\r\n  switch (name) {\r\n    case \"HS256\":\r\n      return {\r\n        name: \"HMAC\",\r\n        hash: {\r\n          name: \"SHA-256\"\r\n        }\r\n      };\r\n    case \"HS384\":\r\n      return {\r\n        name: \"HMAC\",\r\n        hash: {\r\n          name: \"SHA-384\"\r\n        }\r\n      };\r\n    case \"HS512\":\r\n      return {\r\n        name: \"HMAC\",\r\n        hash: {\r\n          name: \"SHA-512\"\r\n        }\r\n      };\r\n    case \"RS256\":\r\n      return {\r\n        name: \"RSASSA-PKCS1-v1_5\",\r\n        hash: {\r\n          name: \"SHA-256\"\r\n        }\r\n      };\r\n    case \"RS384\":\r\n      return {\r\n        name: \"RSASSA-PKCS1-v1_5\",\r\n        hash: {\r\n          name: \"SHA-384\"\r\n        }\r\n      };\r\n    case \"RS512\":\r\n      return {\r\n        name: \"RSASSA-PKCS1-v1_5\",\r\n        hash: {\r\n          name: \"SHA-512\"\r\n        }\r\n      };\r\n    case \"PS256\":\r\n      return {\r\n        name: \"RSA-PSS\",\r\n        hash: {\r\n          name: \"SHA-256\"\r\n        },\r\n        saltLength: 32\r\n      };\r\n    case \"PS384\":\r\n      return {\r\n        name: \"RSA-PSS\",\r\n        hash: {\r\n          name: \"SHA-384\"\r\n        },\r\n        saltLength: 48\r\n      };\r\n    case \"PS512\":\r\n      return {\r\n        name: \"RSA-PSS\",\r\n        hash: {\r\n          name: \"SHA-512\"\r\n        },\r\n        saltLength: 64\r\n      };\r\n    case \"ES256\":\r\n      return {\r\n        name: \"ECDSA\",\r\n        hash: {\r\n          name: \"SHA-256\"\r\n        },\r\n        namedCurve: \"P-256\"\r\n      };\r\n    case \"ES384\":\r\n      return {\r\n        name: \"ECDSA\",\r\n        hash: {\r\n          name: \"SHA-384\"\r\n        },\r\n        namedCurve: \"P-384\"\r\n      };\r\n    case \"ES512\":\r\n      return {\r\n        name: \"ECDSA\",\r\n        hash: {\r\n          name: \"SHA-512\"\r\n        },\r\n        namedCurve: \"P-521\"\r\n      };\r\n    case \"EdDSA\":\r\n      return {\r\n        name: \"Ed25519\",\r\n        namedCurve: \"Ed25519\"\r\n      };\r\n    default:\r\n      throw new JwtAlgorithmNotImplemented(name);\r\n  }\r\n}\r\nfunction isCryptoKey(key) {\r\n  const runtime = getRuntimeKey();\r\n  if (runtime === \"node\" && !!crypto.webcrypto) {\r\n    return key instanceof crypto.webcrypto.CryptoKey;\r\n  }\r\n  return key instanceof CryptoKey;\r\n}\r\nexport {\r\n  signing,\r\n  verifying\r\n};\r\n", "// src/helper/adapter/index.ts\r\nvar env = (c, runtime) => {\r\n  const global = globalThis;\r\n  const globalEnv = global?.process?.env;\r\n  runtime ??= getRuntimeKey();\r\n  const runtimeEnvHandlers = {\r\n    bun: () => globalEnv,\r\n    node: () => globalEnv,\r\n    \"edge-light\": () => globalEnv,\r\n    deno: () => {\r\n      return Deno.env.toObject();\r\n    },\r\n    workerd: () => c.env,\r\n    fastly: () => ({}),\r\n    other: () => ({})\r\n  };\r\n  return runtimeEnvHandlers[runtime]();\r\n};\r\nvar knownUserAgents = {\r\n  deno: \"Deno\",\r\n  bun: \"Bun\",\r\n  workerd: \"Cloudflare-Workers\",\r\n  node: \"Node.js\"\r\n};\r\nvar getRuntimeKey = () => {\r\n  const global = globalThis;\r\n  const userAgentSupported = typeof navigator !== \"undefined\" && typeof navigator.userAgent === \"string\";\r\n  if (userAgentSupported) {\r\n    for (const [runtimeKey, userAgent] of Object.entries(knownUserAgents)) {\r\n      if (checkUserAgentEquals(userAgent)) {\r\n        return runtimeKey;\r\n      }\r\n    }\r\n  }\r\n  if (typeof global?.EdgeRuntime === \"string\") {\r\n    return \"edge-light\";\r\n  }\r\n  if (global?.fastly !== void 0) {\r\n    return \"fastly\";\r\n  }\r\n  if (global?.process?.release?.name === \"node\") {\r\n    return \"node\";\r\n  }\r\n  return \"other\";\r\n};\r\nvar checkUserAgentEquals = (platform) => {\r\n  const userAgent = navigator.userAgent;\r\n  return userAgent.startsWith(platform);\r\n};\r\nexport {\r\n  checkUserAgentEquals,\r\n  env,\r\n  getRuntimeKey,\r\n  knownUserAgents\r\n};\r\n", "// src/utils/jwt/types.ts\r\nvar JwtAlgorithmNotImplemented = class extends Error {\r\n  constructor(alg) {\r\n    super(`${alg} is not an implemented algorithm`);\r\n    this.name = \"JwtAlgorithmNotImplemented\";\r\n  }\r\n};\r\nvar JwtTokenInvalid = class extends Error {\r\n  constructor(token) {\r\n    super(`invalid JWT token: ${token}`);\r\n    this.name = \"JwtTokenInvalid\";\r\n  }\r\n};\r\nvar JwtTokenNotBefore = class extends Error {\r\n  constructor(token) {\r\n    super(`token (${token}) is being used before it's valid`);\r\n    this.name = \"JwtTokenNotBefore\";\r\n  }\r\n};\r\nvar JwtTokenExpired = class extends Error {\r\n  constructor(token) {\r\n    super(`token (${token}) expired`);\r\n    this.name = \"JwtTokenExpired\";\r\n  }\r\n};\r\nvar JwtTokenIssuedAt = class extends Error {\r\n  constructor(currentTimestamp, iat) {\r\n    super(\r\n      `Invalid \"iat\" claim, must be a valid number lower than \"${currentTimestamp}\" (iat: \"${iat}\")`\r\n    );\r\n    this.name = \"JwtTokenIssuedAt\";\r\n  }\r\n};\r\nvar JwtHeaderInvalid = class extends Error {\r\n  constructor(header) {\r\n    super(`jwt header is invalid: ${JSON.stringify(header)}`);\r\n    this.name = \"JwtHeaderInvalid\";\r\n  }\r\n};\r\nvar JwtHeaderRequiresKid = class extends Error {\r\n  constructor(header) {\r\n    super(`required \"kid\" in jwt header: ${JSON.stringify(header)}`);\r\n    this.name = \"JwtHeaderRequiresKid\";\r\n  }\r\n};\r\nvar JwtTokenSignatureMismatched = class extends Error {\r\n  constructor(token) {\r\n    super(`token(${token}) signature mismatched`);\r\n    this.name = \"JwtTokenSignatureMismatched\";\r\n  }\r\n};\r\nvar CryptoKeyUsage = /* @__PURE__ */ ((CryptoKeyUsage2) => {\r\n  CryptoKeyUsage2[\"Encrypt\"] = \"encrypt\";\r\n  CryptoKeyUsage2[\"Decrypt\"] = \"decrypt\";\r\n  CryptoKeyUsage2[\"Sign\"] = \"sign\";\r\n  CryptoKeyUsage2[\"Verify\"] = \"verify\";\r\n  CryptoKeyUsage2[\"DeriveKey\"] = \"deriveKey\";\r\n  CryptoKeyUsage2[\"DeriveBits\"] = \"deriveBits\";\r\n  CryptoKeyUsage2[\"WrapKey\"] = \"wrapKey\";\r\n  CryptoKeyUsage2[\"UnwrapKey\"] = \"unwrapKey\";\r\n  return CryptoKeyUsage2;\r\n})(CryptoKeyUsage || {});\r\nexport {\r\n  CryptoKeyUsage,\r\n  JwtAlgorithmNotImplemented,\r\n  JwtHeaderInvalid,\r\n  JwtHeaderRequiresKid,\r\n  JwtTokenExpired,\r\n  JwtTokenInvalid,\r\n  JwtTokenIssuedAt,\r\n  JwtTokenNotBefore,\r\n  JwtTokenSignatureMismatched\r\n};\r\n", "// src/utils/jwt/utf8.ts\r\nvar utf8Encoder = new TextEncoder();\r\nvar utf8Decoder = new TextDecoder();\r\nexport {\r\n  utf8Decoder,\r\n  utf8Encoder\r\n};\r\n", "import l from\"@prisma/client/scripts/default-index.js\";function f(a,n){let[c=0,u=0,m=0]=a.split(\".\").map(Number),[o=0,h=0,i=0]=n.split(\".\").map(Number),r=o-c,e=h-u,t=i-m;return r||e||t}import w from\"@prisma/client/scripts/default-index.js\";function p(){let a=w.Prisma.prismaVersion;return[F(),`PrismaEngine/${a.engine}`,`PrismaClient/${a.client}`].join(\" \")}function F(){return typeof navigator<\"u\"?navigator.userAgent:typeof process<\"u\"&&typeof process.versions<\"u\"?`Node/${process.versions.node} (${process.platform}; ${process.arch})`:\"EdgeRuntime\"in globalThis?\"Vercel-Edge-Runtime\":\"UnknownRuntime\"}var P=\"@prisma/extension-accelerate\",x=\"Unable to connect to the Accelerate API. This may be due to a network or DNS issue. Please check your connection and the Accelerate connection string. For details, visit https://www.prisma.io/docs/accelerate/troubleshoot.\";function b(a){let n=p(),c;return async u=>{let{args:m}=u,{cacheStrategy:o,__accelerateInfo:h=!1,...i}=m,r=null,{__internalParams:e,query:t}=u;return e.customDataProxyFetch=()=>async(s,d)=>{let A=new Array;typeof o?.ttl==\"number\"&&A.push(`max-age=${o.ttl}`),typeof o?.swr==\"number\"&&A.push(`stale-while-revalidate=${o.swr}`);let y=o?.tags?.join(\",\")??\"\";d.headers={...d.headers,\"cache-control\":A.length>0?A.join(\",\"):\"no-cache\",\"user-agent\":n,...y.length>0?{\"accelerate-cache-tags\":y}:{}},c&&(d.headers[\"accelerate-query-engine-jwt\"]=c);try{let g=await a(s,d);return r={cacheStatus:g.headers.get(\"accelerate-cache-status\"),lastModified:new Date(g.headers.get(\"last-modified\")??\"\"),region:g.headers.get(\"cf-ray\")?.split(\"-\")[1]??\"unspecified\",requestId:g.headers.get(\"cf-ray\")??\"unspecified\",signature:g.headers.get(\"accelerate-signature\")??\"unspecified\"},c=g.headers.get(\"accelerate-query-engine-jwt\")??void 0,g}catch{throw new Error(x)}},h?{data:await t(i,e),info:r}:t(i,e)}}function T(a){let n=f(\"5.1.0\",l.Prisma.prismaVersion.client)>=0;return l.Prisma.defineExtension(c=>{let{apiKeyPromise:u,baseURL:m}=S(c),o=b(a);async function h(r){let e=await u;if(!e)return{requestId:\"unspecified\"};let t;try{t=await a(new URL(\"/invalidate\",m).href,{method:\"POST\",headers:{authorization:`Bearer ${e}`,\"content-type\":\"application/json\"},body:JSON.stringify(r)})}catch{throw new Error(x)}if(!t?.ok){let s=await t.text();throw new Error(`Failed to invalidate Accelerate cache. Response was ${t.status} ${t.statusText}. ${s}`)}return t.body?.cancel(),{requestId:t.headers.get(\"cf-ray\")??\"unspecified\"}}let i=c.$extends({name:P,query:{$allModels:{$allOperations:o}}});return i.$extends({name:P,client:{$accelerate:{invalidate:r=>h(r),invalidateAll:()=>h({tags:\"all\"})}},model:{$allModels:{aggregate(r){let e=l.Prisma.getExtensionContext(this),t=n?e.$parent[e.$name]:i[e.name],s=t.aggregate(r);return Object.assign(s,{withAccelerateInfo(){return t.aggregate({...r,__accelerateInfo:!0})}})},count(r){let e=l.Prisma.getExtensionContext(this),t=n?e.$parent[e.$name]:i[e.name],s=t.count(r);return Object.assign(s,{withAccelerateInfo(){return t.count({...r,__accelerateInfo:!0})}})},findFirst(r){let e=l.Prisma.getExtensionContext(this),t=n?e.$parent[e.$name]:i[e.name],s=t.findFirst(r);return Object.assign(s,{withAccelerateInfo(){return t.findFirst({...r,__accelerateInfo:!0})}})},findFirstOrThrow(r){let e=l.Prisma.getExtensionContext(this),t=n?e.$parent[e.$name]:i[e.name],s=t.findFirstOrThrow(r);return Object.assign(s,{withAccelerateInfo(){return t.findFirstOrThrow({...r,__accelerateInfo:!0})}})},findMany(r){let e=l.Prisma.getExtensionContext(this),t=n?e.$parent[e.$name]:i[e.name],s=t.findMany(r);return Object.assign(s,{withAccelerateInfo(){return t.findMany({...r,__accelerateInfo:!0})}})},findUnique(r){let e=l.Prisma.getExtensionContext(this),t=n?e.$parent[e.$name]:i[e.name],s=t.findUnique(r);return Object.assign(s,{withAccelerateInfo(){return t.findUnique({...r,__accelerateInfo:!0})}})},findUniqueOrThrow(r){let e=l.Prisma.getExtensionContext(this),t=n?e.$parent[e.$name]:i[e.name],s=t.findUniqueOrThrow(r);return Object.assign(s,{withAccelerateInfo(){return t.findUniqueOrThrow({...r,__accelerateInfo:!0})}})},groupBy(r){let e=l.Prisma.getExtensionContext(this),t=n?e.$parent[e.$name]:i[e.name],s=t.groupBy(r);return Object.assign(s,{withAccelerateInfo(){return t.groupBy({...r,__accelerateInfo:!0})}})}}}})})}function S(a){let n=Reflect.get(a,\"_accelerateEngineConfig\");try{let{host:c,hostname:u,protocol:m,searchParams:o}=new URL(n?.accelerateUtils?.resolveDatasourceUrl?.(n));if(m===\"prisma+postgres:\"&&(u===\"localhost\"||u===\"127.0.0.1\"))return{apiKeyPromise:Promise.resolve(o.get(\"api_key\")),baseURL:new URL(`http://${c}`)}}catch{}return{apiKeyPromise:a._engine.start().then(()=>a._engine.apiKey?.()??null),baseURL:new URL(\"https://accelerate.prisma-data.net\")}}function k(a){let n=a?.fetch??fetch;return T(n)}export{x as FETCH_FAILURE_MESSAGE,T as makeAccelerateExtension,k as withAccelerate};\r\n", "import { PrismaClient } from \"@prisma/client/edge\";\r\nimport { withAccelerate } from \"@prisma/extension-accelerate\";\r\nimport { Hono } from \"hono\";\r\nimport { verify } from \"hono/jwt\";\r\nimport { getCookie } from \"hono/cookie\";\r\nexport const blogRouter = new Hono<{\r\n  Bindings: {\r\n    DATABASE_URL: string;\r\n    SECRET: string;\r\n  };\r\n  Variables: {\r\n    userId: number;\r\n  };\r\n}>();\r\n\r\n\r\n\r\n// bulk blog\r\n// Todo : add pagination\r\nblogRouter.get('/bulk', async (c) => {\r\n  const prisma = new PrismaClient({\r\n    datasourceUrl: c.env.DATABASE_URL,\r\n  }).$extends(withAccelerate());\r\n  try {\r\n    // const token = getCookie(c, \"token\");\r\n    // console.log('\uD83E\uDDC1 Received Cookie Token:', token);\r\n    const blogs = await prisma.blog.findMany({\r\n      select: {\r\n        id: true,\r\n        title: true,\r\n        content: true,\r\n        published: true,\r\n        author: {\r\n          select: {\r\n            username: true\r\n          }\r\n        }\r\n      }\r\n    });\r\n    // console.log(blogs);\r\n    if (blogs.length > 0) {\r\n      c.json(200);\r\n      return c.json({ success: true, blog: blogs })\r\n    }\r\n  } catch (e) {\r\n    c.json(500);\r\n    return c.json({ success: false, message: 'server side error' })\r\n  }\r\n})\r\n\r\n// get a blog based on any id\r\nblogRouter.get(\"/:id\", async (c) => {\r\n  const prisma = new PrismaClient({\r\n    datasourceUrl: c.env.DATABASE_URL,\r\n  }).$extends(withAccelerate());\r\n  try {\r\n    const param = c.req.param();\r\n    const blog = await prisma.blog.findFirst({\r\n      where: {\r\n        id: parseInt(param.id), //Blog Id\r\n      },\r\n      select: {\r\n        id: true,\r\n        title: true,\r\n        content: true,\r\n        published: true,\r\n        author: {\r\n          select: {\r\n            username: true\r\n          }\r\n        }\r\n      }\r\n    });\r\n    if (blog) {\r\n      c.status(200);\r\n      return c.json({ blog: blog, message: \"Blog Showing with given id\" });\r\n    } else {\r\n      c.status(200);\r\n      return c.json({ blog: blog });\r\n    }\r\n  } catch (e) {\r\n    return c.json({ message: \"Error \" });\r\n  }\r\n});\r\n\r\n\r\n\r\nblogRouter.use(\"/*\", async (c, next) => {\r\n\r\n  try {\r\n    console.log(\"hello\")\r\n    const token = await c.req.header(\"authorization\") || \"\";\r\n\r\n    if (!token) {\r\n      c.status(401);\r\n      return c.json({ status: false, message: \"Invalid token\" });\r\n    }\r\n    const decode = await verify(token, c.env.SECRET);\r\n    console.log(\"Debug Output:\", decode);\r\n    c.set(\"userId\", Number(decode.id));\r\n    console.log(\"userId : \", c.get(\"userId\"));\r\n    await next();\r\n  } catch (err) {\r\n    c.status(401);\r\n    return c.json({ status: false, message: \"Invalid token\" });\r\n  }\r\n});\r\n\r\n// add Blog\r\nblogRouter.post(\"/\", async (c) => {\r\n  const prisma = new PrismaClient({\r\n    datasourceUrl: c.env.DATABASE_URL,\r\n  }).$extends(withAccelerate());\r\n  const body = await c.req.json();\r\n  console.log(\"hello\", body);\r\n\r\n  if (!body || !body?.title || !body.content) {\r\n    c.status(403)\r\n    return c.json({ success: false, message: \"Invalid Body!\" });\r\n  }\r\n  // const body = await c.req.parseBody();\r\n  try {\r\n    const blog = await prisma.blog.create({\r\n      data: {\r\n        title: String(body.title),\r\n        content: String(body.content),\r\n        published: Boolean(body.published),\r\n        authorId: c.get(\"userId\"),\r\n      },\r\n    });\r\n\r\n    return c.json({ success: true, id: blog.id, message: \"Blog Added\" });\r\n  } catch (e) {\r\n    c.status(500);\r\n    return c.json({ success: false, message: \"Blog Not added\" });\r\n  }\r\n});\r\n\r\n// update blog by id\r\nblogRouter.put(\"/\", async (c) => {\r\n  const prisma = new PrismaClient({\r\n    datasourceUrl: c.env.DATABASE_URL,\r\n  }).$extends(withAccelerate());\r\n  try {\r\n    const body = await c.req.json();\r\n\r\n    const blog = await prisma.blog.update({\r\n      where: {\r\n        id: body.id, //  Blog Id\r\n        authorId: c.get(\"userId\"), //  Only allow user to update their own blog\r\n      },\r\n      data: {\r\n        title: body.title,\r\n        content: body.content,\r\n        published: body.published,\r\n      },\r\n    });\r\n    c.status(200);\r\n    return c.json({ blog: blog, message: \"Blog Updated Succesfully\" });\r\n  } catch (e) {\r\n    return c.json({ message: \"Your are not valid author\" });\r\n  }\r\n});\r\n\r\n\r\n", "// src/middleware/cors/index.ts\r\nvar cors = (options) => {\r\n  const defaults = {\r\n    origin: \"*\",\r\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\r\n    allowHeaders: [],\r\n    exposeHeaders: []\r\n  };\r\n  const opts = {\r\n    ...defaults,\r\n    ...options\r\n  };\r\n  const findAllowOrigin = ((optsOrigin) => {\r\n    if (typeof optsOrigin === \"string\") {\r\n      if (optsOrigin === \"*\") {\r\n        return () => optsOrigin;\r\n      } else {\r\n        return (origin) => optsOrigin === origin ? origin : null;\r\n      }\r\n    } else if (typeof optsOrigin === \"function\") {\r\n      return optsOrigin;\r\n    } else {\r\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\r\n    }\r\n  })(opts.origin);\r\n  const findAllowMethods = ((optsAllowMethods) => {\r\n    if (typeof optsAllowMethods === \"function\") {\r\n      return optsAllowMethods;\r\n    } else if (Array.isArray(optsAllowMethods)) {\r\n      return () => optsAllowMethods;\r\n    } else {\r\n      return () => [];\r\n    }\r\n  })(opts.allowMethods);\r\n  return async function cors2(c, next) {\r\n    function set(key, value) {\r\n      c.res.headers.set(key, value);\r\n    }\r\n    const allowOrigin = findAllowOrigin(c.req.header(\"origin\") || \"\", c);\r\n    if (allowOrigin) {\r\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\r\n    }\r\n    if (opts.origin !== \"*\") {\r\n      const existingVary = c.req.header(\"Vary\");\r\n      if (existingVary) {\r\n        set(\"Vary\", existingVary);\r\n      } else {\r\n        set(\"Vary\", \"Origin\");\r\n      }\r\n    }\r\n    if (opts.credentials) {\r\n      set(\"Access-Control-Allow-Credentials\", \"true\");\r\n    }\r\n    if (opts.exposeHeaders?.length) {\r\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\r\n    }\r\n    if (c.req.method === \"OPTIONS\") {\r\n      if (opts.maxAge != null) {\r\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\r\n      }\r\n      const allowMethods = findAllowMethods(c.req.header(\"origin\") || \"\", c);\r\n      if (allowMethods.length) {\r\n        set(\"Access-Control-Allow-Methods\", allowMethods.join(\",\"));\r\n      }\r\n      let headers = opts.allowHeaders;\r\n      if (!headers?.length) {\r\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\r\n        if (requestHeaders) {\r\n          headers = requestHeaders.split(/\\s*,\\s*/);\r\n        }\r\n      }\r\n      if (headers?.length) {\r\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\r\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\r\n      }\r\n      c.res.headers.delete(\"Content-Length\");\r\n      c.res.headers.delete(\"Content-Type\");\r\n      return new Response(null, {\r\n        headers: c.res.headers,\r\n        status: 204,\r\n        statusText: \"No Content\"\r\n      });\r\n    }\r\n    await next();\r\n  };\r\n};\r\nexport {\r\n  cors\r\n};\r\n", "import type { Middleware } from \"./common\";\r\n\r\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\r\n\ttry {\r\n\t\treturn await middlewareCtx.next(request, env);\r\n\t} finally {\r\n\t\ttry {\r\n\t\t\tif (request.body !== null && !request.bodyUsed) {\r\n\t\t\t\tconst reader = request.body.getReader();\r\n\t\t\t\twhile (!(await reader.read()).done) {}\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default drainBody;\r\n", "import type { Middleware } from \"./common\";\r\n\r\ninterface JsonError {\r\n\tmessage?: string;\r\n\tname?: string;\r\n\tstack?: string;\r\n\tcause?: JsonError;\r\n}\r\n\r\nfunction reduceError(e: any): JsonError {\r\n\treturn {\r\n\t\tname: e?.name,\r\n\t\tmessage: e?.message ?? String(e),\r\n\t\tstack: e?.stack,\r\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\r\n\t};\r\n}\r\n\r\n// See comment in `bundle.ts` for details on why this is needed\r\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\r\n\ttry {\r\n\t\treturn await middlewareCtx.next(request, env);\r\n\t} catch (e: any) {\r\n\t\tconst error = reduceError(e);\r\n\t\treturn Response.json(error, {\r\n\t\t\tstatus: 500,\r\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default jsonError;\r\n", "export type Awaitable<T> = T | Promise<T>;\r\n// TODO: allow dispatching more events?\r\nexport type Dispatcher = (\r\n\ttype: \"scheduled\",\r\n\tinit: { cron?: string }\r\n) => Awaitable<void>;\r\n\r\nexport type IncomingRequest = Request<\r\n\tunknown,\r\n\tIncomingRequestCfProperties<unknown>\r\n>;\r\n\r\nexport interface MiddlewareContext {\r\n\tdispatch: Dispatcher;\r\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\r\n}\r\n\r\nexport type Middleware = (\r\n\trequest: IncomingRequest,\r\n\tenv: any,\r\n\tctx: ExecutionContext,\r\n\tmiddlewareCtx: MiddlewareContext\r\n) => Awaitable<Response>;\r\n\r\nconst __facade_middleware__: Middleware[] = [];\r\n\r\n// The register functions allow for the insertion of one or many middleware,\r\n// We register internal middleware first in the stack, but have no way of controlling\r\n// the order that addMiddleware is run in service workers so need an internal function.\r\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\r\n\t__facade_middleware__.push(...args.flat());\r\n}\r\nexport function __facade_registerInternal__(\r\n\t...args: (Middleware | Middleware[])[]\r\n) {\r\n\t__facade_middleware__.unshift(...args.flat());\r\n}\r\n\r\nfunction __facade_invokeChain__(\r\n\trequest: IncomingRequest,\r\n\tenv: any,\r\n\tctx: ExecutionContext,\r\n\tdispatch: Dispatcher,\r\n\tmiddlewareChain: Middleware[]\r\n): Awaitable<Response> {\r\n\tconst [head, ...tail] = middlewareChain;\r\n\tconst middlewareCtx: MiddlewareContext = {\r\n\t\tdispatch,\r\n\t\tnext(newRequest, newEnv) {\r\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\r\n\t\t},\r\n\t};\r\n\treturn head(request, env, ctx, middlewareCtx);\r\n}\r\n\r\nexport function __facade_invoke__(\r\n\trequest: IncomingRequest,\r\n\tenv: any,\r\n\tctx: ExecutionContext,\r\n\tdispatch: Dispatcher,\r\n\tfinalMiddleware: Middleware\r\n): Awaitable<Response> {\r\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\r\n\t\t...__facade_middleware__,\r\n\t\tfinalMiddleware,\r\n\t]);\r\n}\r\n"],
  "mappings": "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",
  "names": ["process", "init_process", "__esmMin", "fn", "args", "performance", "init_perf_hooks", "origin", "init_function", "init_weakref", "require_buffer5f006e10", "__commonJSMin", "exports", "init_buffer", "q", "i", "r", "H", "C", "sr", "ar", "xr", "B", "w", "pr", "N", "m", "W", "j", "t", "n", "lr", "e", "o", "u", "f", "c", "yr", "wr", "V", "M", "l", "s", "p", "F", "x", "L", "cr", "k", "U", "X", "h", "Ir", "S", "Br", "d", "P", "Z", "dr", "gr", "E", "$", "mr", "Q", "Er", "O", "v", "D", "Y", "b", "fr", "Fr", "Mr", "tr", "Lr", "Nr", "Sr", "kr", "I", "rr", "z", "Ar", "Ur", "_", "Rr", "Pr", "Tr", "Cr", "Or", "_r", "J", "Gr", "a", "g", "R", "T", "y", "ir", "hr", "nr", "er", "or", "ur", "A", "G", "K", "Dr", "$r", "br", "Yr", "import_buffer", "existsSync", "lstatSync", "statSync", "readdirSync", "readdir", "cb", "readlinkSync", "realpathSync", "chmodSync", "renameSync", "mkdirSync", "rmdirSync", "rmSync", "unlinkSync", "promises", "fs", "fs_default", "init_fs", "resolve", "join", "parse", "path", "base", "basename", "dir", "dirname", "name", "ext", "parts", "sep", "posix", "path_default", "init_path", "require_package", "module", "require_engines_version", "require_indent_string", "string", "count", "options", "regex", "require_ansi_regex", "onlyFirst", "pattern", "require_strip_ansi", "ansiRegex", "require_js_levenshtein", "_min", "d0", "d1", "d2", "bx", "ay", "tmp", "la", "lb", "offset", "d3", "dd", "dy", "bx0", "bx1", "bx2", "bx3", "vector", "len", "init_TypeBuilder", "init_KeyType", "EventEmitter", "init_events", "event", "listener", "index_exports", "__export", "src_exports", "Debug", "decimal_default", "extensions_exports", "MetricsClient", "PrismaClientInitializationError", "PrismaClientKnownRequestError", "PrismaClientRustPanicError", "PrismaClientUnknownRequestError", "PrismaClientValidationError", "public_exports", "Sql", "createParam", "defineDmmfProperty", "deserializeJsonResponse", "deserializeRawResult", "dmmfToRuntimeDataModel", "empty", "getPrismaClient", "getRuntime", "makeStrictEnum", "makeTypedQueryFactory", "objectEnumValues", "raw", "serializeJsonQuery", "skip", "sql", "warnOnce", "__toCommonJS", "defineExtension", "getExtensionContext", "client", "that", "validator", "_args", "FORCE_COLOR", "NODE_DISABLE_COLORS", "NO_COLOR", "TERM", "isTTY", "init", "rgx", "open", "close", "txt", "reset", "bold", "dim", "italic", "underline", "inverse", "hidden", "strikethrough", "black", "red", "green", "yellow", "blue", "magenta", "cyan", "white", "gray", "grey", "bgBlack", "bgRed", "bgGreen", "bgYellow", "bgBlue", "bgMagenta", "bgCyan", "bgWhite", "MAX_ARGS_HISTORY", "COLORS", "argsHistory", "lastTimestamp", "lastColor", "processEnv", "topProps", "namespace", "prev", "listenedNamespaces", "isListened", "listenedNamespace", "isExcluded", "format", "rest", "debugCreate", "instanceProps", "debugCall", "enabled", "color", "log", "stringArgs", "arg", "safeStringify", "ms", "prop", "value", "indent", "cache", "key", "clearLogs", "packageJson", "version", "getClientEngineType", "generatorConfig", "engineTypeFromEnvVar", "getEngineTypeFromEnvVar", "getDefaultEngineType", "engineType", "PRISMA_POSTGRES_PROVIDER", "PRISMA_POSTGRES_PROTOCOL", "isPrismaPostgres", "connectionString", "isPrismaPostgresDev", "host", "logger_exports", "error", "info", "query", "should", "tags", "warn", "data", "message", "optionalParams", "assertNever", "errorMessage", "hasOwnProperty", "object", "mapObjectValues", "mapper", "result", "maxWithComparator", "items", "comparator", "setClassName", "classObject", "alreadyWarned", "_PrismaClientInitializationError", "clientVersion", "errorCode", "code", "meta", "batchRequestIdx", "EXP_LIMIT", "MAX_DIGITS", "NUMERALS", "LN10", "PI", "DEFAULTS", "inexact", "quadrant", "external", "decimalError", "invalidArgument", "precisionLimitExceeded", "cryptoUnavailable", "tag", "mathfloor", "mathpow", "isBinary", "isHex", "isOctal", "isDecimal", "BASE", "LOG_BASE", "MAX_SAFE_INTEGER", "LN10_PRECISION", "PI_PRECISION", "finalise", "min", "max", "Ctor", "xdL", "ydL", "xd", "yd", "xs", "ys", "rm", "cosine", "toLessThanHalfPi", "rep", "sd", "t3", "t3plusx", "digitsToString", "divide", "one", "tinyPow", "taylorSeries", "cosh2_x", "d8", "sinh2_x", "d5", "d16", "d20", "getPi", "wpr", "xsd", "halfPi", "px", "x2", "isBase10", "denominator", "inf", "num", "guard", "naturalLogarithm", "getLn10", "checkRoundingDigits", "xe", "xLTy", "getBase10Exponent", "naturalExponential", "carry", "getPrecision", "sine", "rL", "toStringBinary", "dp", "checkInt32", "str", "finiteToString", "maxD", "n0", "n1", "yn", "intPow", "ws", "indexOfLastWord", "getZeroString", "repeating", "di", "rd", "convertBase", "baseIn", "baseOut", "arr", "arrL", "strL", "cos2x", "multiplyInteger", "temp", "compare", "aL", "bL", "subtract", "cmp", "logBase", "more", "prod", "prodL", "qd", "rem", "remL", "rem0", "xi", "xL", "yd0", "yL", "yz", "sign", "isTruncated", "digits", "roundUp", "xdi", "out", "isExp", "nonFiniteToString", "zs", "truncate", "isOdd", "maxOrMin", "pow", "sum", "c0", "numerator", "x1", "parseDecimal", "parseOther", "divisor", "isFloat", "Decimal", "sin2_x", "isHyperbolic", "isNeg", "pi", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atanh", "atan2", "cbrt", "ceil", "clamp", "config", "obj", "useDefaults", "ps", "cos", "cosh", "clone", "isDecimalInstance", "div", "exp", "floor", "hypot", "ln", "log10", "log2", "mod", "mul", "random", "round", "sin", "sinh", "sqrt", "sub", "tan", "tanh", "trunc", "isTaggedValue", "deserializeTaggedValue", "$type", "buffer", "byteOffset", "byteLength", "Cache", "create", "cached", "uncapitalize", "self", "keyBy", "collection", "acc", "lazyProperty", "compute", "resultContainer", "dmmfDataModel", "buildMapForRuntime", "list", "isDate", "isValidDate", "date", "isDecimalJsLike", "ModelAction", "datamodelEnumToSchemaEnum", "datamodelEnum", "import_indent_string", "colorsEnabled", "source", "colorsDisabled", "getRawTemplateParameters", "originalMethod", "isPanic", "callArguments", "stringifyErrorMessage", "functionName", "location", "contextLines", "colors", "lines", "introSuffix", "stringifyLocationInFile", "contextLineParts", "createErrorMessageWithContext", "templateParameters", "import_js_levenshtein", "applyUnionError", "globalOmit", "allErrors", "flattenUnionError", "merged", "mergeInvalidArgumentTypeErrors", "bestError", "getBestScoringError", "applyValidationError", "errorList", "invalidArgsError", "prevError", "uniqueConcat", "head", "tail", "errors", "errorA", "errorB", "aPathLength", "getCombinedPathLength", "bPathLength", "getErrorTypeScore", "score", "ObjectFieldSuggestion", "writer", "Writer", "startingIndent", "context", "separator", "values", "writeItem", "item", "last", "line", "afterNextNewLineCallback", "callback", "symbol", "ArrayField", "noop", "inactiveColors", "activeColors", "fieldsSeparator", "FormattedString", "contents", "paddingSize", "Value", "ArrayValue", "index", "output", "ObjectValue", "_ObjectValue", "field", "suggestion", "firstField", "segment", "nextField", "selection", "next", "thisParent", "parent", "nextParent", "select", "include", "fields", "ScalarValue", "text", "SuggestionObjectValue", "applyMutuallyExclusiveFieldsError", "applyIncludeOnScalarError", "applyEmptySelectionError", "applyUnknownSelectionFieldError", "applyInvalidSelectionValueError", "applyUnknownArgumentError", "applyUnknownInputFieldError", "applyRequiredArgumentMissingError", "applyInvalidArgumentTypeError", "applyInvalidArgumentValueError", "applyValueTooLargeError", "applySomeFieldsMissingError", "applyTooManyFieldsGivenError", "argsTree", "selectionPath", "splitPath", "outputType", "msg", "availableOptionsMessage", "subSelection", "omit", "applyEmptySelectionErrorOmit", "applyEmptySelectionErrorSelect", "applyEmptySelectionErrorGlobalOmit", "omitValue", "isEmpty", "addSelectionSuggestions", "suggestedOmitConfig", "omitSuggestion", "parentPath", "fieldName", "fieldValue", "locateResult", "locateSelectionField", "addInclusionSuggestions", "addOmissionSuggestions", "argName", "addArgumentsSuggestions", "unknownArgumentMessage", "argParentPath", "argParent", "addInputSuggestions", "getSuggestion", "existingField", "argumentName", "objectSuggestion", "typeName", "getInputTypeName", "description", "expected", "joinWithPreposition", "type", "printedValue", "argument", "providedArguments", "argumentsParent", "inputType", "preposition", "itemsCopy", "lastItem", "MAX_EDIT_DISTANCE", "minDistance", "option", "editDistance", "levenshtein", "FieldRefImpl", "modelName", "fieldType", "isList", "isEnum", "listPrefix", "enumPrefix", "isFieldRef", "secret", "representations", "ObjectEnumValue", "NullTypesEnumValue", "DbNull", "#_brand_DbNull", "JsonNull", "#_brand_JsonNull", "AnyNull", "#_brand_AnyNull", "ObjectField", "ArgumentsRenderingTree", "renderer", "messageRenderer", "buildArgumentsRenderingTree", "buildInputObject", "inputObject", "buildInputValue", "dateStr", "buildInputArray", "array", "renderArgsTree", "errorFormat", "throwValidationException", "callsite", "renderedArgs", "messageWithContext", "dmmfToJSModelName", "getComputedFields", "previousComputedFields", "extension", "dmmfModelName", "jsName", "resolveDependencies", "getComputedFieldsFromModel", "computedFields", "resolveNeeds", "visitedFields", "fieldDep", "modelResult", "needs", "composeCompute", "nextCompute", "previousCompute", "model", "computeEngineSideSelection", "dependency", "computeEngineSideOmissions", "omission", "MergedExtensionsListNode", "previous", "newCb", "jsModelName", "operation", "prevCbs", "newCbs", "MergedExtensionsList", "_MergedExtensionsList", "ParamImpl", "isParam", "Skip", "param", "isSkip", "jsActionToProtocolAction", "STRICT_UNDEFINED_ERROR_MESSAGE", "action", "runtimeDataModel", "extensions", "clientMethod", "previewFeatures", "SerializeContext", "serializeFieldSelection", "serializeArgumentsObject", "serializeSelectionSet", "createExplicitSelection", "createImplicitSelection", "selectionSet", "addIncludedRelations", "omitFields", "nestedContext", "validateSelectionForUndefined", "localOmit", "combinedOmits", "omitWithComputedFields", "selectWithComputedFields", "serializeArgumentsValue", "jsValue", "serializeArgumentsArray", "isRawParameters", "isJSONConvertible", "itemContext", "valueName", "_SerializeContext", "params", "previewFeature", "checkPreviewFeatureFlag", "target", "dmmfLazy", "runtimeDataModelToBaseDmmf", "buildDMMFList", "map", "props", "internals", "TypedSqlMarker", "TypedSql", "isTypedSql", "import_package", "_Sql", "rawStrings", "rawValues", "valuesLength", "pos", "child", "rawString", "childIndex", "prefix", "suffix", "strings", "addObjectProperties", "addProperty", "factory", "cacheProperties", "baseLayer", "defaultPropertyDescriptor", "defaultProxyHandlers", "ownKeys", "_ownKeys", "customInspect", "createCompositeProxy", "layers", "keysToLayerMap", "mapKeysToLayers", "overwrittenKeys", "proxy", "layer", "targetKeys", "getExistingKeys", "layerKeys", "original", "property", "attributes", "toLog", "keys", "removeProperties", "getBatchRequestPayload", "batch", "transaction", "prettyPrintArguments", "tree", "TOO_MANY_CONNECTIONS_ERROR", "prismaGraphQLToJSError", "user_facing_error", "activeProvider", "getKnownErrorMessage", "userFacingError", "DisabledCallSite", "getCallSite", "aggregateMap", "desugarUserArgs", "desugarCountInUserArgs", "aggregateArgs", "createUnpacker", "aggregate", "modelAction", "aggregateUnpacker", "row", "groupBy", "applyAggregates", "userArgs", "applyFieldsProxy", "scalarFieldsList", "scalarFields", "dmmfField", "ks", "deepGet", "kp", "deepSet", "getNextDataPath", "fluentPropName", "prevDataPath", "getNextUserArgs", "callArgs", "prevArgs", "nextDataPath", "applyFluent", "prevUserArgs", "dmmfModelFieldMap", "nextUserArgs", "prismaPromise", "getOwnKeys", "modelArgs", "dataArgs", "fluentProps", "aggregateProps", "applyModel", "modelExtensions", "modelActionsLayer", "fieldsPropertyLayer", "dmmfActionName", "paramOverrides", "callSite", "isValidAggregateName", "jsToDMMFModelName", "rawClient", "applyModelsAndClientExtensions", "rootLayer", "modelsLayer", "clientExtensions", "prototype", "allKeys", "dmmfModelKeys", "jsModelKeys", "unApplyModelsAndClientExtensions", "$extends", "Engine", "newClient", "applyResultExtensions", "computedPropertiesLayers", "maskingLayers", "toMask", "areNeedsMet", "computedPropertyLayer", "neededProperties", "visitQueryResult", "visitor", "visitResult", "visitNested", "includeOrSelect", "parentModelName", "subConfig", "applyAllResultExtensions", "denylist", "itxClientDenyList", "deepCloneArgs", "cloneSql", "cloneTypedSql", "deepCloneValue", "rawParam", "copy", "iterateAndCallQueryCallbacks", "queryCbs", "prevCustomFetch", "__internalParams", "currCustomFetch", "composeCustomDataProxyFetch", "applyQueryExtensions", "cbs", "createApplyBatchExtensionsFunction", "executeBatch", "requests", "callbacks", "iterateAndCallBatchCallbacks", "prevFetch", "request", "nextFetch", "noopFetch", "debug", "cachingPlatforms", "checkPlatformCaching", "postinstall", "ciName", "getDatasourceOverrides", "datasourceNames", "isNode", "isBun", "isDeno", "isNetlify", "isEdgeLight", "isWorkerd", "detectRuntime", "check", "runtimesPrettyNames", "runtimeId", "resolveDatasourceUrl", "inlineDatasources", "overrideDatasources", "env", "resolvedUrl", "datasourceName", "datasourceUrl", "overrideUrl", "PrismaClientError", "DataProxyError", "setRetryable", "retryable", "InvalidDatasourceError", "getUrlAndApiKey", "errorInfo", "dsName", "serviceURL", "url", "protocol", "searchParams", "apiKey", "httpScheme", "httpUrl", "import_engines_version", "HeaderBuilder", "tracingHelper", "logLevel", "logQueries", "engineHash", "traceparent", "transactionId", "headers", "captureTelemetry", "#buildCaptureSettings", "convertEngineTimestamp", "timestamp", "dateFromEngineTimestamp", "ForcedRetryError", "NotImplementedYetError", "DataProxyAPIError", "requestId", "messageSuffix", "SchemaMissingError", "BAD_REQUEST_DEFAULT_MESSAGE", "BadRequestError", "HealthcheckTimeoutError", "logs", "EngineStartupError", "EngineVersionNotSupportedError", "GATEWAY_TIMEOUT_DEFAULT_MESSAGE", "GatewayTimeoutError", "INTERACTIVE_TRANSACTION_ERROR_DEFAULT_MESSAGE", "InteractiveTransactionError", "INVALID_REQUEST_DEFAULT_MESSAGE", "InvalidRequestError", "NOT_FOUND_DEFAULT_MESSAGE", "NotFoundError", "SERVER_ERROR_DEFAULT_MESSAGE", "ServerError", "UNAUTHORIZED_DEFAULT_MESSAGE", "UnauthorizedError", "USAGE_EXCEEDED_DEFAULT_MESSAGE", "UsageExceededError", "getResponseErrorBody", "response", "reason", "responseToError", "error_code", "messageByReason", "buildErrorMessage", "defaultMessage", "errorBody", "backOff", "baseDelay", "jitter", "total", "done", "encodings", "toBase64", "bytes", "base64", "byteRemainder", "mainLength", "chunk", "checkForbiddenMetrics", "engineConfig", "feature", "dependencies", "RequestError", "customFetch", "fetch", "fetchOptions", "decoratedFetch", "semverRegex", "_getClientVersion", "engineVersion", "major", "minor", "patch", "pkgURL", "prismaPkgURL", "res", "bodyAsText", "bodyAsJson", "getClientVersion", "MAX_RETRIES", "DataProxyEngine", "spanOptions", "interactiveTransaction", "customDataProxyFetch", "queries", "body", "logHttpCall", "actionToGerund", "id", "endpoint", "attempt", "delay", "validateEngineInstanceConfig", "adapter", "copyEngine", "targetBuildType", "warnings", "pushWarning", "input", "pushError", "isUsingPrismaAccelerate", "isUsingPrismaPostgres", "isUsingDriverAdapters", "isAccelerateUrlScheme", "isAccelerateConfigured", "isUsing", "isNonEmptyArray", "getEngineInstance", "ok", "diagnostics", "warning", "libraryEngineConfigured", "binaryEngineConfigured", "clientEngineConfigured", "clientEngineUsesRemoteExecutor", "getPreviewFeatures", "generator", "rawCommandArgsMapper", "command", "mssqlPreparedStatement", "idx", "serializeRawParameters", "parameters", "serializeRawParametersInternal", "objectSerialization", "parameter", "encodeParameter", "isArrayBufferLike", "preprocessObject", "preprocessValueInObject", "ALTER_RE", "checkAlter", "invalidCall", "rawQueryArgsMapper", "queryString", "templateStringMiddlewareArgsMapper", "requestArgs", "sqlMiddlewareArgsMapper", "createPrismaPromiseFactory", "op", "promise", "_callback", "callbackTransaction", "valueToPromise", "onFulfilled", "onRejected", "onFinally", "batchTransaction", "thing", "majorVersion", "disabledTracingHelper", "DynamicTracingHelper", "spans", "versionedPrismaInstrumentationGlobal", "fallbackPrismaInstrumentationGlobal", "getTracingHelper", "getLockCountPromise", "knock", "lock", "getLogLevel", "curr", "currentLevel", "MiddlewareHandler", "middleware", "import_strip_ansi", "hasBatchIndex", "getBatchId", "buildKeysString", "writeMap", "isWrite", "DataLoader", "hash", "reject", "results", "deserializeValue", "deserializedResponse", "prebuiltEmptyObject", "createPrebuiltEmptyResultObject", "mappedRow", "RequestHandler", "logEmitter", "otelParentCtx", "containsWrite", "getTransactionOptions", "getItxTransactionOptions", "requestA", "requestB", "dataPath", "unpacker", "err", "isMismatchingBatchIndex", "isValidationError", "validationError", "convertValidationError", "stripAnsi", "pathForGet", "extractedResponse", "PrismaClientConstructorValidationError", "knownProperties", "errorFormats", "logLevels", "validators", "didYouMean", "getDidYouMean", "key1", "value1", "validateLogLevel", "level", "logValidators", "emits", "maxWait", "timeout", "validationErrors", "modelKey", "modelConfig", "modelOrType", "getModelOrTypeByKey", "renderOmitValidationErrors", "knownKeys", "validatePrismaClientOptions", "alternative", "getAlternative", "optionsWithDistances", "leven", "bestAlternative", "findByKey", "foundKey", "mapKey", "omitConfig", "waitForBatch", "successfulResults", "settledPromisesCount", "settleOnePromise", "immediatelyReject", "noopMiddlewareArgsMapper", "TX_ID", "BatchTxIdCounter", "PrismaClient", "optionsArg", "envPaths", "expectedDriverAdapterProvider", "loadedEnv", "internal", "useDebug", "cwd", "enginesVersion", "eventType", "middlewareArgsMapper", "argsMapper", "toSql", "typedSql", "isolationLevel", "optionsWithDefaults", "internalParams", "consumer", "changedMiddlewareParams", "nextMiddleware", "span", "runInTransaction", "changedRequestParams", "requestParams", "isTemplateStringArray", "allowList", "definition", "require_edge", "PrismaClientKnownRequestError", "PrismaClientUnknownRequestError", "PrismaClientRustPanicError", "PrismaClientInitializationError", "PrismaClientValidationError", "getPrismaClient", "sqltag", "empty", "join", "raw", "skip", "Decimal", "Debug", "objectEnumValues", "makeStrictEnum", "Extensions", "warnOnce", "defineDmmfProperty", "Public", "getRuntime", "createParam", "PrismaClient", "require_edge", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__copyProps", "PrismaClient", "raw", "raw", "raw", "k", "p", "app", "b", "k", "k", "b", "p", "Node", "p", "k", "b", "Node", "Hono", "x", "p", "verify", "decode", "sign", "import_default_index", "w", "l", "Hono", "sign", "import_edge", "Hono", "decode", "verify", "Hono"]
}
